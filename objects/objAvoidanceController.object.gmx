<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>t = global.start_time; //Это счетчик кадров

t = 0;
//t = 5775;

segment = 1;

angle = 0;
shake = 0;

blockBulletSpawn = false;

startSegment = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug
if( global.debugMode ) {
    if( keyboard_check(vk_enter) ) {
        room_speed = 1000;
    } else {
        room_speed = 50;
    }
    
    if( keyboard_check_pressed( vk_space ) ) {
        show_debug_message( string( t ) );
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Обнуление разного
shake = 0;
angle = lerp(angle, 0, 0.1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 1 (0:00 - 0:23) Happy Intro
if( t &gt;= 19 &amp;&amp; t &lt; 1165 &amp;&amp; instance_exists(objPlayer) ) {
    if( t == 19 ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 19;
    if( phaseT &lt; 96 * 10 ) {
        var period;
        if( phaseT &lt; 96 * 6 ) {
            period = 4;
        } else if( phaseT &lt; 96 * 8 ) {
            period = 6;
        } else {
            period = 4;
        }
        if( phaseT % period == 0 ) {
            var spawnX = 0;
            var spawnY = 0;
            if( phaseT &lt; 96 * 4 ) {
                spawnX = choose( 0, 800 );
                spawnY = 0;
            } else if( phaseT &lt; 96 * 6 ) {
                spawnX = choose( 0, 800 );
                spawnY = lerp( 0, 608, spawnX / 800 );
            } else if( phaseT &lt; 96 * 8 ) {
                spawnX = choose( 0, 800 );
                spawnY = lerp( 608, 0, spawnX / 800 );
            } else if( phaseT &lt; 96 * 10 ) {
                spawnX = choose( 0, 800 );
                spawnY = 608;
            } else if( phaseT &lt; 96 * 12 ) {
                spawnX = choose( 0, 800 );
                spawnY = choose( 0, 608 );
            }
            var obj = instance_create( spawnX, spawnY, objAlgSphere );
            obj.image_blend = make_colour_hsv( random_range( -10, 10 ), 255, 255 ); 
            obj.speed = random_range( 3, 6 );
            obj.direction = point_direction( obj.x, obj.y, random( 800 ), random( 608 ) );
            obj.isSpeedReduced = false;
        }
    } else {
         if( phaseT % 2 == 0 ) {
            var spawnX = choose( 0, 800 );
            var spawnY = choose( 0, 608 );
            var obj = instance_create( spawnX, spawnY, objAlgSphere );
            obj.image_blend = make_colour_hsv( random_range( -10, 10 ), 255, 255 ); 
            obj.speed = random_range( 2, 6 );
            obj.direction = point_direction( obj.x, obj.y, random( 800 ), random( 608 ) );
            obj.isSpeedReduced = false;
        }
    }
    
    if( phaseT &gt;= 96 * 4 &amp;&amp; phaseT % 192 == 0 ) {
        with( objAlgSphere ) {
            if( !isSpeedReduced ) {
                direction = random_range( 240, 300 );
                speed /= 2;
                
                var obj = instance_create( x, y, objAlgA1SphereEffect );
                obj.speed = speed;
                obj.direction = direction;
                obj.image_alpha = image_alpha / 2;
                
                isSpeedReduced = true;
            }
        }
    }
    if( t == 1164 ) {
        with( objAlgSphere ) {
            instance_change( objAlgSphere, false );
            direction = scrTargetPlayer( x, y ) + 180;
            speed = 10;
        }
        with( oRedireS1Effect ) {
            direction = scrTargetPlayer( x, y ) + 180;
            speed = 10;
        }
    }
    
    if( phaseT % 2 == 0 || phaseT % 3 == 0 ) {
        a = instance_create( random_range( 0, 800 ), 0, oRedireS1Effect );
        a.direction = -90 + random_range( -2, 2 );
        a.speed = random_range( 1, 1.5 );
        a.image_alpha = random_range( 0.01, 0.3 );
        a.image_index = irandom_range( 0, 3 );
        var scale = random_range( 0.35, 0.5 );
        a.image_xscale = scale;
        a.image_yscale = scale;
    }
    
    //Arch
    if( phaseT % 12 == 0 ) {
        var arch_p1_rad = phaseT * 3;
        a = instance_create(400 + lengthdir_x(64, arch_p1_rad), 200 + lengthdir_y(64, arch_p1_rad), objInverseCircle);
        a.rspd = 400/100;
    }
    segment = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 2 (0:23 - 0:39) Descent To Madness
if( t &gt;= 1165 &amp;&amp; t &lt; 1930 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 1165;
    if( phaseT == 0 ) {
        seg2Counter = 0;
        seg2SpawnLeft = true;
    }

    if( phaseT % 24 == 0 ) {
        var nerf = 0.85;
        if( seg2Counter % 2 == 0 ) {
            var rngBallCount;
            if( phaseT &gt;= 4 * 96 ) {
                rngBallCount = 7;
            } else {
                rngBallCount = 8;
            }
            repeat( rngBallCount ) {
                var obj = instance_create( random_range( 50, 750 ), 304, objAlgA2Sphere );
                obj.image_blend = make_colour_hsv( random_range( 140, 160 ), 255, 255 ); 
                obj.vspeed = -random_range( 7, 13 ) * nerf;
                obj.hspeed = random_range( -3, 3 ) * nerf;
            }
        } else {
            var wallDir = random_range( 80, 100 );
            var wallSpeed = random_range( 12, 13 );
            var wallHSpeed = choose( random_range( -2.5, -2 ), random_range( 2, 2.5 ) );
            var wallColor = make_colour_hsv( random_range( 180, 200 ), 255, 255 );
            for( var i = 0; i &lt; 13; i++ ) {
                var obj = instance_create( lerp( -200, 1000, i / 12 ), 304, objAlgA2Sphere );
                obj.image_blend = wallColor;
                obj.speed = wallSpeed * nerf;
                obj.direction = wallDir;
                obj.hspeed += wallHSpeed; 
                obj.bounceHorizontally = false;
            }
        }
        seg2Counter++;
    } 
    if( phaseT &gt;= 4 * 96 &amp;&amp; ( 765 - phaseT ) &gt;= 96 &amp;&amp; phaseT % 48 == 0 ) {
        var obj;
        if( seg2SpawnLeft ) {
            obj = instance_create( 32, 0, objAlgA2Spawner );
        } else {
            obj = instance_create( 800 - 32, 0, objAlgA2Spawner );
        }
        obj.image_blend = make_colour_hsv( random_range( 140, 160 ), 255, 255 ); 
        obj.vspeed = 6;
        seg2SpawnLeft = !seg2SpawnLeft;
    }
    
    if( phaseT &gt; 20 &amp;&amp; phaseT % 2 == 0 ) {
        var obj = instance_create( random( 800 ), random( 608 ), objAlgBackEffect );
        obj.alphaStep = 0.02;
        obj.speed = random_range( 2, 3 );
        obj.direction = random_range( 0, 360 );
        obj.image_blend = make_colour_hsv( random_range( 140, 160 ), 255, 255 );
        obj.image_xscale = 0.5;
        obj.image_yscale = 0.5;
    }
    segment = 2;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Red Segment 3 (0:39 - 0:54) Tradeoff
if( t &gt;= 1930 &amp;&amp; t &lt; 2705 &amp;&amp; instance_exists(objPlayer) ) {
    segment = 3;
    // Left corner circles.
    if( t == 1945 || t == 2040 || t == 2135 || t == 2230 ) {
        scrRedireS3CreateCircle( 0, 0 );
    }
    // Right corner circles.
    if( t == 1990 || t == 2085 || t == 2180 || t == 2275 ) {
        scrRedireS3CreateCircle( 800, 1 );
    }
    
    // Ceiling arrows.
    if( t == 1930 ) {
        instance_create( 0, 0, oRedireS3ArrowSpawner );
    }
    
    // Density increase before the slowdown.
    if( t == 2220 ) {
        with( oRedireS3ArrowSpawner ) {
            spawnPeriod = 0.6;
        }
    }
 
    // Slow down.
    if( t == 2320 ) {
        with( oRedireS3CircleBullet ) { speed = 1.3; }
        with( oRedireS3Arrow ) { speed = 1.3; }
        with( oRedireS3ArrowSpawner ) { instance_destroy(); }
        // Spawn shadows.
        with( oRedireS3Arrow ) {
            var shadow = instance_create( x, y, oRedireS3Shadow );
            shadow.sprite_index = sprite_index;
            shadow.image_angle = image_angle;
            shadow.direction = direction;
            shadow.image_xscale = image_xscale;
            shadow.image_yscale = image_yscale;
            shadow.image_speed = 0;
            shadow.speed = speed / 2;
            shadow.alphaDelta = random_range( 0.0015, 0.005 );
        }
    }
    
    // Effects by Algeran
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    if( t == 2320 ) {
        with( objAlgBackEffect ) {
            speed /= 2;
        }
    } else {
        var scale = random_range( 0.2, 0.5 )
        var obj = instance_create( random( 800 ), random( 608 ), objAlgBackEffect );
        obj.alphaStep = 0.01;
        if( t &lt; 2320 ) {
            obj.speed = random_range( 2, 3 );
        } else {
            obj.speed = random_range( 1, 1.5 );
        }
        obj.direction = random_range( 260, 280 );
        if( obj.x &lt; 400 ) {
            obj.image_blend = make_colour_hsv( 0, 255, 255 );
        } else {
            obj.image_blend = make_colour_hsv( 170, 255, 255 );
        }
        obj.image_xscale = scale;
        obj.image_yscale = scale;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 4 (0:54 - 1:09) Ascent
if( t &gt;= 2705 &amp;&amp; t &lt; 3473 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    
    var phaseT = t - 2705;
    if( phaseT &lt; 96 * 7 &amp;&amp; phaseT % 24 == 0 ) {
    
        var spawnX = choose( -27, 827 );
        var spawnY = random_range( 0, 400 );
        var obj = instance_create( spawnX, spawnY, objAlgA6Spawner );
        obj.direction = point_direction( spawnX, spawnY, 800 - spawnX, random_range( 0, 400 - spawnY ) );
        obj.speed = 8;
        obj.image_blend = make_color_hsv( random( 255 ), 255, 255 );
    }
    
    if( phaseT % 96 == 95 ) {
        with( objAlgFragAppearing ) {
            speed = random_range( 5, 7 );
            friction = 0;
            curve = 0;
        }
    }
    
    if( phaseT % 4 == 0 ) {
        with( objAlgA6Spawner ) {
            var scale = random_range( 0.2, 0.5 )
            var obj = instance_create( x, random( 608 ), objAlgBackEffect );
            obj.alphaStep = 0.02;
            obj.speed = random_range( 1, 1.5 );
            if( hspeed &gt; 0 ) {
                obj.direction = random_range( -20, 20 );
            } else {
                obj.direction = 180 + random_range( -20, 20 );
            }
            obj.image_blend = image_blend;
            obj.image_xscale = scale;
            obj.image_yscale = scale;
        }
    }
    
    segment = 4;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 5 (1:09 - 1:25) Bitchin Bach
if( t &gt;= 3470 &amp;&amp; t &lt; 4240 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 3470;
    if( phaseT == 0 ) {
        segment5Color = 0;
    }
    if( phaseT % 12 == 0 ) {
        var initialAngle = random_range( 70, 110 );
        var spawnX = random_range( 50, 750 );
        segment5Color = random( 255 );
        var spawnCount = 9;
        if( phaseT &gt;= 96 * 4 ) {
            spawnCount = 6;
        }
        repeat( spawnCount ) {
            var obj = instance_create( spawnX, 608, objAlgA5Sphere );
            obj.speed = random_range( 10, 16 );
            obj.maxSpeed = obj.speed;
            obj.gravity = 0.15;
            obj.direction = initialAngle + random_range( -10, 10 );
            //obj.sprite_index = sprRedireSphereGrey;
            var color = ( segment5Color + random_range( -10, 10 ) ) % 255;
            if( color &lt; 0 ) {
                color += 255;
            }
            obj.image_blend = make_colour_hsv( color, 255, 255 );
            obj.shouldKill = false;
            obj.image_alpha = 0;
        }
    }
    
    if( phaseT &gt;= 96 * 4 &amp;&amp; phaseT % 24 == 0 ) {
        var spawnCenter = lerp( 150, 650, scrGetPlayerX() / 800 );
        var spawnX = spawnCenter + random_range( -150, 150 );
        var spawnY = random_range( 50, 150 );
        var spawnAngle = scrTargetPlayer( spawnX, spawnY );
        scrMakeCircle( spawnX, spawnY, spawnAngle, 10, 12, objAlgA5Kunai );
    }
    
    if( t == 4239 ) {
        with( objAlgA5Sphere ) {
            instance_change( objAlgSphere, false );
            image_alpha = 1;
            shouldKill = false;
            if( x &lt; scrGetPlayerX() ) {
                hspeed = -10;
            } else {
                hspeed = 10;
            }
        }
        with( objAlgA5Kunai ) {
            direction = scrTargetPlayer( x, y ) + 180;
        }
    }
    
    // Effects
    if( phaseT &gt; 96 * 4 || phaseT % 2 == 0 ) {
        var obj = instance_create( random( 800 ), choose( -10, 618 ), objAlgA8Effect );
        if( phaseT &lt;= 96 * 4 ) {
            obj.speed = random_range( 5, 7.5 );
        } else {
            obj.speed = random_range( 7.5, 11.25 );
        }
        if( obj.y &lt; 304 ) {
            obj.direction = random_range( 260, 280 );
        } else {
            obj.direction = random_range( 80, 100 );
        }
        obj.maxSpeed = obj.speed;
        obj.image_alpha = random_range( 0.01, 0.3 );
        obj.image_xscale = 0.34;
        obj.image_yscale = 0.34;
        obj.image_blend = make_color_hsv( segment5Color, 255, 255 );
    }
    
    if( phaseT == 96 * 4 ) {
        with( objAlgA8Effect ) {
            maxSpeed *= 1.5;
            friction = - 0.5;
        }
    }
    
    segment = 5;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 6 (1:25 - 1:40) Chorus 1
if( t &gt;= 4240 &amp;&amp; t &lt; 5003 &amp;&amp; instance_exists(objPlayer) ) {
    if( t == 4240 ) {
        seg6Angle = random(360);
    }
    var phaseT = t - 4240;
    if( phaseT &lt; 96 ) {
        var count = 2;
        if( phaseT % 4 == 0 ) {
            count = 1;
        }
        repeat(count) {
            a = instance_create(128+random(16), 128+random(16), objArchBullet1);
            a.tag = 1;
            a.direction = seg6Angle;
            a.speed = random_range(3,12);
            a.image_xscale = 0.8;
            a.image_yscale = 0.8;
            seg6Angle += random_range( 40, 90 );
        }
        with(objArchBullet1) {
            if( tag == 1 ) {
                direction += 7;
            }
        }
    }
    if( phaseT &gt;= 96 * 2 &amp;&amp; phaseT &lt; 96 * 3 ) {
        if( phaseT % 5 == 0 ) {
            a = instance_create(800-128-random(16), 128+random(16), objArchBullet1);
            a.tag = 2;
            a.direction = random(360);
            a.speed = random_range(7.5,13.5);
        }
        with(objArchBullet1) {
            if( tag == 2 ) {
                direction -= 7;
            }
        }
    } else if( phaseT == 96 * 3 ) {
        with(objArchBullet1) {
            if( tag == 2 ) {
                speed *= 0.75;
            }
        }
    }
    if( phaseT &gt;= 96 * 3 &amp;&amp; phaseT &lt; 96 * 4 &amp;&amp; phaseT % 24 == 0 ) {
        var splitY = 2000;
        var isLastSplit = phaseT == 96 * 3 + 72;
        if( isLastSplit ) {
            splitY = 608;
        }
        with(objArchBullet1) {
            if( tag == 2 &amp;&amp; y &lt; splitY ) {
                a = instance_create(x, y, objArchBullet1);
                a.tag = 2;
                a.direction = direction + 110;
                if( isLastSplit ) {
                    var modifier = lerp( 0.5, 1, point_distance( x, y, 800, 0 ) / 800 );
                    a.speed = speed * modifier;
                } else {
                    a.speed = speed * 0.98;
                }
                a.image_xscale = image_xscale - 1/7;
                a.image_yscale = image_yscale - 1/7;
                a = instance_create(x, y, objArchBullet1);
                a.tag = 2;
                a.direction = direction - 110;
                if( isLastSplit ) {
                    var modifier = lerp( 0.5, 1, point_distance( x, y, 800, 0 ) / 800 );
                    a.speed = speed * modifier;
                } else {
                    a.speed = speed * 0.98;
                }
                a.image_xscale = image_xscale - 1/7;
                a.image_yscale = image_yscale - 1/7;
            }
            instance_destroy();
        }
    }
    if( phaseT &gt;= 96 * 4 &amp;&amp; phaseT &lt; 96 * 6 ) {
        a = instance_create(800-128-random(16), 128+random(16), objArchBullet1);
        a.direction = random(360);
        a.speed = random_range(5,9);
        a.image_xscale = 0.88;
        a.image_yscale = 0.88;
        a.tag = 3;
    }
    if( phaseT &gt;= 96 * 6 &amp;&amp; phaseT &lt; 96 * 8 - 10 &amp;&amp; phaseT % 10 != 0 ) {
        a = instance_create(128+random(16), 128+random(16), objArchBullet1);
        a.direction = random(360);
        a.speed = random_range(7,12);
        a.image_xscale = 0.88;
        a.image_yscale = 0.88;
        a.tag = 3;
    }
    
    // Effects by Algeran.
    if( phaseT == 0 ) {
        if( !instance_exists( objAlgShaderDrawer ) ) {
            instance_create( 0, 0, objAlgShaderDrawer );
        }
        with( objAlgA8Effect ) {
            direction = random_range( -10, 10 );
            speed = random_range( 10, 15 );
            image_alpha = random_range( 0.01, 0.3 );
            image_blend = make_color_hsv( 80, 255, 255 );
        }
    }
    if( phaseT &lt; 96 ) {
        repeat( 2 ) {
            a = instance_create( -10, random( 608 ), objAlgA8Effect );
            a.direction = random_range( -10, 10 );
            a.speed = random_range( 10, 15 );
            a.image_alpha = random_range( 0.01, 0.3 );
            a.image_xscale = 0.34;
            a.image_yscale = 0.34;
            a.image_blend = make_color_hsv( 80, 255, 255 );
        }
    } else if( phaseT == 96 ) {
        with( objAlgA8Effect ) {
            canWarp = true;
            direction = random_range( 260, 280 );
            speed = random_range( 6, 10 );
            friction = speed / 25;
        }
    } else if( phaseT &gt;= 96 &amp;&amp; phaseT &lt; 96 * 2 &amp;&amp; phaseT % 24 == 0 ) {
        with( objAlgA8Effect ) {
            speed += friction * 24;
        }
    } else if( phaseT == 96 * 2 ) {
        with( objAlgA8Effect ) {
            direction = random_range( 170, 190 );
            friction *= -1.5;
            if( speed == 0 ) {
                speed = 0.01;
            }
        }
    } else if( phaseT == 96 * 2 + 24 ) {
        with( objAlgA8Effect ) {
            friction = 0;
        }
    } else if( phaseT == 96 * 3 ) {
        with( objAlgA8Effect ) {
            direction = random( 360 );
            speed = random_range( 6, 10 );
            friction = speed / 25;
        }
    } else if( phaseT &gt;= 96 * 3 &amp;&amp; phaseT &lt; 96 * 4 &amp;&amp; phaseT % 24 == 0 ) {
        with( objAlgA8Effect ) {
            direction = random( 360 );
            speed += friction * 24;
        }
    } else if( phaseT == 96 * 4 ) {
        var dir = point_direction( 800 - 128, 128, scrGetPlayerX(), scrGetPlayerY() );
        with( objAlgA8Effect ) {
            addDir = random_range( -10, 10 );
            direction = dir + addDir;
            friction *= -1.5;
            if( speed == 0 ) {
                speed = 0.01;
            }
        }
    } else if( phaseT == 96 * 4 + 24 ) {
        with( objAlgA8Effect ) {
            friction = 0;
        }
    } else if( phaseT &gt; 96 * 4 &amp;&amp; phaseT &lt; 96 * 6 ) {
        var dir = point_direction( 800 - 128, 128, scrGetPlayerX(), scrGetPlayerY() );
        with( objAlgA8Effect ) {
            direction = dir + addDir;
        }
    } else if( phaseT &gt;= 96 * 6 &amp;&amp; phaseT &lt; 96 * 6 + 24 ) {
        var dirOld = point_direction( 800 - 128, 128, scrGetPlayerX(), scrGetPlayerY() );
        var dirNew = point_direction( 128, 128, scrGetPlayerX(), scrGetPlayerY() );
        var dir = lerp( dirOld, dirNew, ( phaseT - 96 * 6 ) / 24 );
        with( objAlgA8Effect ) {
            direction = dir + addDir;
        }
    } else if( phaseT &gt;= 96 * 6 + 24 &amp;&amp; phaseT &lt; 96 * 8 ) {
        var dir = point_direction( 128, 128, scrGetPlayerX(), scrGetPlayerY() );
        with( objAlgA8Effect ) {
            direction = dir + addDir;
        }
    }
    segment = 6;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 7 (1:40 - 1:55) Synthetic Verse A &amp; B
if( t &gt;= 5003 &amp;&amp; t &lt; 5772 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 5003;
    if( phaseT == 0 ) {
        repeat( 80 ) {
            var obj = instance_create( 400, 200, objAlgSphereCurve );
            obj.direction = random( 360 );
            obj.speed = random_range( 2, 3 ) * random_range( 2, 3 );
            obj.curveSpeed = random_range( 5, 10 );
            obj.image_blend = make_colour_rgb( 255, random_range( 0, 128 ), random_range( 0, 128 ) );
            obj.image_xscale = 0.9;
            obj.image_yscale = 0.9;
        }
    } else if( phaseT &gt;= 48 &amp;&amp; phaseT &lt; 96 + 48 ) {
        var count = 1;
        with( objAlgSphereCurve ) {
            if( curveSpeed != 0 &amp;&amp; count &gt; 0 ) {
                curveSpeed = 0;
                gravity = 0.15;
                count--;
            }
        }
    } else if( phaseT == 96 + 48 ) {
        with( objAlgSphereCurve ) {
            curveSpeed = 0;
            gravity = 0.15;
        }
    } 
    if( phaseT &gt;= 96 + 24 &amp;&amp; phaseT &lt; 96 + 48 ) {
        if( t % 3 == 0 ) {
            var obj = instance_create( 0, 0, objAlgKunai );
            obj.direction = lerp( 270, 360, ( phaseT - 96 - 24 ) / 24 );
            obj.image_angle = obj.direction
            obj.speed = random_range( 4, 5 );
            obj.image_blend = make_colour_rgb( random_range( 0, 128 ), random_range( 0, 128 ), 255 );
            obj.trailTime = 0.8;
            
            obj = instance_create( 800, 0, objAlgKunai );
            obj.direction = lerp( 180, 270, ( phaseT - 96 - 24 ) / 24 );
            obj.image_angle = obj.direction
            obj.speed = random_range( 4, 5 );
            obj.image_blend = make_colour_rgb( random_range( 0, 128 ), random_range( 0, 128 ), 255 );
            obj.trailTime = 0.8;
        }
    } else if( phaseT &gt;= 96 + 72 &amp;&amp; phaseT &lt; 96 * 2 ) {
        if( t % 3 == 0 ) {
            var obj = instance_create( 0, 0, objAlgKunai );
            obj.direction = lerp( 360, 270, ( phaseT - 96 - 72 ) / 24 );
            obj.image_angle = obj.direction
            obj.speed = random_range( 4, 5 );
            obj.image_blend = make_colour_rgb( random_range( 0, 128 ), random_range( 0, 128 ), 255 );
            obj.trailTime = 0.8;
            
            obj = instance_create( 800, 0, objAlgKunai );
            obj.direction = lerp( 270, 180, ( phaseT - 96 - 72 ) / 24 );
            obj.image_angle = obj.direction
            obj.speed = random_range( 4, 5 );
            obj.image_blend = make_colour_rgb( random_range( 0, 128 ), random_range( 0, 128 ), 255 );
            obj.trailTime = 0.8;
        }
    } else if( phaseT == 96 * 4 ) {
        with( objAlgKunai ) {
            instance_change( objAlgKunaiDisappearing, true );
        }
    }
    if( phaseT == 96 * 2 ) {
        instance_create( 0, 0, oRedireS7KunaiSpawner );
    } else if( phaseT == 96 * 4 ) {
        with( oRedireS7KunaiSpawner ) {
            instance_destroy();
        }
    }
    
    if( phaseT == 96 * 4 ) {
        repeat( 55 ) {
            var obj = instance_create( 600, 200, objAlgSphereCurve );
            obj.direction = random( 360 );
            obj.speed = random_range( 2, 3 ) * random_range( 2, 3 );
            obj.curveSpeed = random_range( 5, 10 );
            obj.image_blend = make_colour_rgb( random_range( 0, 128 ), random_range( 0, 128 ), 255 );
            obj.image_xscale = 0.6;
            obj.image_yscale = 0.6;
            
            obj = instance_create( 200, 200, objAlgSphereCurve );
            obj.direction = random( 360 );
            obj.speed = random_range( 2, 3 ) * random_range( 2, 3 );
            obj.curveSpeed = random_range( 5, 10 );
            obj.image_blend = make_colour_rgb( random_range( 0, 128 ), random_range( 0, 128 ), 255 );
            obj.image_xscale = 0.6;
            obj.image_yscale = 0.6;
        }
    } else if( phaseT &gt;= 96 * 4 + 48 &amp;&amp; phaseT &lt; 96 * 5 + 48 ) {
        var count = 1;
        with( objAlgSphereCurve ) {
            if( curveSpeed != 0 &amp;&amp; count &gt; 0 ) {
                curveSpeed = 0;
                gravity = 0.15;
                count--;
            }
        }
    } else if( phaseT == 96 * 5 + 48 ) {
        with( objAlgSphereCurve ) {
            curveSpeed = 0;
            gravity = 0.15;
        }
    } 
    
    if( phaseT &gt;= 96 * 5 + 24 &amp;&amp; phaseT &lt; 96 * 5 + 48 ) {
        if( t % 3 == 0 ) {
            var obj = instance_create( 200, 0, objAlgKunai );
            obj.direction = lerp( 180, 360, ( phaseT - 96 * 5 + 24 ) / 25 );
            obj.image_angle = obj.direction
            obj.speed = random_range( 4, 5 );
            obj.image_blend = make_colour_rgb( 255, random_range( 0, 128 ), random_range( 0, 128 ) );
            obj.trailTime = 0.8;
            
            obj = instance_create( 600, 0, objAlgKunai );
            obj.direction = lerp( 360, 180, ( phaseT - 96 * 5 + 24 ) / 25 );
            obj.image_angle = obj.direction
            obj.speed = random_range( 4, 5 );
            obj.image_blend = make_colour_rgb( 255, random_range( 0, 128 ), random_range( 0, 128 ) );
            obj.trailTime = 0.8;
        }
    } else if( phaseT &gt;= 96 * 5 + 72 &amp;&amp; phaseT &lt; 96 * 6 ) {
        if( t % 3 == 0 ) {
            var obj = instance_create( 200, 0, objAlgKunai );
            obj.direction = lerp( 360, 180, ( phaseT - 96 * 5 + 72 ) / 25 );
            obj.image_angle = obj.direction
            obj.speed = random_range( 4, 5 );
            obj.image_blend = make_colour_rgb( 255, random_range( 0, 128 ), random_range( 0, 128 ) );
            obj.trailTime = 0.8;
            
            obj = instance_create( 600, 0, objAlgKunai );
            obj.direction = lerp( 180, 360, ( phaseT - 96 * 5 + 72 ) / 25 );
            obj.image_angle = obj.direction
            obj.speed = random_range( 4, 5 );
            obj.trailTime = 0.8;
            obj.image_blend = make_colour_rgb( 255, random_range( 0, 128 ), random_range( 0, 128 ) );
        }
    } else if( phaseT == 96 * 7 ) {
        with( objAlgKunai ) {
            instance_change( objAlgKunaiDisappearing, true );
        }
    } else if( phaseT == 96 * 7 + 48 ) {
        with( objAlgKunai ) {
            instance_change( objAlgKunaiDisappearing, true );
        }
    } else if( phaseT &gt;= 96 * 6 &amp;&amp; phaseT &lt; 96 * 8 ) {
        var speedMin = lerp( 5, 18, ( phaseT - 96 * 6 ) / ( 96 + 48 ) );
        var speedMax = lerp( 11, 18, ( phaseT - 96 * 6 ) / ( 96 + 48 ) );
        var arc = lerp( 90, 15, ( t - 5550 ) / 224 );
        var obj = instance_create( 400, 0, objAlgKunai );
        obj.direction = random_range( 225 - arc, 315 + arc );
        obj.image_angle = obj.direction
        obj.speed = random_range( speedMin, speedMax );
        obj.image_blend = make_colour_rgb( random_range( 0, 128 ), random_range( 0, 128 ), 255 );
        if( phaseT &gt;= 96 * 7 ) {
            obj.trailTime = 0.2;
        } else {
            obj.trailTime = 0.4;
        }
    } else if( phaseT == 96 * 8 ) {
        with( objAlgKunai ) {
            instance_change( objAlgKunaiDisappearing, true );
        }
    }
    
    // Effects
    if( phaseT == 0 ) {
        if( !instance_exists( objAlgA8Effect ) ) {
            repeat( 130 ) {
                var obj = instance_create( random( 800 ), random( 608 ), objAlgA8Effect );
                obj.image_alpha = random_range( 0.01, 0.3 );
            }
        }
        with( objAlgA8Effect ) {
            instance_change( objAlgA7Effect, true );
            
            var distance = point_distance( x, y, 400, 200 ) * pi;
            var time = irandom_range( 96, 96 * 2 );
            speed = distance / time;
            if( speed &gt; 15 ) {
                speed = random_range( 5, 15 );
            }
            friction = 0;
            gravity = 0;
            image_xscale = 0.34;
            image_yscale = 0.34;
            maxSpeed = speed;
            canWarp = false;
            if( maxSpeed &lt; 8 ) {
                maxSpeed = random_range( 8, 15 );
            }
            curveSpeed = 360 * speed / distance * choose( -1, 1 );
            if( curveSpeed &gt; 0 ) {
                direction = point_direction( x, y, 400, 200 ) - 90;
            } else {
                direction = point_direction( x, y, 400, 200 ) + 90;
            }
            image_blend = make_colour_rgb( random_range( 0, 128 ), random_range( 0, 128 ), 255 );
        }
    } else if ( phaseT &gt;= 96 * 2 &amp;&amp;  phaseT &lt; 96 * 4 ) {
        with( objAlgA7Effect ) {
            if( y &lt; 0 ) {
                direction = 270;
            }
            curveSpeed = 0;
            canWarp = true;
            gravity = 0.5;
            gravity_direction = 270 + y / 304 * lerp( -45, 45, x / 800 );
        }
    } else if ( phaseT == 96 * 4 ) {
        with( objAlgA7Effect ) {
            var distance = point_distance( x, y, 600, 200 ) * pi;
            if( irandom( 1 ) == 0 ) {
                distance = point_distance( x, y, 200, 200 ) * pi;
                time = irandom_range( 96, 96 * 2 );
            }
            var time = distance / speed;
            if( time &lt; 96 ) {
                speed /= irandom_range( 96, 96 * 2 ) / time;
            }
            gravity = 0;
            maxSpeed = speed;
            if( maxSpeed &lt; 8 ) {
                maxSpeed = random_range( 8, 15 );
            }
            canWarp = false;
            curveSpeed = 360 * speed / distance * choose( -1, 1 );
            if( curveSpeed &gt; 0 ) {
                direction = point_direction( x, y, 400, 200 ) - 90;
            } else {
                direction = point_direction( x, y, 400, 200 ) + 90;
            }
            image_blend = make_colour_rgb( 255, random_range( 0, 128 ), random_range( 0, 128 ) );
        }
    } else if ( phaseT &gt;= 96 * 6 &amp;&amp;  phaseT &lt; 96 * 8 ) {
        with( objAlgA7Effect ) {
            if( y &lt; 0 ) {
                direction = 270;
            }
            curveSpeed = 0;
            canWarp = true;
            gravity = 0.5;
            gravity_direction = 270 + y / 304 * lerp( -45, 45, x / 800 );
        }
    }
    segment = 7;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 8 (1:55 - 2:11) Chorus 2
if( t &gt;= 5775 &amp;&amp; t &lt; 6545 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 5775;
    
    if( phaseT == 0 ) {
        var s8Spawner = instance_create( 0, 0, oRedireS8RightFountainSpawner );
        s8Spawner.spawnPeriod = 0.65;
    } else if( phaseT == 96 ) {
        with( oRedireS8RightFountainSpawner ) { instance_destroy(); }
    }
    
    if( phaseT == 96 ) {
        var playerX = scrGetPlayerX();
        var playerY = scrGetPlayerY();
        with(objAlgA8Wave) {
            self.trigger = true;
            gravity = 0;
            speed = 0.1;
            friction = -lerp( 0.15, 0.025, point_direction( x, y, playerX, playerY ) / 1000 );
        }
    }
    
    if( phaseT &gt;= 192 &amp;&amp; phaseT &lt; 384 ) {
        if( phaseT % 48 == 0 ) {
            repeat(14) {
                var obj = instance_create( 800, 608, objAlgA8Wave );
                obj.direction = random_range(100, 135);
                obj.image_angle = obj.direction;
                obj.speed = random_range(8,20);
                obj.gravity = 0.2;
                obj.image_blend = make_color_hsv( 128, 255, 255 );
                obj.alarm[0] = 24;
            }
        }
        if( phaseT % 48 == 24 ) {
            repeat(14) {
                var obj = instance_create( 0, 608, objAlgA8Wave );
                obj.direction = random_range(45, 80);
                obj.image_angle = obj.direction;
                obj.speed = random_range(8,20);
                obj.gravity = 0.2;
                obj.image_blend = make_color_hsv( 160, 255, 255 );
                obj.alarm[0] = 24;
            }
        }
    }
    
    if( phaseT == 384 ) {
        var s8Spawner = instance_create( 0, 0, oRedireS8LeftFountainSpawner );
        s8Spawner.spawnPeriod = 0.67;
    } else if( phaseT == 480 ) {
        with( oRedireS8LeftFountainSpawner ) { instance_destroy(); }
    }
    
    if( phaseT == 480 ) {
        var playerX = scrGetPlayerX();
        var playerY = scrGetPlayerY();
        with(objAlgA8Wave) {
            self.trigger = true;
            gravity = 0;
            speed = 0.1;
            friction = -lerp( 0.15, 0.025, point_direction( x, y, playerX, playerY ) / 1000 );
        }
    }
    
    if( phaseT == 96 * 6 ) {
        var s8LeftSpawner = instance_create( 0, 0, oRedireS8LeftWaveSpawner );
        s8LeftSpawner.spawnPeriod = 2.2;
        var s8RightSpawner = instance_create( 0, 0, oRedireS8RightWaveSpawner );
        s8RightSpawner.spawnPeriod = 2.2;
    
    } else if( phaseT == 96 * 8 - 96 ) {
        with( oRedireSpawner ) { instance_destroy(); }
    }
     
    
    // Effects
    if( phaseT == 0 ) {
        with( objAlgA7Effect ) {
            instance_change( objAlgA8Effect, true );
            maxSpeed = random_range( 10, 15 );
            friction = -0.5;
            targetDir = random_range( 260, 280 );
            canWarp = false;
        }
    }
    if( phaseT &lt; 96 ) {
        repeat( 2 ) {
            var spawnX = -10
            var spawnY = random_range( -10, 608 );
            if( irandom( 1 ) == 0 ) {
                spawnX = random_range( -10, 800 );
                spawnY = -10;
            }
            var obj = instance_create( spawnX, spawnY, objAlgA8Effect );
            obj.speed = random_range( 10, 15 );
            obj.maxSpeed = obj.speed;
            obj.image_alpha = random_range( 0.01, 0.3 );
            obj.image_xscale = 0.34;
            obj.image_yscale = 0.34;
            obj.image_blend = make_color_hsv( 0, 255, 255 );
            obj.targetDir = random_range( 260, 280 );
        }
        with( objAlgA8Effect ) {
            canWarp = false;
            direction = point_direction( x, y, 800, 608 );
        }
    } else if( phaseT == 96 ) {
        with( objAlgA8Effect ) {
            friction = 0;
            canWarp = true;
            gravity = 0.5;
            gravity_direction = targetDir;
            savedMaxSpeed = maxSpeed;
        }
    } else if( phaseT &lt; 96 * 2 ) {
        with( objAlgA8Effect ) {
            if( phaseT &lt; 96 + 24 ) {
                maxSpeed = lerp( savedMaxSpeed, savedMaxSpeed / 2, ( phaseT - 96 ) / 24 );
            }
        }
    } else if( phaseT == 96 * 2 ) {
        with( objAlgA8Effect ) {
            isLeft = irandom( 1 ) == 0;
            if( isLeft ) {
                image_blend = make_color_hsv( 160, 255, 255 );
            } else {
                image_blend = make_color_hsv( 128, 255, 255 );
            }
            maxSpeed = savedMaxSpeed;
        }
    } else if( phaseT &lt; 96 * 3 ) {
        with( objAlgA8Effect ) {
            if( isLeft ) {
                gravity_direction = point_direction( x, y, 0, 608 );
            } else {
                gravity_direction = point_direction( x, y, 800, 608 );
            }
        }
    } else if( phaseT == 96 * 4 ) {
        with( objAlgA8Effect ) {
            image_blend = make_color_hsv( 64, 255, 255 );
            maxSpeed = savedMaxSpeed;
        }
    } else if( phaseT &lt; 96 * 5 ) {
        with( objAlgA8Effect ) {
            gravity_direction = point_direction( x, y, 0, 608 );
        }
    } else if( phaseT &lt; 96 * 6 ) {
        with( objAlgA8Effect ) {
            if( phaseT &lt; 96 * 5 + 24 ) {
                maxSpeed = lerp( savedMaxSpeed, savedMaxSpeed / 2, ( phaseT - 96 * 5 ) / 24 );
            }
            gravity_direction = targetDir;
        }
    } else if( phaseT == 96 * 6 ) {
        with( objAlgA8Effect ) {
            isLeft = irandom( 1 ) == 0;
            if( isLeft ) {
                image_blend = make_color_hsv( 192, 255, 255 );
            } else {
                image_blend = make_color_hsv( 224, 255, 255 );
            }
            maxSpeed = savedMaxSpeed;
        }
    } else if( phaseT &lt; 96 * 8 ) {
        with( objAlgA8Effect ) {
            if( isLeft ) {
                gravity_direction = point_direction( x, y, 0, 200 );
            } else {
                gravity_direction = point_direction( x, y, 800, 200 );
            }
        }
    }
    if( t == 6544 - 48 ) {
        with( objAlgA8Effect ) {
            canWarp = false;
        }
    }
    if( t &gt;= 6544 - 10 ) {
        with( objAlgA8Effect ) {
            image_alpha -= 0.03;
            if( image_alpha &lt;= 0 ) {
                instance_destroy();
            }
        }
    }
    segment = 8;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 9 (2:11 - 2:19) Throwback A
if( t &gt;= 6545 &amp;&amp; t &lt; 6925 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    if( t == 6545 ) {
        segment9Angle = 0;
        var randomAngle = random( 360 );
        scrMakeCircle( 700, 100, randomAngle, 8, 2, objAlgA7Sphere );
        with( objAlgA7Sphere ) {
            curveSpeed = 3;
            image_blend = make_color_rgb( 255, 255, 0 );
        }
        for( var i = 0; i &lt; 4; i++ ) {
            var obj = instance_create( 700, 100, objAlgA12LaserEffect );
            obj.image_angle = randomAngle;
            obj.image_yscale = 0.5;
            obj.image_blend = make_color_rgb( 255, 255, 0 );
            obj.rotationSpeed = -1.5;
            obj.hspeed = -1.5;
            randomAngle += 180 / 4;
        }
    }
    
    if( t % 5 == 0 ) {
        with( objAlgA7Sphere ) {
            var obj = instance_create( x, y, objAlgSphere );
            obj.image_blend = image_blend;
            obj.direction = direction + other.segment9Angle;
            obj.speed = 0.1;
            obj.friction = -0.19;
        }
        segment9Angle += 12.5;
    }
    
    with( objAlgA7Sphere ) {
        x -= 1.5;
    }
    if( t == 6870 ) {
        with( objAlgA7Sphere ) {
            instance_destroy();
        }
    } else if( t == 6920 ) {
        with( objAlgLaserEffect ) {
            instance_change( objAlgLaserDisappearing, true );
            alphaStep = image_alpha / 5;
        }
    }
    segment = 9;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 10 (2:19 - 2:34) Throwback B
if( t &gt;= 6925 &amp;&amp; t &lt; 7693 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    var phaseT = t - 6925;
    if( phaseT % 192 == 0 || phaseT % 192 == 48 || phaseT % 192 == 96 ) {
         a = instance_create(objPlayer.x, 608-32, objArchBullet3);
        a.vspeed = -random_range(20,30);
        a.gravity = -a.vspeed/36;
        
        var obj = instance_create( a.x, a.y, objAlgA10EffectSpawner );
        switch( a.image_index ) {
            case 0:
                obj.image_blend = make_colour_rgb( 255, 0, 0 );
                break;
            case 1:
                obj.image_blend = make_colour_rgb( 0, 255, 0 );
                break;
            case 2:
                obj.image_blend = make_colour_rgb( 0, 0, 255 );
                break;
        }
    } else if( phaseT == 96 + 48 ) {
        a = instance_create(0,0,objArchEventWall1);
        a.hspeed = 800 / 48;
    } else if( phaseT == 96 * 3 + 48 ) {
        a = instance_create(800,0,objArchEventWall1);
        a.hspeed = -800 / 48;
    } else if( phaseT == 96 * 5 + 48 ) {
        a = instance_create(0,0,objArchEventWall1);
        a.hspeed = 800 / 48;
    } else if( phaseT == 96 * 7 + 48 ) {
        a = instance_create(0,0,objArchEventWall1);
        a.hspeed = 800 / 48;
        a = instance_create(800,0,objArchEventWall1);
        a.hspeed = -800 / 48;
        with( objArchBullet1_S10 ) {
            if( y &lt; objPlayer.y + 9 ) {
                gravity = -gravity;
            }
        }
    }
    if( t == 7681 ) {
        with(objArchEventWall1) {
            instance_destroy();
        }
    }
    segment = 10;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Arch. Segment 11 (2:34 - 2:49) Throwback C
if( t &gt;= 7695 &amp;&amp; t &lt; 8465 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    var cardBorderIndex = 20;
    if( t % 48 == 15 &amp;&amp; t &lt; 8440 ) {
        var a_xx = random_range(128, 256);
        var a_yy = random_range(64, 192);
        var a_image_index = irandom(2);
        
        var a_dir = point_direction(a_xx, a_yy, objPlayer.x, objPlayer.y) + 11.25;
        for( i = 0; i &lt; 360; i+=45 ) {
            for( j = 0; j &lt; 45; j+=3 ) {
                a = instance_create(a_xx, a_yy, objArchBullet2);
                a.direction = i + j + a_dir;
                a.speed = 6;
                a.alarm[0] = 10;
                a.image_index = a_image_index;
                if( j &gt; cardBorderIndex ) {
                    if( t &lt; 8400 ) {
                        a.alarm[1] = 24;
                    } else {
                        a.alarm[4] = 24;
                    }
                } else if( j == 18 &amp;&amp; i == 0 &amp;&amp; t % 96 == 15 &amp;&amp; t &gt; 7700 ) {
                    a.alarm[3] = 24;
                    a.image_index = 3;
                } else {
                    a.alarm[2] = 24;
                }
            }
        }
        
        var color;
        switch( a_image_index ) {
            case 0:
                color = make_colour_rgb( 255, 0, 0 );
                break;
            case 1:
                color = make_colour_rgb( 0, 255, 0 );
                break;
            case 2:
                color = make_colour_rgb( 0, 0, 255 );
                break;
        }
        var count = irandom_range( 6, 9 );
        var effectsRotationSpeed = choose( -1, 1 );
        var effectsAngle = random( 360 );
        for( var i = 0; i &lt; count; i++ ) {
            var obj = instance_create( a_xx, a_yy, objAlgA11LaserEffect );
            obj.image_angle = a_dir + effectsAngle + i * 180 / count;
            obj.image_yscale = 0.5;
            obj.image_blend = color;
            obj.rotationSpeed = effectsRotationSpeed;
        }
        
        var a_dir = point_direction(800-a_xx, a_yy, objPlayer.x, objPlayer.y) + 11.25;
        for( i = 0; i &lt; 360; i+=45 ) {
            for( j = 0; j &lt; 45; j+=3 ) {
                a = instance_create(800-a_xx, a_yy, objArchBullet2);
                a.direction = i + j + a_dir;
                a.speed = 6;
                a.alarm[0] = 10;
                a.image_index = a_image_index;
                if( j &gt; cardBorderIndex ) {
                    if( t &lt; 8400 ) {
                        a.alarm[1] = 24;
                    } else {
                        a.alarm[4] = 24;
                    }
                } else if( j == 18 &amp;&amp; i == 0 &amp;&amp; t % 96 != 15 ) {
                    a.alarm[3] = 24;
                    a.image_index = 3;
                } else {
                    a.alarm[2] = 24;
                }
            }
        }
        
        for( var i = 0; i &lt; count; i++ ) {
            var obj = instance_create( 800 - a_xx, a_yy, objAlgA11LaserEffect );
            obj.image_angle = a_dir - ( effectsAngle + i * 180 / count );
            obj.image_yscale = 0.5;
            obj.image_blend = color;
            obj.rotationSpeed = -effectsRotationSpeed;
        }
    }
    segment = 11;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 12 (2:49 - 3:05) Robotic Bridge
if( t &gt;= 8465 &amp;&amp; t &lt; 9250 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    if( t == 8465 ) {
        var count = 9;
        var effectsAngle = random( 360 );
        for( var i = 0; i &lt; count; i++ ) {
            var obj = instance_create( 800 - 32, 32, objAlgA12LaserEffect );
            obj.image_angle = effectsAngle + i * 180 / count;
            obj.image_yscale = 0.5;
            switch( i % 3 ) {
                case 0:
                    obj.image_blend = make_colour_rgb( 255, 0, 0 );
                    break;
                case 1:
                    obj.image_blend = make_colour_rgb( 0, 255, 0 );
                    break;
                case 2:
                    obj.image_blend = make_colour_rgb( 0, 0, 255 );
                    break;
            }
            obj.rotationSpeed = -1;
        }
    }
    if( t &lt; 9100 ) {
        arch_spd = random_range(5,15);
        arch_xx = 800-32;
        arch_period = 1;
        if( (t &gt; 8657 &amp;&amp; t &lt; 8849) || ( t &gt; 9041 &amp;&amp; t &lt; 9230 ) ) {
            arch_spd *= 0.5;
            arch_period = 2;
            if( t &lt; 8849 ) {
                arch_xx = lerp(800-32, 32, (t - 8657)/(8858-8657));
                with( objAlgA12LaserEffect ) {
                    x = other.arch_xx;
                }
            }
        }
        if( t &gt;= 8849 ) {
            arch_xx = 32;
            with( objAlgA12LaserEffect ) {
                x = other.arch_xx;
            }
        }
        if( t == 8657 || t == 9041 ) {
            objAlgA12LaserEffect.rotationSpeed *= 0.5;
            with(objArchBullet1) {
                speed *= 0.5;
            }
        }
        if( t == 8849 ) {
            objAlgA12LaserEffect.rotationSpeed *= -2;
            with(objArchBullet1) {
                speed *= 2;
            }
        }
        if( t % arch_period == 0 || t % 5 == 0 ) {
            a = instance_create(arch_xx, 32, objArchBullet1);
            a.direction = random_range(180, 360);
            a.speed = arch_spd;
            a.image_xscale = random_range(0.25,1);
            a.image_yscale = a.image_xscale;
            a.image_index = irandom(2);
        }
    }

    if(t == 9137 ||
       t == 9163 ||
       t == 9184 ||
       t == 9191 ||
       t == 9197 ||
       t == 9204 ||
       t == 9210 ) {
        arch_xx = random_range(32,800-32);
        repeat(18) {
            a = instance_create(arch_xx, 32, objArchBullet1);
            a.direction = random_range(180, 360);
            a.speed = random_range(5,14);
            a.image_xscale = random_range(0.25,1);
            a.image_yscale = a.image_xscale;
            a.image_index = irandom(2);
        }
    }
    if( t &gt;= 9230 &amp;&amp; t &lt; 9250 ) {
        with( objArchBullet1 ) {
            image_alpha -= 0.05;
        }
    } else if( t == 9250 ) {
        with( objArchBullet1 ) {
            instance_destroy();
        }
    }
    if( t == 9240 ) {
        with( objAlgA12LaserEffect ) {
            instance_change( objAlgLaserDisappearing, true );
            alphaStep = image_alpha / 10;
        }
    }
    segment = 12;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 13 (3:05 - 3:12) Fatalism A
if( t &gt;= 9230 &amp;&amp; t &lt; 9613 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 9230;
    if( phaseT % 48 &lt; 24 &amp;&amp; phaseT % 2 == 0 ) {
        repeat( 3 ) {
            var scale = random_range( 0.4, 1 ) * 8 / 15;
            var obj = instance_create( random( 800 ), 0, objAlgStarSlowing );
            obj.speed = 0.1;
            obj.direction = point_direction( obj.x, obj.y, random_range( -620, 1420 ), 608 );
            obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
            obj.image_xscale = scale;
            obj.image_yscale = scale;
        }
    }
    if( phaseT % 48 == 24 ) {
        var count = 12;
        var effectsRotationSpeed = choose( -10, 10 );
        var effectsAngle = random( 360 );
        var spawnX = 32;
        if( phaseT % 96 == 24 ) {
            spawnX = 800 - 32;
        }
        for( var i = 0; i &lt; count; i++ ) {
            var obj = instance_create( spawnX, 32, objAlgA13LaserEffect );
            obj.image_angle = effectsAngle + i * 180 / count;
            obj.image_yscale = 1;
            obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
            obj.rotationSpeed = effectsRotationSpeed;
            obj.rotationSpeedMax = 10;
        }
    }

    segment = 13;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 14 (3:12 - 3:20) Fatalism B
if( t &gt;= 9613 &amp;&amp; t &lt; 10000 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    if( t == 9613 ) {
        seg14CircleCount = 10;
        seg14CircleAngle = random( 360 );
    }
    
    var phaseT = ( t - 9615 ) % 96;
    if( t &lt; 9999 &amp;&amp; phaseT &lt; 25 ) {
        var scale = random_range( 0.4, 1 ) * 8 / 15;
        var obj = instance_create( random( 800 ), 0, objAlgStarSlowing );
        obj.speed = 0.1;
        obj.direction = 270;
        obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
        obj.image_xscale = scale;
        obj.image_yscale = scale;
    }
    
    if( phaseT &gt;= 48 &amp;&amp; phaseT % 3 == 0 ) {
        scrMakeCircle( 400, 100, seg14CircleAngle, seg14CircleCount, 10, objAlgA14Bullet ); 
        if( phaseT % 12 == 9 ) {
            seg14CircleCount += 10;
            seg14CircleAngle = random( 360 );
        }
    }
    
    if( phaseT == 0 ) {
        seg14CircleAngle = random( 360 );
        seg14CircleCount = 10;
    }
    
    if( phaseT % 96 == 24 ) {
        var count = 8;
        var effectsRotationSpeed = choose( -10, 10 );
        var effectsAngle = random( 360 );
        var spawnX = 32;
        for( var i = 0; i &lt; count; i++ ) {
            var obj = instance_create( spawnX, 32, objAlgA13LaserEffect );
            obj.image_angle = effectsAngle + i * 180 / count;
            obj.image_yscale = 1;
            obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
            obj.rotationSpeed = effectsRotationSpeed;
            obj.rotationSpeedMax = 10;
        }
        effectsAngle = random( 360 );
        spawnX = 800 - 32;
        for( var i = 0; i &lt; count; i++ ) {
            var obj = instance_create( spawnX, 32, objAlgA13LaserEffect );
            obj.image_angle = effectsAngle + i * 180 / count;
            obj.image_yscale = 1;
            obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
            obj.rotationSpeed = -effectsRotationSpeed;
            obj.rotationSpeedMax = 10;
        }
    }
    
    if( phaseT % 96 &gt;= 48 &amp;&amp; phaseT % 3 == 0 ) {
        var obj = instance_create( 0, lerp( 0, 608, ( phaseT % 96 - 48 ) / 48 ), objAlgLaserBackEffect );
        obj.image_yscale = 1;
        obj.image_blend = make_colour_hsv( 0, 255, 255 );
    }

    segment = 14;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 15 (3:20 - 3:28) Fatalism C
if( t &gt;= 10000 &amp;&amp; t &lt; 10380 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    if( t == 10000 ) {
        seg15SpawnOffset = choose( 0, 50 );
    }
    
    var tPhase = ( t - 10000 ) % 96;
    if( tPhase == 0 ) {
        seg15SpawnOffset = abs( seg15SpawnOffset - 50 );
    }
    if( t &lt; 10380 &amp;&amp; tPhase &lt; 25 &amp;&amp; tPhase % 2 == 0 ) {
        for( var i = 0; i &lt; 9; i++ ) {
            var scale = random_range( 0.4, 1 ) * 8 / 15;
            var spawnX = i * 100 + seg15SpawnOffset;
            var obj = instance_create( spawnX, 0, objAlgStarSlowing );
            obj.speed = 0.1;
            obj.direction = 270 + random_range( -1, 1 );
            obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
            obj.image_xscale = scale;
            obj.image_yscale = scale;
        }
    }
    
    if( tPhase &gt;= 48 &amp;&amp; tPhase % 3 == 0 ) {
        repeat( 3 ) {
            var obj = instance_create( random( 800 ), 0, objAlgBullet );
            obj.speed = random_range( 6, 10 );
            obj.direction = random_range( 185, 365 );
            obj.image_blend = make_colour_rgb( 255, 0, 0 );
        }
    }
    
    if( tPhase &lt; 48 &amp;&amp; tPhase % 3 == 0 ) {
        var obj = instance_create( 0, lerp( 0, 608, tPhase / 48 ), objAlgLaserBackEffect );
        obj.image_yscale = 1;
        obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
    }
    
    if( tPhase &gt;= 48 &amp;&amp; tPhase % 3 == 0 ) {
        var obj = instance_create( 0, lerp( 608, 0, ( tPhase - 48 ) / 48 ), objAlgLaserBackEffect );
        obj.image_yscale = 1;
        obj.image_blend = make_colour_hsv( 100, 255, 255 );
    }
    
    segment = 15;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Red Segment 16 (3:28 - 3:35) Fatalism D
if( t &gt;= 10380 &amp;&amp; t &lt; 10764 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }

    segment = 16;
    
    // Top spawner.
    if( t == 10380 ) {
        instance_create( objPlayer.x, 0, oRedireS16TopSpawner );
        
    }
    
    // Side spawners.
    if( t == 10380 ) {
        instance_create( 800, 100, oRedireS16SideSpawner );
        instance_create( 800, 300, oRedireS16SideSpawner );
        instance_create( 800, 500, oRedireS16SideSpawner );
    }
    
    // Clean up.
    if( t == 10763 ) {
        with( oRedireSpawner ) {
            instance_destroy();
        }
    }
    
    // Effects by Algeran.
    var phaseT = ( t - 10380 );
    if( phaseT % 96 == 0 ) {
        var obj = instance_create( 0, 0, objAlgA14EffectSpawner );
        obj.spawnXFrom = 400;
        obj.spawnXTo = 0;
        obj.spawnYFrom = 0;
        obj.spawnYTo = 0;
        obj.spawnAngle = 90;
        obj.spawnBlend = make_colour_rgb( 255, 0, 0 );
        
        obj = instance_create( 0, 0, objAlgA14EffectSpawner );
        obj.spawnXFrom = 400;
        obj.spawnXTo = 800;
        obj.spawnYFrom = 0;
        obj.spawnYTo = 0;
        obj.spawnAngle = 90;
        obj.spawnBlend = make_colour_rgb( 255, 0, 0 );
    }
    if( phaseT % 96 == 48 ) {
        var obj = instance_create( 0, 0, objAlgA14EffectSpawner );
        obj.spawnXFrom = 0;
        obj.spawnXTo = 0;
        obj.spawnYFrom = 304;
        obj.spawnYTo = 0;
        obj.spawnAngle = 0;
        obj.spawnBlend = make_colour_rgb( 0, 0, 255 );
        
        obj = instance_create( 0, 0, objAlgA14EffectSpawner );
        obj.spawnXFrom = 0;
        obj.spawnXTo = 0;
        obj.spawnYFrom = 304;
        obj.spawnYTo = 608;
        obj.spawnAngle = 0;
        obj.spawnBlend = make_colour_rgb( 0, 0, 255 );
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Red Segment 17 (3:35 - 3:43) Fatalism E
if( t &gt;= 10764 &amp;&amp; t &lt; 11148 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    segment = 17;
    if( t == 10764 ) {
        instance_create( 800, 100, oRedireS17SideSpawner );
        instance_create( 800, 300, oRedireS17SideSpawner );
        instance_create( 800, 500, oRedireS17SideSpawner );
        instance_create( objPlayer.x, 0, oRedireS17TopSpawner );
    }
    
    if( t == 11000 ) {
        with( oRedireS17TopSpawner ) {
            instance_destroy();
        }
    }
    if( t == 11100 ) {
        with( oRedireS17SideSpawner ) {
            instance_destroy();
        }
    }
    
    // Effects by Algeran.
    var phaseT = ( t - 10764 );
    if( phaseT % 96 == 0 ) {
        var obj = instance_create( 0, 0, objAlgA14EffectSpawner );
        obj.spawnXFrom = 400;
        obj.spawnXTo = 0;
        obj.spawnYFrom = 304;
        obj.spawnYTo = 0;
        obj.spawnAngle = 45;
        obj.spawnBlend = make_colour_rgb( 255, 0, 0 );
        
        obj = instance_create( 0, 0, objAlgA14EffectSpawner );
        obj.spawnXFrom = 400;
        obj.spawnXTo = 800;
        obj.spawnYFrom = 304;
        obj.spawnYTo = 608;
        obj.spawnAngle = 45;
        obj.spawnBlend = make_colour_rgb( 255, 0, 0 );
    }
    if( phaseT % 96 == 48 ) {
        var obj = instance_create( 0, 0, objAlgA14EffectSpawner );
        obj.spawnXFrom = 400;
        obj.spawnXTo = 0;
        obj.spawnYFrom = 304;
        obj.spawnYTo = 608;
        obj.spawnAngle = 135;
        obj.spawnBlend = make_colour_rgb( 0, 0, 255 );
        
        obj = instance_create( 0, 0, objAlgA14EffectSpawner );
        obj.spawnXFrom = 400;
        obj.spawnXTo = 800;
        obj.spawnYFrom = 304;
        obj.spawnYTo = 0;
        obj.spawnAngle = 135;
        obj.spawnBlend = make_colour_rgb( 0, 0, 255 );
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Red Segment 18 (3:43 - 3:51) Fatalism F
if( t &gt;= 11148 &amp;&amp; t &lt; 11530 &amp;&amp; instance_exists(objPlayer) ) {
    segment = 18;
    
    if( t == 11155 ) {
        scrRedireS18CreateFuzzyCircle( 700, 2, 160, 4 );
    }
    if( t == 11200 ) {
        scrRedireS18CreateFuzzyCircle( 620, 2, 100, 4 );
    }
    if( t == 11250 ) {
        scrRedireS18CreateFuzzyCircle( 560, 4, 90, 3.5 );
    }
    if( t == 11300 ) {
        scrRedireS18CreateFuzzyCircle( 480, 4, 80, 3 );
    }
    if( t == 11350 ) {
        scrRedireS18CreateFuzzyCircle( 400, 3, 70, 2 );
    }
    if( t == 11390 ) {
        scrRedireS18CreateFuzzyCircle( 320, 3, 60, 2 );
    }
    if( t == 11440 ) {
        scrRedireS18CreateFuzzyCircle( 260, 0, 60, 2 );
    }
    if( t == 11490 ) {
        scrRedireS18CreateFuzzyCircle( 180, 0, 40, 1.5 );
    }
    
    if( t == 11520 ) {
        with( oRedireS18CircleBullet ) {
            isActive = false;
            fadeOut = true;
        }
    }
    if( t == 11529 ) {
        with( oRedireS18Backdrop ) {
            instance_destroy();
        }
    }
    
    // Effects by Algeran.
    var phaseT = ( t - 11148 );
    if( phaseT == 20 || phaseT == 72 || phaseT == 115 || phaseT == 165 || phaseT == 205 || phaseT == 248 || phaseT == 290 ) {
        var spawnIndex = 0;
        repeat( 3 ) {
            var obj = instance_create( 0, 0, objAlgA14EffectSpawner );
            if( scrGetPlayerX() &lt;= 400 ) {
                obj.spawnXFrom = 800;
                switch( spawnIndex ) {
                    case 0:
                        obj.spawnXTo = 0;
                        obj.spawnYFrom = 0;
                        obj.spawnYTo = 0;
                        obj.spawnAngle = 90;
                        break;
                    case 1:
                        obj.spawnXTo = 0;
                        obj.spawnYFrom = 0;
                        obj.spawnYTo = 608;
                        obj.spawnAngle = 135;
                        break;
                    case 2:
                        obj.spawnXTo = 800;
                        obj.spawnYFrom = 0;
                        obj.spawnYTo = 608;
                        obj.spawnAngle = 0;
                        break;
                }
            } else {
                obj.spawnXFrom = 0;
                switch( spawnIndex ) {
                    case 0:
                        obj.spawnXTo = 800;
                        obj.spawnYFrom = 0;
                        obj.spawnYTo = 0;
                        obj.spawnAngle = 90;
                        break;
                    case 1:
                        obj.spawnXTo = 800;
                        obj.spawnYFrom = 0;
                        obj.spawnYTo = 608;
                        obj.spawnAngle = 45;
                        break;
                    case 2:
                        obj.spawnXTo = 0;
                        obj.spawnYFrom = 0;
                        obj.spawnYTo = 608;
                        obj.spawnAngle = 0;
                        break;
                }
            }
            if( phaseT &lt;= 24 ) {
                obj.spawnBlend = make_colour_hsv( 80, 255, 255 );
            } else if( phaseT &lt;= 120 ) {
                obj.spawnBlend = make_colour_hsv( 33, 255, 255 );
            } else if( phaseT &lt;= 216 ) {
                obj.spawnBlend = make_colour_hsv( 20, 255, 255 );
            } else {
                obj.spawnBlend = make_colour_hsv( 0, 255, 255 );        
            }
            obj.maxFrame = 48;
            spawnIndex++;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 19 (3:51 - 4:06) Machinations A
if( t &gt;= 11540 &amp;&amp; t &lt; 12290 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var tPhase = ( t - 11540 );
    
    if( tPhase == 0 ) {
        seg19SpawnXMin = 200;
        seg19SpawnXMax = 600;
        seg19SpawnYMin = 30;
        seg19SpawnYMax = 170;
        seg19CircleCount = 40;
        seg19SpawnColor = make_colour_hsv( 0, 255, 255 );
    } else if( tPhase == 192 ) {
        seg19SpawnXMin = 0;
        seg19SpawnXMax = 50;
        seg19SpawnYMin = 0;
        seg19SpawnYMax = 200;
        seg19CircleCount = 35;
        seg19SpawnColor = make_colour_hsv( 125, 255, 255 );
        with( objAlgA19Knife ) {
            image_blend = other.seg19SpawnColor;
        }
    } else if( tPhase == 192 * 2 ) {
        seg19SpawnXMin = 750;
        seg19SpawnXMax = 800;
        seg19SpawnYMin = 0;
        seg19SpawnYMax = 200;
        seg19CircleCount = 40;
        seg19SpawnColor = make_colour_hsv( 43, 255, 255 );
        with( objAlgA19Knife ) {
            image_blend = other.seg19SpawnColor;
        }
    } else if( tPhase == 192 * 3 ) {
        seg19SpawnXMin = 0;
        seg19SpawnXMax = 800;
        seg19SpawnYMin = 30;
        seg19SpawnYMax = 170;
        seg19CircleCount = 40;
        seg19SpawnColor = make_colour_hsv( 190, 255, 255 );
        with( objAlgA19Knife ) {
            image_blend = other.seg19SpawnColor;
        }
    }
    
    if( tPhase % 192 &lt; 48 * 3 ) {
        if( tPhase % 48 == 0 ) {
            var circlePhase = random( 360 );
            var circleOffset = 0;
            repeat( 2 ) {
                var spawnX = random_range( seg19SpawnXMin, seg19SpawnXMax );
                var spawnY = random_range( seg19SpawnYMin, seg19SpawnYMax );
                var circle = scrMakeCircle( spawnX, spawnY, circlePhase + circleOffset, seg19CircleCount, 10, objAlgA19Knife ); 
                for( var i = 0; i &lt; seg19CircleCount; i++ ) {
                    circle[i].image_blend = seg19SpawnColor;
                }
                var circleDelta = 360 / seg19CircleCount;
                circleOffset += random_range( 3, circleDelta - 3 );
                repeat( 60 ) {
                    var scale = random_range( 0.4, 1 );
                    var obj = instance_create( spawnX, spawnY, objAlgSphereDisappearing );
                    obj.speed = random_range( 5, 12 );
                    obj.direction = random( 360 );
                    obj.image_blend = seg19SpawnColor;
                    obj.image_xscale = scale;
                    obj.image_yscale = scale;
                }
            }
        }
    } else {
        if( tPhase % 6 == 0 ) {
            repeat( 3 ) {
                var spawnX = random_range( seg19SpawnXMin, seg19SpawnXMax );
                var spawnY = random_range( seg19SpawnYMin, seg19SpawnYMax );
                var circle = scrMakeCircle( spawnX, spawnY, random( 360 ), 8, 10, objAlgA19Knife ); 
                for( var i = 0; i &lt; 8; i++ ) {
                    circle[i].image_blend = seg19SpawnColor;
                }
                repeat( 11 ) {
                    var scale = random_range( 0.4, 1 );
                    var obj = instance_create( spawnX, spawnY, objAlgSphereDisappearing );
                    obj.speed = random_range( 5, 12 );
                    obj.direction = random( 360 );
                    obj.image_blend = seg19SpawnColor;
                    obj.image_xscale = scale;
                    obj.image_yscale = scale;
                }
            }
        }
    }
    
    if( !instance_exists( objAlgA19SquareEffect ) ) {
        repeat( 50 ) {
            var obj = instance_create( scrGetPlayerX(), scrGetPlayerY(), objAlgA19SquareEffect );
            obj.rotationSpeed = random_range( 20, 60 ) * choose( -1, 1 );
            obj.image_index = 2;
        }
    }
    
    // Effects.
    var colorHue = colour_get_hue( seg19SpawnColor );
    with( objAlgA19SquareEffect ) {
        var radius = random_range( 180, 200 );
        if( tPhase &lt; 50 ) {
            radius = random_range( lerp( 0, 180, tPhase / 50 ), lerp( 0, 200, tPhase / 50 ) );
        }
        speed = 1;
        direction = random( 360 );
        x = scrGetPlayerX() + hspeed * radius;
        y = scrGetPlayerY() + vspeed * radius;
        speed = 0;
        image_blend = make_colour_hsv( colorHue, 255, random_range( 20, 100 ) );
        if( irandom( 19 ) == 0 || other.t == 12289 ) {
            var obj = instance_create( x, y, objAlgSquareEffect );
            obj.direction = direction;
            obj.speed = 1;
            obj.friction = -0.5;
            obj.image_blend = image_blend;
            obj.image_index = image_index;
            obj.image_angle = image_angle
            obj.rotationSpeed = self.rotationSpeed / 3;
        }
    }
    if( t == 12289 ) {
        with( objAlgA19SquareEffect ) {
            instance_destroy();
        }
    }
    
    
    segment = 19;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 20 (4:06 - 4:13) Machinations B
if( t &gt;= 12290 &amp;&amp; t &lt; 12675 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var tPhase = ( t - 12290 ) % 96;
    if( t &lt; 12578 ) {
        if( tPhase == 0 ) {
            var offset = random_range( -20, 0 );
            var line = scrMakeLine( offset, 0, 840 + offset, 0, 35, objAlgA20Sphere );
            var lineSpeed = random_range( 10, 20 );
            if( t == 12290 ) {
                lineSpeed = 10;
            }
            for( var i = 0; i &lt; array_length_1d( line ); i++ ) {
                line[i].speed = lineSpeed;
                line[i].direction = 270;
            }
            line = scrMakeLine( offset, 608, 840 + offset, 608, 35, objAlgA20SquareEffect );
            for( var i = 0; i &lt; array_length_1d( line ); i++ ) {
                line[i].speed = 608 / 20 - lineSpeed;
                line[i].rotationSpeed = random_range( 30, 60 ) * choose( -1, 1 );
                line[i].direction = 90;
                line[i].image_blend = make_colour_hsv( random( 255 ), 255, random_range( 50, 60 ) );
                line[i].image_index = 1;
            }
        }
    } else if( t &lt; 12670 ) {
        if( tPhase == 0 || tPhase == 24 || tPhase == 48 ) {
            var offset = random_range( -20, 0 );
            var line = scrMakeLine( offset, 0, 840 + offset, 0, 30, objAlgA20Sphere );
            var lineSpeed = lerp( 35, 20, tPhase / 62 ) * 5 / 6;
            for( var i = 0; i &lt; array_length_1d( line ); i++ ) {
                line[i].speed = lineSpeed;
                line[i].direction = 270;
                line[i].framePoint1 = 12;
                line[i].framePoint2 = 24;
                line[i].minSpeed = 3;
                line[i].maxSpeed = 15;
            }
            line = scrMakeLine( offset, 608, 840 + offset, 608, 35, objAlgA20SquareEffect );
            for( var i = 0; i &lt; array_length_1d( line ); i++ ) {
                line[i].speed = 608 / 12 - lineSpeed;
                line[i].framePoint1 = 12;
                line[i].rotationSpeed = random_range( 30, 60 ) * choose( -1, 1 );
                line[i].direction = 90;
                line[i].image_blend = make_colour_hsv( random( 255 ), 255, random_range( 50, 60 ) );
                line[i].image_index = 1;
            }
        }
    }
    
    segment = 20;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 20B (4:13 - 4:21) Machinations B
if( t &gt;= 12675 &amp;&amp; t &lt; 13075 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var tPhase = ( t - 12675 ) % 96;
    if( t &lt; 12963 ) {
        if( tPhase == 0 ) {
            var offset = random_range( -20, 0 );
            var line = scrMakeLine( offset, 0, 840 + offset, 0, 25, objAlgA20Sphere );
            var lineSpeed = random_range( 10, 20 );
            if( t == 12675 ) {
                lineSpeed = 10;
            }
            
            for( var i = 0; i &lt; array_length_1d( line ); i++ ) {
                line[i].speed = lineSpeed;
                line[i].direction = 270;
            }
            line = scrMakeLine( offset, 608, 840 + offset, 608, 35, objAlgA20SquareEffect );
            for( var i = 0; i &lt; array_length_1d( line ); i++ ) {
                line[i].speed = 608 / 20 - lineSpeed;
                line[i].rotationSpeed = random_range( 30, 60 ) * choose( -1, 1 );
                line[i].direction = 90;
                line[i].image_blend = make_colour_hsv( random( 255 ), 255, random_range( 50, 60 ) );
                line[i].image_index = 1;
            }
        }
    } else if( t &lt; 13059 ) {
        if( tPhase == 0 || tPhase == 24 || tPhase == 48 ) {
            var offset = random_range( -20, 0 );
            var line = scrMakeLine( offset, 0, 840 + offset, 0, 25, objAlgA20Sphere );
            var lineSpeed = lerp( 35, 20, tPhase / 62 ) * 5 / 6;
            for( var i = 0; i &lt; array_length_1d( line ); i++ ) {
                line[i].speed = lineSpeed;
                line[i].direction = 270;
                line[i].framePoint1 = 12;
                line[i].framePoint2 = 24;
                line[i].minSpeed = 3;
                line[i].maxSpeed = 15;
            }
            line = scrMakeLine( offset, 608, 840 + offset, 608, 35, objAlgA20SquareEffect );
            for( var i = 0; i &lt; array_length_1d( line ); i++ ) {
                line[i].speed = 608 / 12 - lineSpeed;
                line[i].framePoint1 = 12;
                line[i].rotationSpeed = random_range( 30, 60 ) * choose( -1, 1 );
                line[i].direction = 90;
                line[i].image_blend = make_colour_hsv( random( 255 ), 255, random_range( 50, 60 ) );
                line[i].image_index = 1;
            }
        }
    }
    
    if( ( t - 12675 ) % 2 == 0 ) {
        var obj = instance_create( 400, 0, objAlgBullet );
        obj.speed = random_range( 9, 10 );
        obj.direction = random_range( 180, 360 );
        obj.image_angle = obj.direction;
        obj.image_blend = make_colour_hsv( 188, 255, 255 );
        
        var obj = instance_create( random_range( 0, 800 ), 608, objAlgSquareEffect );
        obj.direction = random_range( 60, 120 );
        obj.speed = 1;
        obj.friction = -0.5;
        obj.image_blend = make_colour_hsv( random( 255 ), 255, random_range( 40, 50 ) );
        obj.image_index = 2;
        obj.rotationSpeed = random_range( 20, 40 ) * choose( -1, 1 );
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 21 (4:21 - 4:37) Reminiscence A &amp; B
if( t &gt;= 13075 &amp;&amp; t &lt; 13840 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = ( t - 13075 );

    if( ( phaseT &lt;= 96 * 4 &amp;&amp; phaseT % 24 == 0 ) || ( phaseT &gt; 96 * 4 &amp;&amp; phaseT % 31 == 0 ) ) {
        var obj = instance_create( -150, 32, objAlgA22Sphere );
        obj.hspeed = random_range( 1.5, 3 );
        obj.gravity = 0.095;
        obj.image_blend = make_colour_hsv( 135, 255, 255 );
        
        obj = instance_create( 0, 32, objAlgA22Sphere );
        obj.hspeed = random_range( 2, 10 );
        obj.gravity = 0.095;
        obj.image_blend = make_colour_hsv( 135, 255, 255 );
    } else if( ( phaseT &lt;= 96 * 4 &amp;&amp; phaseT % 24 == 12 ) || ( phaseT &gt; 96 * 4 &amp;&amp; phaseT % 31 == 15 ) ) {
        var obj = instance_create( 950, 32, objAlgA22Sphere );
        obj.hspeed = -random_range( 1.5, 3 );
        obj.gravity = 0.095;
        obj.image_blend = make_colour_hsv( 192, 255, 255 );
        
        obj = instance_create( 800, 32, objAlgA22Sphere );
        obj.hspeed = -random_range( 2, 10 );
        obj.gravity = 0.095;
        obj.image_blend = make_colour_hsv( 192, 255, 255 );
    }
    
    if( phaseT &gt; 96 * 4 &amp;&amp; phaseT % 5 == 0 ) {
        var obj = instance_create( random( 800 ), 0, objAlgWave );
        obj.speed = 4.5;
        obj.image_blend = make_color_rgb( 255, 0, 0 );
        obj.direction = random_range( 260, 280 );
        obj.image_angle = obj.direction;
    }
    
    if( t == 13839 ) {
        with( objAlgA22Sphere ) {
            shouldBounce = false;
            direction = scrTargetPlayer( x, y ) + 180;
            gravity = -0.095;
        }
        
        with( objAlgWave ) {
            direction = scrTargetPlayer( x, y ) + 180;
        }
    }
    
    // Effects.
    if( phaseT % 2 == 0 ) {
        if( phaseT % 4 = 0 ) {
            var obj = instance_create( 0, choose( 0, 608 ), objAlgSquareEffect );
            obj.direction = point_direction( obj.x, obj.y, random( 800 ), random( 608 ) );
            obj.speed = 1;
            obj.friction = -0.25;
            obj.image_blend = make_colour_hsv( 135, 255, random_range( 40, 50 ) );
            obj.image_index = 2;
            obj.rotationSpeed = random_range( 20, 40 ) * choose( -1, 1 );
        } else {
            var obj = instance_create( 800, choose( 0, 608 ), objAlgSquareEffect );
            obj.direction = point_direction( obj.x, obj.y, random( 800 ), random( 608 ) );
            obj.speed = 1;
            obj.friction = -0.25;
            obj.image_blend = make_colour_hsv( 192, 255, random_range( 40, 50 ) );
            obj.image_index = 2;
            obj.rotationSpeed = random_range( 20, 40 ) * choose( -1, 1 );
        }
    }

    segment = 21;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Red Segment 22 (4:37 - 4:45) Reminiscence C
if( t &gt;= 13840 &amp;&amp; t &lt; 14225 &amp;&amp; instance_exists(objPlayer) ) {
    segment = 22;
    
    // Spawn an accelerating ring.
    if( t == 13840 ) {
        var mainX = 400;
        var mainY = 0;
        var circleRadius = 50;
        var mainController = instance_create( mainX, mainY, oRedireS23CircleController );
        mainController.radius = circleRadius;
        mainController.radiusDelta = 1.7;
        var leftCornerController = instance_create( 0, 608, oRedireS23CircleController );
        leftCornerController.radius = circleRadius;
        leftCornerController.radiusDelta = 1;
        var rightCornerController = instance_create( 800, 608, oRedireS23CircleController );
        rightCornerController.radius = circleRadius;
        rightCornerController.radiusDelta = 1;
        
        var circleCount = 20;
        var spawnDir = random_range( 0, 360 ); 
        for( var i = 0; i &lt; circleCount; i++ ) {
            var offsetX = lengthdir_x( circleRadius, spawnDir );
            var offsetY = lengthdir_y( circleRadius, spawnDir );
            // Main circle.
            var ringBullet = instance_create( mainX + offsetX, mainY + offsetY, oRedireS23CircleBullet );
            ringBullet.startDir = spawnDir;
            ringBullet.controller = mainController;
            // Corner circles.
            var leftCornerBullet = instance_create( offsetX, 608 + offsetY, oRedireS23CornerCircleBullet );
            leftCornerBullet.startDir = spawnDir;
            leftCornerBullet.controller = leftCornerController;
            var rightCornerBullet = instance_create( 800 + offsetX, 608 + offsetY, oRedireS23CornerCircleBullet );
            rightCornerBullet.startDir = spawnDir;
            rightCornerBullet.controller = rightCornerController;
            
            spawnDir += 360 / circleCount;
        }
    }
        
    // Slow the ring down.
    if( t == 14035 ) {
        with( oRedireS23CircleController ) {
            phaseAccel = -phaseAccel;
            radiusDelta = -radiusDelta;
            hueDelta = -hueDelta;
        }
    }
     
    // Delete the cirlce.
    if( t == 14224 ) {
        with( oRedireS23CircleController ) {
            instance_destroy();
        }
        with( oRedireS23CircleBullet ) {
            instance_destroy();
        }
        with( oRedireS23CornerCircleBullet ) {
            instance_destroy();
        }
    }
    
    // Effects.
    if( ( t - 13840 ) % 24 == 0 &amp;&amp; t &lt; 14225 - 24 ) {
        var obj = instance_create( 400, 304, objAlgA21SquareEffect );
        obj.image_index = 1;
        obj.rotationSpeed = random_range( 1, 2 );
        with( oRedireS23CircleController ) {
            obj.image_blend = make_colour_hsv( self.currentHue, 255, random_range( 30, 40 ) );
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Red Segment 23 (4:45 - 4:54) Reminiscence D
if( t &gt;= 14225 &amp;&amp; t &lt; 14700 &amp;&amp; instance_exists(objPlayer) ) {
    segment = 23;
    
    // Explosions.
    if( t == 14225 ) {
        scrRedireS23CreateExplosion( 100 );
        scrRedireS23CreateExplosion( 700 );
    }
    if( t == 14275 ) {
        scrRedireS23CreateExplosion( 200 );
        scrRedireS23CreateExplosion( 600 );
    }
    if( t == 14320 ) {
        scrRedireS23CreateExplosion( 300 );
        scrRedireS23CreateExplosion( 500 );
    }
    if( t == 14370 ) {
        scrRedireS23CreateExplosion( 400 );
    }
    
    if( t == 14415 ) {
        scrRedireS23CreateExplosion( 300 );
        scrRedireS23CreateExplosion( 500 );
    }
    if( t == 14465 ) {
        scrRedireS23CreateExplosion( 200 );
        scrRedireS23CreateExplosion( 600 );
    }
    if( t == 14515 ) {
        scrRedireS23CreateExplosion( 100 );
        scrRedireS23CreateExplosion( 700 );
    }    
 
    // Final burst.
    if( t &gt;= 14615 &amp;&amp; t &lt; 14695 ) {
        repeat( irandom_range( 1, 2 ) ) {
            var s24WallBullet = instance_create( random_range( 0, 800 ), 0, oRedireS23WallBullet );
            s24WallBullet.direction = -90;
            s24WallBullet.speed = random_range( 3, 5 );
            s24WallBullet.image_index = choose( 0, 3 );
            s24WallBullet.trailFreq = 1;
            s24WallBullet.trailAlpha = 0.5;
        }
    }
    
    // Last actions.
    if( t == 14695 ) {
       with( oRedireS23WallBullet ) {
           fadeOut = true;
       }
    }
    
    // Effects.
    var phaseT = t - 14225;
    if( phaseT % 12 == 0 &amp;&amp; t &lt; 14615 ) {
        var obj = instance_create( 400, 304, objAlgA22SquareEffect );
        obj.depth -= t;
    
        obj.rotationSpeed = random_range( 1, 2 ) * choose( -1, 1 );
        obj.image_index = 0;
        if( t == 14609 ) {
            obj.image_blend = make_colour_hsv( 0, 255, 40 );
        } else if( phaseT % 24 == 0 ) {
            obj.image_blend = make_colour_hsv( 166, 255, 40 );
        } else {
            obj.image_blend = make_colour_hsv( 138, 255, 40 );
        }
    }
    
    if( t &gt;= 14676 &amp;&amp; t &lt; 14699 ) {
        var colorVal = lerp( 40, 0, ( t - 14676 ) / 24 );
        with( objAlgA22SquareEffect ) {
           image_blend = make_colour_hsv( colour_get_hue( image_blend ), 255, colorVal );
        }
    } else if( t == 14699 ) {
        with( objAlgA22SquareEffect ) {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 24 (4:54 - 5:17) Victory Verse O
if( t &gt;= 14700 &amp;&amp; t &lt; 15850 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    var phaseT = t - 14700;
    if( t == 14700 ) {
        seg24Offset = 0;
        seg24XOffset = 6 * 47;
        seg24XSpeed = 6;
        seg24YSpeed = 0;
        seg24YCircleId = 0;
    }
    
    seg24XOffset += abs( seg24XSpeed );
    if( phaseT &gt;= 96 * 4 ) {
        seg24XSpeed = 6 * cos( ( phaseT - 96 * 4 ) * pi / ( 1150 - 96 * 4 ) );
        seg24YSpeed = 6.2 * sin( ( phaseT - 96 * 4 ) * pi / ( 1150 - 96 * 4 ) );
        seg24Offset += seg24YSpeed;
        with( objAlgA25Star ) {
            self.circleSpeedX = self.spawnDir * other.seg24XSpeed;
            self.circleSpeedY = other.seg24YSpeed;
        }
    }
    
    if( seg24XOffset &gt;= 6 * 48 &amp;&amp; phaseT &lt; 96 * 11 ) {
        scrA25Spawn( 3, 608 - random( 32 ) + seg24Offset, -1, seg24XSpeed, seg24YSpeed );
        scrA25Spawn( 4, 358 - random( 32 ) + seg24Offset, 1, seg24XSpeed, seg24YSpeed );
        scrA25Spawn( 5, 108 - random( 32 ) + seg24Offset, -1, seg24XSpeed, seg24YSpeed );
        scrA25Spawn( 4, -142 - random( 32 ) + seg24Offset, 1, seg24XSpeed, seg24YSpeed );
        seg24XOffset -= 6 * 48;
    }
    
    // Effects.
    if( phaseT == 0 ) {
        seg25EffectsDir = choose( -1, 1 );
        seg25EffectsImage = 1;
    }
    if( phaseT &lt; 96 * 4 ) {
        if( phaseT % 96 == 0 ) {
            seg25EffectsDir *= -1;
        }
    } else if( phaseT &lt; 96 * 8 ) {
        if( phaseT % 48 == 0 ) {
            seg25EffectsDir *= -1;
        }
    } else {
        if( phaseT % 48 == 0 ) {
            seg25EffectsDir *= -1;
            seg25EffectsImage = 3 - seg25EffectsImage;
        }
    }
    if( phaseT % 2 == 0 ) {
        repeat( 2 ) {
            var obj = instance_create( 400, 304, objAlgA25SquareEffect );
            obj.direction = random( 360 );
            obj.speed = 1.2;
            obj.friction = -0.1;
            obj.image_blend = make_colour_hsv( random( 255 ), 255, random_range( 40, 50 ) );
            obj.image_index = 2;
            obj.rotationSpeed = random_range( 10, 20 ) * choose( -1, 1 );
            obj.movementRotation = random_range( 2, 4 ) * seg25EffectsDir / 2;
        }
    }
    
    segment = 24;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 25 (5:17 - 5:25) Victory Verse O
if( t &gt;= 15850 &amp;&amp; t &lt; 16240 &amp;&amp; instance_exists(objPlayer) ) {
    segment = 25;
    
    if(t == 15864 ||
       t == 15962 ||
       t == 16058 ||
       t == 16151 ) {
        a = instance_create(400, 200, objArchBullet6);
        a.direction = point_direction(objPlayer.x, objPlayer.y, 400, 304);
        a.speed = 3;
        a.hspeed = -a.hspeed;
    }
    if( t == 16239 ) {
        with(objArchBullet6) {
            instance_destroy();
        }
        with(objArchBullet1) {
            direction = point_direction(objPlayer.x, objPlayer.y, x, y);
            speed = 10;
        }
    }
    
    // Effects.
    if( t % 2 == 0 ) {
        repeat( 2 ) {
            var obj = instance_create( random( 800 ), 608, objAlgSquareDisappearing );
            obj.direction = random_range( 70, 110 );
            obj.speed = 10;
            obj.image_blend = choose( make_colour_rgb( 40, 0, 0 ), make_colour_rgb( 0, 40, 0 ), make_colour_rgb( 0, 0, 40 ) );
            obj.image_index = 2;
            obj.rotationSpeed = random_range( 10, 20 ) * choose( -1, 1 );
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 26 (5:25 - 5:40) Victory Verse X
if( t &gt;= 16240 &amp;&amp; t &lt; 17010 &amp;&amp; instance_exists(objPlayer) ) {
    segment = 26;
    
    if( t % 96 == 16 &amp;&amp; t &lt; 16910 ) {
        a = instance_create(400, 228, objArchBullet5);
        a.direction = 0;
        a.speed = 23;
        a = instance_create(400, 228, objArchBullet5);
        a.direction = 180;
        a.speed = 23;
    }
    
    if( t &gt; 16917 &amp;&amp; t &lt; 16974 &amp;&amp; t%6 == 0 ) {
        repeat(2) {
            a = instance_create(random_range(100, 700), random_range(32,256), objArchBullet5_2);
            a.direction = 270 + random_range(-30, 30);
            a.speed = random_range(1,3);
            a.special = 1;
        }
        
    }
    
    // Effects.
    if( t % 2 == 0 ) {
        repeat( 2 ) {
            var obj = instance_create( random( 800 ), 608, objAlgSquareDisappearing );
            obj.direction = random_range( 70, 110 );
            obj.speed = 10;
            obj.image_blend = make_colour_rgb( 40, 0, 0 );
            obj.image_index = 2;
            obj.rotationSpeed = random_range( 10, 20 ) * choose( -1, 1 );
        }
    }
    if( t % 4 == 0 ) {
        with( objArchBullet5 ) {
            var obj = instance_create( x, y, objAlgA27SquareEffect );
            obj.direction = random_range( 75, 125 );
            obj.speed = 8;
            obj.image_blend = make_colour_hsv( 0, 255, random_range( 40, 80 ) );
            obj.image_index = 1;
            obj.rotationSpeed = random_range( 20, 40 ) * choose( -1, 1 );
        }
        if( t &gt;= 16910 ) {
            var obj = instance_create( random( 800 ), 0, objAlgA27SquareEffect );
            obj.direction = 180 + random_range( 75, 125 );
            obj.speed = 8;
            obj.image_blend = make_colour_hsv( 0, 255, random_range( 40, 80 ) );
            obj.image_index = 1;
            obj.rotationSpeed = random_range( 20, 40 ) * choose( -1, 1 );
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 27 (5:40 - 5:55) Mercy
if( t &gt;= 17010 &amp;&amp; t &lt; 17775 &amp;&amp; instance_exists(objPlayer) ) {
    segment = 27;
    if( t &lt; 17401 ) {
        if( t % 2 == 0 ) {
            a = instance_create(400, 304, objArchBullet4);
            a.image_index = 1;
            a.image_xscale = 0.9;
            a.image_yscale = 0.9;
            a.rspd = random_range(2,6);
        }
        if( t &gt; 17205 &amp;&amp; t % 10 != 0 ) {
            a = instance_create(400, 304, objArchBullet4);
            a.image_index = 1;
            a.image_xscale = 0.9;
            a.image_yscale = 0.9;
            a.rspd = random_range(2,6);
        }
    } else {
        if( t % 2 == 0 ) {
            a = instance_create(400, 304, objArchBullet4);
            a.image_xscale = 0.9;
            a.image_yscale = 0.9;
            a.rspd = 4;
        }
        if( t &gt; 17588 &amp;&amp; t % 4 != 0 ) {
            a = instance_create(400, 304, objArchBullet4);
            a.image_xscale = 0.9;
            a.image_yscale = 0.9;
            a.rspd = 4;
        }
    }
    
    // Effects.
    if( t % 3 == 0 &amp;&amp; t &lt; 17705 ) {
        var spawnX = choose( 0, 800 );
        var spawnY = random( 608 );
        if( t % 6 == 0 ) {
            spawnX = random( 800 );
            spawnY = choose( 0, 608 );
        }
        var obj = instance_create( spawnX, spawnY, objAlgA28SquareEffect );
        obj.direction = point_direction( obj.x, obj.y, 400, 304 );
        obj.speed = 8;
        if( t &lt; 17401 ) {
            obj.image_blend = make_colour_hsv( 160, 205, random_range( 40, 80 ) );
        } else {
            if( irandom( 1 ) == 0 ) {
                obj.image_blend = make_colour_hsv( 0, 255, random_range( 40, 80 ) );
            } else {
                obj.image_blend = make_colour_hsv( 160, 205, random_range( 40, 80 ) );
            }
        }
        obj.image_index = 1;
        obj.rotationSpeed = random_range( 20, 40 ) * choose( -1, 1 );
    }
    
    if( t &gt;= 17401 &amp;&amp; t &lt;= 17755 &amp;&amp; ( t - 17401 ) % 54 == 0 ) {
        var obj = instance_create( 400, 304, objAlgA27SquareEffect );
        if( ( t - 17401 ) % 108 == 0 ) {
            obj.image_blend = make_colour_hsv( 192, 255, 255 );
        } else {
            obj.image_blend = make_colour_hsv( 135, 255, 255 );
        }
        obj.image_index = 1;
        obj.rotationSpeed = random_range( 20, 40 ) * choose( -1, 1 );
    }
    if( t == 17755 ) {
        with( objAlgA27SquareEffect ) {
            if( colour_get_hue( image_blend ) == 135 ) {
                hspeed = -20;
            } else {
                hspeed = 20;
            }
            vspeed = ( 304 - 32 - 96 ) / 20;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 28 (5:55 - 6:11) Malevolence
if( t &gt;= 17775 &amp;&amp; t &lt; 18545 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    if( t == 17775 ) {
        seg29Speed = random_range( 0.5, 29 );
    }
    var effectColorVal = random_range( 35, 60 );
    var scale = 0.85 * 15 / 18;
    seg29Speed = ( seg29Speed + random_range( 6, 22 ) ) % 29 + 0.5;
    //if( t % 10 != 0 ) {
        if( t &lt; 17967 ) {
            var obj = instance_create( 800, 608 - 32 - 96, objAlgA29Frag );
            obj.speed = seg29Speed;
            obj.direction = 90;
            obj.dirInc = 2;
            obj.image_blend = make_colour_hsv( 192, 255, 255 );
            obj.image_xscale = scale;
            obj.image_yscale = scale;
            
            obj = instance_create( 0, random( 608 ), objAlgA29SquareEffect );
            obj.rotationSpeed = random_range( 10, 20 ) * choose( -1, 1 );
            obj.speed = 6;
            obj.friction = -0.5;
            obj.image_index = 2;
            obj.direction = random_range( -20, 20 );
            obj.image_blend = make_colour_hsv( 192, 255, effectColorVal );
            
        } else if( t &lt; 18159 ) {
            var obj = instance_create( 0, 608 - 32 - 96, objAlgA29Frag );
            obj.speed = seg29Speed;
            obj.direction = 90;
            obj.dirInc = -2;
            obj.image_blend = make_colour_hsv( 135, 255, 255 );
            obj.image_xscale = scale;
            obj.image_yscale = scale;
            
            obj = instance_create( 800, random( 608 ), objAlgA29SquareEffect );
            obj.rotationSpeed = random_range( 10, 20 ) * choose( -1, 1 );
            obj.speed = 6;
            obj.friction = -0.5;
            obj.image_index = 2;
            obj.direction = random_range( 160, 200 );
            obj.image_blend = make_colour_hsv( 135, 255, effectColorVal );
        }
        if( t &gt;= 18130 &amp;&amp; t &lt; 18351 &amp;&amp; t % 5 != 0 ) {
            var spawnY = lerp( 608 - 32 - 96, 608, ( t - 18159 ) / ( 18351 - 18159 ) );
            var spawnDir = 45;
            var spawnFramePoint = 80;
            var obj = instance_create( 800, spawnY, objAlgA29Frag );
            obj.speed = seg29Speed;
            obj.direction = spawnDir;
            obj.framePoint = spawnFramePoint;
            obj.dirInc = 180 / spawnFramePoint;
            obj.image_blend = make_colour_hsv( 192, 255, 255 );
            obj.image_xscale = scale;
            obj.image_yscale = scale;
            
            obj = instance_create( choose( 0, 800 ), random( 608 ), objAlgA29SquareEffect );
            obj.rotationSpeed = random_range( 10, 20 ) * choose( -1, 1 );
            obj.speed = 6;
            obj.friction = -0.5;
            obj.image_index = 2;
            if( obj.x &lt; 400 ) {
                obj.direction = random_range( -20, 20 );
                obj.image_blend = make_colour_hsv( 192, 255, effectColorVal );
            } else {
                obj.direction = random_range( 160, 200 );
                obj.image_blend = make_colour_hsv( 135, 255, effectColorVal );
            }
        }
        if( t &gt;= 18330 &amp;&amp; t &lt; 18480 &amp;&amp; t % 5 != 0 ) {
            var spawnY = lerp( 608 - 32 - 96, 608, ( t - 18351 ) / ( 18480 - 18351 ) );
            var spawnDir = 135; 
            var spawnFramePoint = 80;
            var obj = instance_create( 0, spawnY, objAlgA29Frag );
            obj.speed = seg29Speed;
            obj.direction = spawnDir;
            obj.framePoint = spawnFramePoint;
            obj.dirInc = -180 / spawnFramePoint;
            obj.image_blend = make_colour_hsv( 135, 255, 255 );
            obj.image_xscale = scale;
            obj.image_yscale = scale;
            
            obj = instance_create( choose( 0, 800 ), random( 608 ), objAlgA29SquareEffect );
            obj.rotationSpeed = random_range( 10, 20 ) * choose( -1, 1 );
            obj.speed = 6;
            obj.friction = -0.5;
            obj.image_index = 2;
            if( obj.x &lt; 400 ) {
                obj.direction = random_range( -20, 20 );
                obj.image_blend = make_colour_hsv( 192, 255, effectColorVal );
            } else {
                obj.direction = random_range( 160, 200 );
                obj.image_blend = make_colour_hsv( 135, 255, effectColorVal );
            }
        }
    //}

    segment = 28;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 29 (6:11 - 6:34) Sickness A
if( t &gt;= 18545 &amp;&amp; t &lt; 19697 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    if( t == 18545 &amp;&amp; !instance_exists( objAlgShaderBackground ) ) {
        instance_create( 400, 304, objAlgShaderBackground );
    }
    var phaseT = t - 18545;
    if( phaseT % 48 == 0 ) {
        with( objAlgA30Sphere ) {
            speed += friction * 48;
        }
        if( phaseT == 48 * 15 ) {
            with( objAlgA30Sphere ) {
                friction *= 1.9;
            }
        }
        if( phaseT != 48 * 7 ) {
            var hueVal = random( 255 );
            var color = make_color_hsv( hueVal, 255, 255 );
            with( objAlgShaderBackground ) {
                self.shaderHue = hueVal;
                self.shaderSpeed = 2 / 50;
                self.shaderFriction = self.shaderSpeed * 2 / 3 / 48;
            }
            var spawnX = random_range( 150, 650 );
            var spawnY = random( 150 );
            repeat( 90 ) {
                var obj = instance_create( spawnX, spawnY, objAlgA30Sphere );
                //obj.image_xscale = 4.0;
                //obj.image_yscale = 0.25;
                obj.image_blend = color;
                obj.direction = random( 360 );
                obj.image_angle = obj.direction;
                if( phaseT &lt; 48 * 15 ) {
                    obj.speed = random_range( 3, 12 );
                    obj.friction = obj.speed / 96;
                } else {
                    obj.speed = random_range( 5, 16 );
                    obj.friction = obj.speed / 96;
                    obj.friction *= 1.9;
                }
            }
        }
    }
    if( phaseT == 48 * 7 ) {
        var hueVal = random( 255 );
        seg30Color = make_color_hsv( hueVal, 255, 255 );
        seg30Side = 0;
        if( scrGetPlayerX() &lt; 400 ) {
            seg30Side = 800;
        }
        seg30Dir = point_direction( seg30Side, 0, scrGetPlayerX(), scrGetPlayerY() );
        with( objAlgShaderBackground ) {
            self.shaderHue = hueVal;
        }
    }
    if( phaseT &gt;= 48 * 7 &amp;&amp; phaseT &lt;= 48 * 7 + 36 ) {
        var obj = instance_create( seg30Side, 0, objAlgRice );
        obj.image_blend = seg30Color;
        obj.direction = seg30Dir;
        obj.speed = lerp( 3, 15, ( phaseT - 48 * 7 ) / 36 );
        obj.image_xscale = 1.33;
        obj.image_yscale = 1.33;
        
        obj = instance_create( seg30Side, 0, objAlgRice );
        obj.image_blend = seg30Color;
        obj.direction = seg30Dir + 25;
        obj.speed = lerp( 3, 15, ( phaseT - 48 * 7 ) / 36 );
        obj.image_xscale = 1.33;
        obj.image_yscale = 1.33;
        
        obj = instance_create( seg30Side, 0, objAlgRice );
        obj.image_blend = seg30Color;
        obj.direction = seg30Dir - 25;
        obj.speed = lerp( 3, 15, ( phaseT - 48 * 7 ) / 36 );
        obj.image_xscale = 1.33;
        obj.image_yscale = 1.33;
    }
    
    if( t == 19686 ) {
        with( objAlgA30Sphere ) {
            self.despawn = true;
        }
    } else if( t == 19696 ) {
        with( objAlgA30Sphere ) {
            friction = -0.2;
            direction = point_direction( x, y, scrGetPlayerX(), scrGetPlayerY() ) + choose( -90, 90 );
            image_angle = direction;
        }
    }
    
    if( t == 19696 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep = -0.1 / 24;
        }
    }
    
    segment = 29;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 30 (6:34 - 6:49) Sickness B
if( t &gt;= 19697 &amp;&amp; t &lt; 20465 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    if( t == 19697 ) {
        seg31Angle = random( 360 );
    }
    var phaseT = t - 19697;
    if( phaseT &lt; 96 &amp;&amp; phaseT % 2 == 0 ) {
        repeat( 8 ) {
            var obj = instance_create( 800, 404, objAlgA31Sphere );
            obj.image_blend = make_color_hsv( 66, 255, 255 );
            obj.direction = seg31Angle;
            obj.speed = lerp( 3, 12, ( phaseT % 96 ) / 95 );
            obj.image_xscale = 0.66;
            obj.image_yscale = 0.66;
            seg31Angle += random_range( 30, 45 );
        }
        with( objAlgA31Sphere ) {
            if( speed &gt; 1 ) {
                speed = lerp( 3, 12, ( phaseT % 96 ) / 95 );
            }
        }
    } else if( phaseT == 96 ) {
        with( objAlgA31Sphere ) {
            speed = 0.001;
        }
    } else if( phaseT &lt; 96 * 2  &amp;&amp; phaseT % 2 == 0 ) {
        repeat( 7 ) {
            var obj = instance_create( 100, 0, objAlgA31Sphere );
            obj.image_blend = make_color_hsv( 127, 255, 255 );;
            obj.direction = seg31Angle;
            obj.speed = lerp( 3, 10, ( phaseT % 96 ) / 95 );
            obj.image_xscale = 0.66;
            obj.image_yscale = 0.66;
            
            seg31Angle += random_range( 30, 45 );
        }
        with( objAlgA31Sphere ) {
            if( speed &gt; 1 ) {
                speed = lerp( 3, 10, ( phaseT % 96 ) / 95 );
            }
        }
    } else if( phaseT == 96 * 2 ) {
        with( objAlgA31Sphere ) {
            speed = 2.75;
        }
    } else if( phaseT &gt;= 96 * 4 &amp;&amp; phaseT &lt; 96 * 5 &amp;&amp; phaseT % 2 == 0 ) {
        repeat( 6 ) {
            var obj = instance_create( 700, 0, objAlgA31Sphere );
            obj.image_blend = make_color_hsv( 166, 255, 255 );;
            obj.direction = seg31Angle;
            obj.speed = lerp( 3, 9, ( phaseT % 96 ) / 95 );
            obj.image_xscale = 0.66;
            obj.image_yscale = 0.66;
            obj.angularVelocity = -0.1;
            
            seg31Angle += random_range( 30, 45 );
        }
        with( objAlgA31Sphere ) {
            if( speed &gt; 2.5 ) {
                speed = lerp( 3, 9, ( phaseT % 96 ) / 95 );
            }
        }
    } else if( phaseT == 96 * 5 ) {
        with( objAlgA31Sphere ) {
            speed = 0.001;
        }
    } else if( phaseT &gt; 96 * 5 &amp;&amp; phaseT &lt; 96 * 6 &amp;&amp; phaseT % 2 == 0 ) {
        repeat( 6 ) {
            var obj = instance_create( 0, 504, objAlgA31Sphere );
            obj.image_blend = make_color_hsv( 230, 255, 255 );;
            obj.direction = seg31Angle;
            obj.speed = lerp( 3, 8, ( phaseT % 96 ) / 95 );
            obj.image_xscale = 0.66;
            obj.image_yscale = 0.66;
            obj.angularVelocity = -0.1;
            
            seg31Angle += random_range( 30, 45 );
        }
        with( objAlgA31Sphere ) {
            if( speed &gt; 2 ) {
                speed = lerp( 3, 8, ( phaseT % 96 ) / 95 );
            }
        }
    } else if( phaseT == 96 * 6 ) {
        with( objAlgA31Sphere ) {
            speed = 2.75;
        }
    }
    
    // Effects.
    if( phaseT == 0 ) {
        var obj = instance_create( 800, 404, objAlgShaderBackground );
        obj.shaderHue = 66;
        obj.shaderSpeed = -1 / 50;
        obj.shaderFriction = 1 / 50 / 48;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
    } else if( phaseT == 96 ) {
        with( objAlgShaderBackground ) {
            self.shaderSpeed = 0;
            self.shaderFriction = 0;
        }
        var obj = instance_create( 100, 0, objAlgShaderBackground );
        obj.shaderHue = 127;
        obj.shaderSpeed = -1 / 50;
        obj.shaderFriction = 1 / 50 / 48;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
    } else if( phaseT == 96 * 2 ) {
        with( objAlgShaderBackground ) {
            self.shaderSpeed = -1 / 50;
            self.shaderFriction = 0;
        }
    } else if( phaseT == 96 * 3 + 48 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep = -0.1 / 48;
        }
    } else if( phaseT == 96 * 4 ) {
        var obj = instance_create( 700, 0, objAlgShaderBackground );
        obj.shaderHue = 166;
        obj.shaderSpeed = 1 / 50;
        obj.shaderFriction = -1 / 50 / 48;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
    } else if( phaseT == 96 * 5 ) {
        with( objAlgShaderBackground ) {
            self.shaderSpeed = 0;
            self.shaderFriction = 0;
        }
        var obj = instance_create( 0, 504, objAlgShaderBackground );
        obj.shaderHue = 230;
        obj.shaderSpeed = 1 / 50;
        obj.shaderFriction = -1 / 50 / 48;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
    } else if( phaseT == 96 * 6 ) {
        with( objAlgShaderBackground ) {
            self.shaderSpeed = 1 / 50;
            self.shaderFriction = 0;
        }
    } else if( phaseT == 96 * 7 + 48 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep = -0.1 / 48;
        }
    }
    
    segment = 30;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 31 (6:49 - 6:57) Sickness C
if( t &gt;= 20465 &amp;&amp; t &lt; 20850 &amp;&amp; instance_exists(objPlayer) ) {
    segment = 31;
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    if( t == 20465 ) {
        seg32Color = random( 255 );
        seg32EffectsColor = 0;
        seg32EffectPos = 0;
    }
    var phaseT = t - 20465;
    var left = lerp( 0, 250, phaseT / 385 );
    var right = lerp( 800, 550, phaseT / 385 );
    
    if( phaseT % 24 == 0 &amp;&amp; phaseT &lt; 384 ) {
        var circle = scrMakeCircle( random_range( left, right ), 150, random( 360 ), 11, choose( 0.5, 1.5, 2.5, 3.5 ), objAlgSphere );
        var color = random( 255 );
        seg32EffectsColor = color;
        for( var i = 0; i &lt; array_length_1d( circle ); i++ ) {
            circle[i].image_blend = make_color_hsv( color, 255, 255 );
            circle[i].gravity = 0.15;
        }
    }
    
    repeat( 2 ) {
        var obj = instance_create( random_range( 0, left ), 0, objAlgSphere );
        obj.speed = 14;
        obj.direction = random_range( 268, 272 );
        obj.image_blend = make_colour_hsv( seg32Color, 255, 255 );
        
        obj = instance_create( random_range( right, 800 ), 0, objAlgSphere );
        obj.speed = 14;
        obj.direction = random_range( 268, 272 );
        obj.image_blend = make_colour_hsv( seg32Color, 255, 255 );
        
        seg32Color = ( seg32Color + 256 / 4 ) % 256
    }
    
    // Effects
    if( phaseT % 24 == 0 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep = -0.1 / 24;
        }
        if( phaseT &lt; 384 ) {
            seg32EffectPos = ( seg32EffectPos + 1 ) % 4;
            var spawnX = floor( seg32EffectPos / 2 ) * 800;
            var spawnY = ( seg32EffectPos % 2 ) * 608;
            var obj = instance_create( spawnX, spawnY, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = seg32EffectsColor;
            obj.shaderSpeed = 1 / 50;
            obj.alphaStep = 0.1 / 24;
            obj.shaderMod1 = 0;
            obj.shaderMod2 = 0;
            obj.shaderMod3 = 0;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 32 (6:57 - 7:05) Savagery Of Angels
if( t &gt;= 20850 &amp;&amp; t &lt; 21230 &amp;&amp; instance_exists(objPlayer) ) {
    segment = 32;
    
    if( t &lt; 21138 ) {
        if( t % 24 == 0 ) {
            xx = objPlayer.x + random_range(-50, 50);
            yy = random_range(256, 384);
            repeat(5) {
                a = instance_create(xx, yy, objArchBullet7);
            }
        }
        
        if( t % 4 == 0 ) {
            a = instance_create(800, irandom(608), objArchBullet8);
            a.direction = 180 + random_range(-5, 5);
            //a.direction = 180;
            a.speed = random_range(4,8);
        }
    } else if( t == 21138 ) {
        with( objArchBullet8 ) {
            friction = -0.1;
        }
    }
    
    // Effects.
    if( t == 20850 ) {
        var obj = instance_create( 400, 0, objAlgShaderBackground );
        obj.shaderHue = 25;
        obj.shaderSpeed = 1 / 50;
        obj.alphaStep = 0.1 / 24;
        obj.shaderMod4 = 0;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
        
        obj = instance_create( 400, 608, objAlgShaderBackground );
        obj.shaderHue = 166;
        obj.shaderSpeed = 1 / 50;
        obj.alphaStep = 0.1 / 24;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
    } else if( t == 21229 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep = -0.1 / 24;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 33 (7:05 - 7:12) Savagery Of Angels
if( t &gt;= 21230 &amp;&amp; t &lt; 21615 &amp;&amp; instance_exists(objPlayer) ) {
    if( t % 24 == 0 &amp;&amp; t &lt; 21519 ) {
        for( i = 0; i &lt; 360; i += 40 ) {
            a = instance_create(random_range(128, 800-128), 128, objArchBullet12);
            a.direction = point_direction(a.x, a.y, objPlayer.x, objPlayer.y) + random_range(-20,20) + i;
            a.speed = 5;
        }
    }
    if( t % 24 == 12 ) {
        scrMakeCircle(400, 160, point_direction(400,160,objPlayer.x, objPlayer.y), 14, 8, objArchBullet8);
    }
    
    // Effects.
    if( t == 21230 ) {
        var obj = instance_create( 400, 160, objAlgShaderBackground );
        obj.shaderHue = 0;
        obj.shaderSpeed = 2 / 50;
        obj.alphaStep = 0.1 / 24;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.shaderMod4 = 0;
        obj.image_xscale = 1.5;
        obj.image_yscale = 1.5;
        
        obj = instance_create( 400, 160, objAlgShaderBackground );
        obj.shaderHue = 255 / 3;
        obj.shaderSpeed = 2 / 50;
        obj.alphaStep = 0.1 / 24;
        obj.shaderMod1 = 0;
        obj.shaderMod3 = 0;
        obj.shaderMod4 = 0;
        obj.image_xscale = 1.5;
        obj.image_yscale = 1.5;
        
        obj = instance_create( 400, 160, objAlgShaderBackground );
        obj.shaderHue = 510 / 3;
        obj.shaderSpeed = 2 / 50;
        obj.alphaStep = 0.1 / 24;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod4 = 0;
        obj.image_xscale = 1.5;
        obj.image_yscale = 1.5;
        
        obj = instance_create( 400, 160, objAlgShaderBackground );
        obj.shaderHue = 25;
        obj.shaderSpeed = -2 / 50;
        obj.alphaStep = 0.1 / 24;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.image_xscale = 1.5;
        obj.image_yscale = 1.5;
    } else if( t == 21614 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep = -0.1 / 24;
        }
    }
    segment = 33;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 34 (7:12 - 7:20) Memories Of A Machine
if( t &gt;= 21615 &amp;&amp; t &lt; 21999 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 21615;
    if( phaseT == 0 ) {
        seg35FreeCount = 5;
        seg35LeftBeat = 48;
        if( scrGetPlayerX() &gt; 400 ) {
            seg35LeftBeat = 0;
        }
    }
    
    if( phaseT % 48 == 0 ) {
        var radius = 0;
        var spawnX = 800;
        var rotationSpeed = -1.5 * 300;
        var color = make_colour_hsv( 150, 255, 255 );
        if( phaseT % 96 == seg35LeftBeat ) {
            spawnX = 0;
            color = make_colour_hsv( 90, 255, 255 );
            rotationSpeed = 1.5 * 300;
        }
        var spawnY = random_range( 404, 608 );
        var count = 80;
        var parts = 5;
        var initialAngle = random( 360 );
        for( var i = 0; i &lt; count; i++ ) {
            var obj = instance_create( 0, 0, objAlgA35Ring );
            obj.image_blend = color;
            obj.circleAngle = initialAngle + i * 360 / count;
            obj.circleX = spawnX;
            obj.circleY = spawnY;
            obj.circleRadius = radius;
            obj.circleRadiusSpeed = 4;
            obj.circleSpeedX = 0;
            obj.circleSpeedY = 0;
            obj.circleRotationSpeed = rotationSpeed;
            if( i % floor( count / parts ) &lt; floor( count / parts / 2 ) + seg35FreeCount ) {
                obj.image_alpha = 0.1;
                obj.shouldKill = false;
            }
        }
        if( seg35FreeCount &gt; 1 ) {
            seg35FreeCount -= 2;
        }
    }

    // Effects.
    if( phaseT == 0 ) {
        var obj = instance_create( 0, 0, objAlgShaderBackground );
        obj.shaderHue = 150;
        obj.shaderSpeed = -1.55 / 48;
        obj.alphaStep = 0.1 / 24;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod4 = 0;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
        
        obj = instance_create( 800, 0, objAlgShaderBackground );
        obj.shaderHue = 90;
        obj.shaderSpeed = -1.55 / 48;
        obj.alphaStep = 0.1 / 24;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod4 = 0;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
        
    } else if( t == 21998 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep = -0.1 / 24;
        }
    }
    segment = 34;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 35 (7:20 - 7:28) Memories Of A Machine
if( t &gt;= 22000 &amp;&amp; t &lt; 22380 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 22000;
    if( phaseT == 0 ) {
        seg36SpawnX = 400;
    }
    if( phaseT &lt; 192 ) {
        if( phaseT % 2 == 0 ) {
            var spawnX = lerp( 400, seg36SpawnX, phaseT / 192 );
            instance_create( spawnX, lerp( 0, 250, phaseT / 192 ), objAlgA36Spawner );
            seg36SpawnX += 200;
            if( seg36SpawnX == 800 ) {
                seg36SpawnX = 200;
            }
        }
    } else if( phaseT &lt; 360 ) {
        if( phaseT == 192 ) {
            with( objAlgA36Spawner ) {
                instance_destroy();
            }
            with( objAlgA36Ring ) {
                speed /= 2;
                maxSpeed /= 2;
                gravity /= 4;
            }
        }
        
        var obj = instance_create( seg36SpawnX, 250, objAlgA36Spawner );
        obj.seg36MaxSpeed /= 2;
        obj.seg36Speed /= 2;
        obj.seg36Gravity /= 2;
        obj.maxFrame = choose( 2, 4, 6, 8, 10 );
        obj.counter *= 2;
        seg36SpawnX += 200;
        if( seg36SpawnX == 800 ) {
            seg36SpawnX = 200;
        }
    }
    if( t &gt;= 22369 ) {
        with( objAlgA36Ring ) {
            self.shouldKill = false;
            image_alpha -= 0.1;
            if( image_alpha &lt;= 0 ) {
                instance_destroy();
            }
        }
    }
    
    // Effects.
    if( phaseT == 0 ) {
        var color = random( 255 );
        var obj = instance_create( 0, 0, objAlgShaderBackground );
        obj.shaderHue = color;
        obj.shaderSpeed = -1.55 / 48;
        obj.alphaStep = 0.1 / 24;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.shaderMod4 = 0;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
        obj.hspeed = 800 / 380;
        
        obj = instance_create( 800, 0, objAlgShaderBackground );
        obj.shaderHue = ( color + 255 / 4 ) % 255;
        obj.shaderSpeed = -1.55 / 48;
        obj.alphaStep = 0.1 / 24;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.shaderMod4 = 0;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
        obj.vspeed = 608 / 380;
        
        obj = instance_create( 0, 608, objAlgShaderBackground );
        obj.shaderHue = ( color + 255 * 2 / 4 ) % 255;
        obj.shaderSpeed = -1.55 / 48;
        obj.alphaStep = 0.1 / 24;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.shaderMod4 = 0;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
        obj.vspeed = -608 / 380;
        
        obj = instance_create( 800, 608, objAlgShaderBackground );
        obj.shaderHue = ( color + 255 * 3 / 4 ) % 255;
        obj.shaderSpeed = -1.55 / 48;
        obj.alphaStep = 0.1 / 24;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.shaderMod4 = 0;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
        obj.hspeed = -800 / 380;
        
    } else if( t == 22379 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep = -0.1 / 24;
        }
    }
    segment = 35;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 36 (7:28 - 7:43) Remembrance A
if( t &gt;= 22380 &amp;&amp; t &lt; 23150 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var tPhase = t - 22380;
    if( t &lt; 23100 ) {
        if( tPhase == 0 ) { 
            seg37Angle = random( 360 );
            seg37Rotation = random_range( 20, 40 );
            seg37ColorHue = random( 255 );
            var color = make_colour_hsv( seg37ColorHue, 255, 255 );
            scrMakeCircle( 400, 250, random( 360 ), 30, 30, objAlgA37Sphere );
            with( objAlgA37Sphere ) {
                image_blend = color;
                friction = speed / 10;
            }
        } else if( tPhase == 24 ) { 
            seg37ColorHue = random( 255 );
            var color = make_colour_hsv( seg37ColorHue, 255, 255 );
            scrMakeCircle( 400, 250, random( 360 ), 30, 15, objAlgA37Sphere );
            with( objAlgA37Sphere ) {
                if( friction == 0 ) {
                    image_blend = color;
                }
                friction = speed / 10;
                isMarked = false;
            }
        } else if( tPhase &gt;= 48 &amp;&amp; tPhase &lt; 96 ) { 
            var counted = 2;
            with( objAlgA37Sphere ) {
                if( counted &gt; 0 &amp;&amp; !isMarked ) {
                    instance_change( objAlgA37Sphere2, false );
                    image_alpha = 1;
                    friction = -0.2;
                    direction = other.seg37Angle;
                    speed = 0.1;
                    isMarked = true;
                    counted--;
                    other.seg37Angle += other.seg37Rotation;
                }
            }
        } else if( tPhase == 96 ) { 
            seg37ColorHue = random( 255 );
            var color = make_colour_hsv( seg37ColorHue, 255, 255 );
            scrMakeCircle( 200, 250, random( 360 ), 30, 15, objAlgA37Sphere );
            with( objAlgA37Sphere ) {
                if( friction == 0 ) {
                    image_blend = color;
                }
                friction = speed / 10;
                isMarked = false;
            }
        } else if( tPhase == 96 + 24 ) { 
            seg37ColorHue = random( 255 );
            var color = make_colour_hsv( seg37ColorHue, 255, 255 );
            scrMakeCircle( 600, 250, random( 360 ), 30, 15, objAlgA37Sphere );
            with( objAlgA37Sphere ) {
                if( friction == 0 ) {
                    image_blend = color;
                }
                friction = speed / 10;
                isMarked = false;
            }
        } else if( tPhase &gt;= 96 + 48 &amp;&amp; tPhase &lt; 96 + 96 ) { 
            var counted = 2;
            with( objAlgA37Sphere ) {
                if( counted &gt; 0 &amp;&amp; !isMarked ) {
                    instance_change( objAlgA37Sphere2, false );
                    image_alpha = 1;
                    friction = -0.3;
                    direction = other.seg37Angle;
                    speed = 0.1;
                    isMarked = true;
                    counted--;
                    other.seg37Angle += other.seg37Rotation;
                }
            }
        } else if( tPhase &gt;= 192 &amp;&amp; tPhase &lt; 364 ) { 
            if( tPhase % 2 == 0 ) {
                var obj = instance_create( random( 800 ), 0, objAlgA37Sphere3 );
                obj.hspeed = random_range( -1.5, 1.5 );
                obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
            }
        }
        
        if( tPhase &gt;= 364 &amp;&amp; tPhase % 5 == 0 ) { 
            var obj = instance_create( random( 800 ), 0, objAlgA37Sphere3 );
            obj.hspeed = random_range( -1.5, 1.5 );
            obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
        }
        
        if( tPhase == 384 ) { 
            seg37Angle = random( 360 );
            seg37Rotation = random_range( 20, 40 );
            seg37ColorHue = random( 255 );
            var color = make_colour_hsv( seg37ColorHue, 255, 255 );
            scrMakeCircle( 400, 250, random( 360 ), 25, 30, objAlgA37Sphere );
            with( objAlgA37Sphere ) {
                image_blend = color;
                friction = speed / 10;
            }
        } else if( tPhase == 384 + 24 ) { 
            seg37ColorHue = random( 255 );
            var color = make_colour_hsv( seg37ColorHue, 255, 255 );
            scrMakeCircle( 400, 250, random( 360 ), 25, 15, objAlgA37Sphere );
            with( objAlgA37Sphere ) {
                if( friction == 0 ) {
                    image_blend = color;
                }
                friction = speed / 10;
                isMarked = false;
            }
        } else if( tPhase &gt;= 384 + 48 &amp;&amp; tPhase &lt; 384 + 96 ) { 
            var counted = 2;
            with( objAlgA37Sphere ) {
                if( counted &gt; 0 &amp;&amp; !isMarked ) {
                    instance_change( objAlgA37Sphere2, false );
                    image_alpha = 1;
                    friction = -0.2;
                    direction = other.seg37Angle;
                    speed = 0.1;
                    isMarked = true;
                    counted--;
                    other.seg37Angle += other.seg37Rotation;
                }
            }
        } else if( tPhase == 384 + 96 ) { 
            seg37ColorHue = random( 255 );
            var color = make_colour_hsv( seg37ColorHue, 255, 255 );
            scrMakeCircle( 200, 250, random( 360 ), 25, 15, objAlgA37Sphere );
            with( objAlgA37Sphere ) {
                if( friction == 0 ) {
                    image_blend = color;
                }
                friction = speed / 10;
                isMarked = false;
            }
        } else if( tPhase == 480 + 24 ) { 
            seg37ColorHue = random( 255 );
            var color = make_colour_hsv( seg37ColorHue, 255, 255 );
            scrMakeCircle( 600, 250, random( 360 ), 25, 15, objAlgA37Sphere );
            with( objAlgA37Sphere ) {
                if( friction == 0 ) {
                    image_blend = color;
                }
                friction = speed / 10;
                isMarked = false;
            }
        } else if( tPhase &gt;= 480 + 48 &amp;&amp; tPhase &lt; 480 + 96 ) { 
            var counted = 2;
            with( objAlgA37Sphere ) {
                if( counted &gt; 0 &amp;&amp; !isMarked ) {
                    instance_change( objAlgA37Sphere2, false );
                    image_alpha = 1;
                    friction = -0.3;
                    direction = other.seg37Angle;
                    speed = 0.1;
                    isMarked = true;
                    counted--;
                    other.seg37Angle += other.seg37Rotation;
                }
            }
        } else if( tPhase &gt;= 576 &amp;&amp; tPhase &lt; 768 ) { 
            if( tPhase % 2 == 0 ) {
                var obj = instance_create( random( 800 ), 0, objAlgA37Sphere3 );
                obj.hspeed = random_range( -1.5, 1.5 );
                obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
            }
        }
    }
    
    // Effects.
    
    if( tPhase &lt; 384 * 2 ) {
        if( tPhase % 384 == 0 ) {
            with( objAlgShaderBackground ) {
                self.alphaStep = -0.1 / 12;
            }
            
            var obj = instance_create( 400, 250, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = seg37ColorHue;
            obj.shaderSpeed = 0;
            obj.shaderMod4 = 0;
            obj.alphaStep = 0.1 / 24;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        } else if( tPhase % 384 == 24 ) {
            var obj = instance_create( 400, 250, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = seg37ColorHue;
            obj.shaderSpeed = 0;
            obj.shaderMod4 = 0;
            obj.alphaStep = 0.1 / 24;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        } else if( tPhase % 384 == 48 ) {
            with( objAlgShaderBackground ) {
                self.shaderFriction = -1 / 50 / 6;
            }
        } else if( tPhase % 384 == 86 ) {
            with( objAlgShaderBackground ) {
                self.alphaStep = -0.1 / 10;
            }
        } else if( tPhase % 384 == 96 ) {
            var obj = instance_create( 200, 250, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = seg37ColorHue;
            obj.shaderSpeed = 0;
            obj.shaderMod4 = 0;
            obj.alphaStep = 0.1 / 24;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        } else if( tPhase % 384 == 96 + 24 ) {
            var obj = instance_create( 600, 250, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = seg37ColorHue;
            obj.shaderSpeed = 0;
            obj.shaderMod4 = 0;
            obj.alphaStep = 0.1 / 24;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        } else if( tPhase % 384 == 96 + 48 ) {
            with( objAlgShaderBackground ) {
                self.shaderFriction = -1 / 50 / 6;
            }
        } else if( tPhase % 384 == 96 + 86 ) {
            with( objAlgShaderBackground ) {
                self.alphaStep = -0.1 / 10;
            }
        } else if( tPhase % 384 == 96 * 2 ) {
            var obj = instance_create( 400, 0, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = random( 255 );
            obj.shaderSpeed = 2 / 50;
            obj.shaderMod1 = 0;
            obj.shaderMod2 = 0;
            obj.shaderMod3 = 0;
            obj.alphaStep = 0.1 / 24;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        } else if( tPhase % 384 == 96 * 2 + 48 ) {
            with( objAlgShaderBackground ) {
                self.shaderFriction = -2 / 50 / 12;
            }
        } else if( tPhase % 384 == 96 * 3 ) {
            with( objAlgShaderBackground ) {
                self.alphaStep = -0.1 / 12;
            }
            var obj = instance_create( 400, 608, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = random( 255 );
            obj.shaderSpeed = 2 / 50;
            obj.shaderMod1 = 0;
            obj.shaderMod2 = 0;
            obj.shaderMod3 = 0;
            obj.alphaStep = 0.1 / 24;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        } else if( tPhase % 384 == 96 * 3 + 48 ) {
            with( objAlgShaderBackground ) {
                self.shaderFriction = -2 / 50 / 12;
            }
        } 
    }
    if( t == 23149 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep = -0.1 / 24;
        }
    }
    segment = 36;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 37 (7:43 - 7:59) Remembrance B
if( t &gt;= 23150 &amp;&amp; t &lt; 23925 &amp;&amp; instance_exists(objPlayer) ) {

    if( t &gt; 23150 &amp;&amp; t &lt; 23333 ) {
        if( t % 48 == 0 ) {
            repeat(18) {
                a = instance_create(0, 0, objArchBullet10);
                a.direction = irandom_range(270, 360);
                a.speed = random_range(4,12);
            }
        }
        if( t % 48 == 24 ) {
            repeat(18) {
                a = instance_create(800, 0, objArchBullet10);
                a.direction = irandom_range(180, 270);
                a.speed = random_range(4,12);
            }
        }
    }
    if( t == 23350 ) {
        with(objArchBullet10) {
            if( y &lt; 608 - 32 ) {
                image_alpha = 0.4;
                speed = 0;
            }
        }
    }
    if( t &gt; 23350 &amp;&amp; t &lt; 23542 ) {
        tt = (t - 23350)/(23542-23350);
        var s38_dir = 42 * sin(tt*2*pi*6) + 360 * tt;
        for( i = 0; i &lt; 360; i+=90 ) {
            if( t % 2 == (i%180)/90) {
                a = instance_create(400, 200, objArchBullet11);
                a.direction = s38_dir + i;
                a.speed = 8;
            }
        }
    }
    if( t == 23542 ) {
        /*with(objArchBullet11) {
            instance_destroy();
        }*/
        with(objArchBullet10) {
            image_alpha = 1;
            direction = point_direction(x, y, xstart, ystart);
            speed = point_distance(x, y, xstart, ystart)/24;
            //wrap = true;
        }
    }
    if( t == 23614 || t == 23662 || t == 23710 ) {
        with(objArchBullet10) {
            speed = 0;
        }
    }
    if( t &gt; 23542 &amp;&amp; t &lt; 23734 ) {
        if( t &gt; 23614 || t % 2 == 0 ) {
            a = instance_create(0, 0, objArchBullet10);
            a.direction = irandom_range(260, 360);
            a.speed = random_range(9,14.5);
            
            a = instance_create(800, 0, objArchBullet10);
            a.direction = irandom_range(180, 260);
            a.speed = random_range(9,14.5);
        }
    }
    if( t == 23734 ) {
        with(objArchBullet10) {
            image_alpha = 0.4;
            speed = 0;
        }
    }
    if( t &gt; 23734 &amp;&amp; t &lt; 23924 ) {
        tt = (t - 23734)/(23924-23734);
        repeat(3) {
            a = instance_create(400, 0, objArchBullet11);
            a.direction = 270 + 90 * sin(tt * 2 * pi * 8) + random_range(-15,15);
            a.speed = random_range(6,12);
        }
        if( t % 2 == 0 ) {
            a = instance_create(400, 0, objArchBullet11);
            a.direction = 270 + 90 * sin(tt * 2 * pi * 8) + random_range(-15,15);
            a.speed = random_range(6,12);
        }
    }
    if( t == 23924 ) {
        with(objArchBullet11) {
            alarm[0] = 0;
            alarm[1] = 0;
            move_towards_point(objPlayer.x, objPlayer.y, -20);
        }
        with(objArchBullet10) {
            move_towards_point(objPlayer.x, objPlayer.y, -20);
        }
    }
    //if( t &gt; 23542 &amp;&amp; t &lt; 23736 ) {
    //}
    /*if( t == 23150 ) {
        var xs; xs[0] = 128;
        xs[1] = 672;
        var ys; ys[0] = 128;
        ys[1] = 480;
        for( i = 0; i &lt; 360; i += 360 / 8 ) {
            for( j = 0; j &lt; 2; j++ ) {
                for( k = 0; k &lt; 2; k++ ) {
                    a = instance_create(xs[j], ys[k], objArchBullet9);
                    a.x = xs[j] + dcos(i);
                    a.y = ys[k] - dsin(i);
                    a.dirspd = 1;
                    a = instance_create(xs[j], ys[k], objArchBullet9);
                    a.x = xs[j] + dcos(i);
                    a.y = ys[k] - dsin(i);
                    a.dirspd = -1;
                }
            }
        }
    }*/
    // Effects.
    var phaseT = t - 23150;
    if( t == 23150 ) {
        var obj = instance_create( 0, 608, objAlgShaderBackground );
        obj.shaderHue = 0;
        obj.shaderSpeed = 1 / 50;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.alphaStep = 0.1 / 24;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
        
        obj = instance_create( 800, 608, objAlgShaderBackground );
        obj.shaderHue = 0;
        obj.shaderSpeed = 1 / 50;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.alphaStep = 0.1 / 24;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
    } else if( t == 23350 ) {
        with( objAlgShaderBackground ) {
            image_alpha *= 0.4;
            self.maxAlpha *= 0.4;
            self.shaderSpeed = 0;
        }
        
        var obj = instance_create( 400, 200, objAlgShaderBackground );
        obj.shaderHue = 23;
        obj.shaderSpeed = 3 / 50;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.alphaStep = 0.1 / 24;
        obj.image_xscale = 1.5;
        obj.image_yscale = 1.5;
    } else if( t == 23542 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep *= -1;
        }
        var obj = instance_create( 0, 608, objAlgShaderBackground );
        obj.shaderHue = 0;
        obj.shaderSpeed = 1 / 50;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.alphaStep = 0.1 / 24;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
        
        obj = instance_create( 800, 608, objAlgShaderBackground );
        obj.shaderHue = 0;
        obj.shaderSpeed = 1 / 50;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.alphaStep = 0.1 / 24;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
    } else if( t == 23734 ) {
        with( objAlgShaderBackground ) {
            image_alpha *= 0.4;
            self.maxAlpha *= 0.4;
            self.shaderSpeed = 0;
        }
        
        var obj = instance_create( 400, 0, objAlgShaderBackground );
        obj.shaderHue = 23;
        obj.shaderSpeed = 3 / 50;
        obj.shaderFriction = -1 / 50 / 50;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod3 = 0;
        obj.alphaStep = 0.1 / 24;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
    } else if( t == 23924 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep *= -1;
        }
    }
    segment = 37;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 38 (7:59 - 8:14) Remembrance C
if( t &gt;= 23925 &amp;&amp; t &lt; 24690 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var tPhase = t - 23925;
    if( tPhase == 0 ) { 
        seg39Angle = random( 360 );
        seg39Rotation = 17;
        seg39ColorHue = random( 255 );
        seg39PosY = random_range( 204, 304 );
        var color = make_colour_hsv( seg39ColorHue, 255, 255 );        
        var obj = instance_create( 800, seg39PosY, objAlgA39Spawner );
        obj.hspeed = - 800 / 20;
        obj.vspeed = -20;
        obj.gravity = -obj.vspeed / 10 + random_range( -1, 0.5 );
        obj.image_blend = color;
        
    } else if( tPhase == 24 ) { 
        seg39ColorHue = random( 255 );
        seg39PosY = random_range( 204, 304 );
        var color = make_colour_hsv( seg39ColorHue, 255, 255 ); 
        var obj = instance_create( 0, seg39PosY, objAlgA39Spawner );
        obj.hspeed = 800 / 20;
        obj.vspeed = -20;
        obj.gravity = -obj.vspeed / 10 + random_range( -1, 0.5 );
        obj.image_blend = color;
        
    } else if( tPhase &gt;= 48 &amp;&amp; tPhase &lt; 96 ) { 
        var counted = 3;
        with( objAlgA39Sphere ) {
            if( counted &gt; 0 &amp;&amp; !isMarked ) {
                instance_change( objAlgA37Sphere2, false );
                image_alpha = 1;
                friction = -0.2;
                direction = other.seg39Angle;
                speed = 0.1;
                isMarked = true;
                counted--;
                other.seg39Angle += other.seg39Rotation;
            }
        }
    } else if( tPhase == 96 ) { 
        seg39ColorHue = random( 255 );
        seg39PosY = random_range( 204, 304 );
        var color = make_colour_hsv( seg39ColorHue, 255, 255 ); 
        var obj = instance_create( 0, seg39PosY, objAlgA39Spawner );
        obj.hspeed = 800 / 20;
        obj.vspeed = random_range( -20, -10 );
        obj.gravity = -obj.vspeed / 10 + random_range( -1, 0.5 );
        obj.image_blend = color;
        
    } else if( tPhase == 96 + 24 ) { 
        seg39ColorHue = random( 255 );
        seg39PosY = random_range( 204, 304 );
        var color = make_colour_hsv( seg39ColorHue, 255, 255 ); 
    
        var obj = instance_create( 800, seg39PosY, objAlgA39Spawner );
        obj.hspeed = - 800 / 20;
        obj.vspeed = random_range( -20, -10 );
        obj.gravity = -obj.vspeed / 10 + random_range( -1, 0.5 );
        obj.image_blend = color;
        
    } else if( tPhase &gt;= 96 + 48 &amp;&amp; tPhase &lt; 96 + 96 ) { 
        var counted = 3;
        with( objAlgA39Sphere ) {
            if( counted &gt; 0 &amp;&amp; !isMarked ) {
                instance_change( objAlgA37Sphere2, false );
                image_alpha = 1;
                friction = -0.3;
                direction = other.seg39Angle;
                speed = 0.1;
                isMarked = true;
                counted--;
                other.seg39Angle += other.seg39Rotation;
            }
        }
    } else if( tPhase &gt;= 192 &amp;&amp; tPhase &lt; 364 ) { 
        if( tPhase % 2 == 0 ) {
            var obj = instance_create( random( 800 ), 0, objAlgA39Sphere2 );
            obj.hspeed = random_range( -2, 2 );
            obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
        }
    }
    
    if( tPhase &gt;= 364 &amp;&amp; tPhase % 10 == 0 ) { 
        var obj = instance_create( random( 800 ), 0, objAlgA39Sphere2 );
        obj.hspeed = random_range( -2, 2 );
        obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
    }
    
    if( tPhase == 384 ) { 
        seg39Angle = random( 360 );
        seg39Rotation = 25;
        seg39ColorHue = random( 255 );
        seg39PosY = random_range( 204, 304 );
        var color = make_colour_hsv( seg39ColorHue, 255, 255 );       
        var obj = instance_create( 800, seg39PosY, objAlgA39Spawner );
        obj.hspeed = - 800 / 20;
        obj.vspeed = -20;
        obj.gravity = -obj.vspeed / 10 + random_range( -1, 0 );
        obj.image_blend = color;
        obj.randomOffset = 15;
        
    } else if( tPhase == 384 + 24 ) { 
        seg39ColorHue = random( 255 );
        seg39PosY = random_range( 204, 304 );
        var color = make_colour_hsv( seg39ColorHue, 255, 255 );        
        var obj = instance_create( 0, seg39PosY, objAlgA39Spawner );
        obj.hspeed = 800 / 20;
        obj.vspeed = -20;
        obj.gravity = -obj.vspeed / 10 + random_range( -1, 0 );
        obj.image_blend = color;
        obj.randomOffset = 15;
        
    } else if( tPhase &gt;= 384 + 48 &amp;&amp; tPhase &lt; 384 + 96 ) { 
        var counted = 3;
        with( objAlgA39Sphere ) {
            if( counted &gt; 0 &amp;&amp; !isMarked ) {
                instance_change( objAlgA37Sphere2, false );
                image_alpha = 1;
                friction = -0.2;
                direction = other.seg39Angle;
                speed = random_range( 0.1, 2 );
                isMarked = true;
                counted--;
                other.seg39Angle += other.seg39Rotation;
            }
        }
    } else if( tPhase == 384 + 96 ) { 
        seg39ColorHue = random( 255 );
        seg39PosY = random_range( 204, 304 );
        var color = make_colour_hsv( seg39ColorHue, 255, 255 );        
        var obj = instance_create( 0, seg39PosY, objAlgA39Spawner );
        obj.hspeed = 800 / 20;
        obj.vspeed = -20;
        obj.gravity = -obj.vspeed / 10 + random_range( -1, 0 );
        obj.image_blend = color;
        obj.randomOffset = 15;
        
    } else if( tPhase == 480 + 24 ) { 
        seg39ColorHue = random( 255 );
        seg39PosY = random_range( 204, 304 );
        var color = make_colour_hsv( seg39ColorHue, 255, 255 );        
        var obj = instance_create( 800, seg39PosY, objAlgA39Spawner );
        obj.hspeed = - 800 / 20;
        obj.vspeed = -20;
        obj.gravity = -obj.vspeed / 10 + random_range( -1, 0 );
        obj.image_blend = color;
        obj.randomOffset = 15;
        
    } else if( tPhase &gt;= 480 + 48 &amp;&amp; tPhase &lt; 480 + 96 ) { 
        var counted = 3;
        with( objAlgA39Sphere ) {
            if( counted &gt; 0 &amp;&amp; !isMarked ) {
                instance_change( objAlgA37Sphere2, false );
                image_alpha = 1;
                friction = -0.3;
                direction = other.seg39Angle;
                speed = random_range( 0.1, 2 );
                isMarked = true;
                counted--;
                other.seg39Angle += other.seg39Rotation;
            }
        }
    } else if( tPhase &gt;= 576 &amp;&amp; tPhase &lt; 768 - 24 ) { 
        if( tPhase % 2 == 0 ) {
            var obj = instance_create( random( 800 ), 0, objAlgA39Sphere2 );
            obj.hspeed = random_range( -2, 2 );
            obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
        }
        if( tPhase % 10 == 5 ) { 
            var obj = instance_create( random( 800 ), 0, objAlgA39Sphere2 );
            obj.hspeed = random_range( -2, 2 );
            obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
        }
    }
    
    // Effects.
    
    if( tPhase &lt; 384 * 2 ) {
        if( tPhase % 384 == 0 ) {
            with( objAlgShaderBackground ) {
                self.alphaStep = -0.1 / 12;
            }
            
            var obj = instance_create( 800, seg39PosY, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = seg39ColorHue;
            obj.shaderSpeed = 0;
            obj.shaderMod4 = 0;
            obj.alphaStep = 0.1 / 24;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        } else if( tPhase % 384 == 24 ) {
            var obj = instance_create( 0, seg39PosY, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = seg39ColorHue;
            obj.shaderSpeed = 0;
            obj.shaderMod4 = 0;
            obj.alphaStep = 0.1 / 24;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        } else if( tPhase % 384 == 48 ) {
            with( objAlgShaderBackground ) {
                self.shaderFriction = -1 / 50 / 6;
            }
        } else if( tPhase % 384 == 86 ) {
            with( objAlgShaderBackground ) {
                self.alphaStep = -0.1 / 10;
            }
        } else if( tPhase % 384 == 96 ) {
            var obj = instance_create( 0, seg39PosY, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = seg39ColorHue;
            obj.shaderSpeed = 0;
            obj.shaderMod4 = 0;
            obj.alphaStep = 0.1 / 24;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        } else if( tPhase % 384 == 96 + 24 ) {
            var obj = instance_create( 800, seg39PosY, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = seg39ColorHue;
            obj.shaderSpeed = 0;
            obj.shaderMod4 = 0;
            obj.alphaStep = 0.1 / 24;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        } else if( tPhase % 384 == 96 + 48 ) {
            with( objAlgShaderBackground ) {
                self.shaderFriction = -1 / 50 / 6;
            }
        } else if( tPhase % 384 == 96 + 86 ) {
            with( objAlgShaderBackground ) {
                self.alphaStep = -0.1 / 10;
            }
        } else if( tPhase % 384 == 96 * 2 ) {
            var obj = instance_create( 400, 0, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = random( 255 );
            obj.shaderSpeed = 2 / 50;
            obj.shaderMod1 = 0;
            obj.shaderMod2 = 0;
            obj.shaderMod3 = 0;
            obj.alphaStep = 0.1 / 24;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        } else if( tPhase % 384 == 96 * 2 + 48 ) {
            with( objAlgShaderBackground ) {
                self.shaderFriction = -2 / 50 / 12;
            }
        } else if( tPhase % 384 == 96 * 3 ) {
            with( objAlgShaderBackground ) {
                self.alphaStep = -0.1 / 12;
            }
            var obj = instance_create( 400, 608, objAlgShaderBackground );
            obj.iTime = random( 20 );
            obj.shaderHue = random( 255 );
            obj.shaderSpeed = 2 / 50;
            obj.shaderMod1 = 0;
            obj.shaderMod2 = 0;
            obj.shaderMod3 = 0;
            obj.alphaStep = 0.1 / 24;
            obj.image_xscale = 2;
            obj.image_yscale = 2;
        } else if( tPhase % 384 == 96 * 3 + 48 ) {
            with( objAlgShaderBackground ) {
                self.shaderFriction = -2 / 50 / 12;
            }
        } 
    }
    if( t == 24689 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep = -0.1 / 24;
        }
    }
    segment = 38;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 39 (8:14 - 8:29) Remembrance D
if( t &gt;= 24690 &amp;&amp; t &lt; 25460 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 24690;
    if( phaseT &lt; 192 ) {
        if( phaseT % 6 == 0 ) {
            var obj = instance_create( 400, lerp( 0, 308, phaseT / 192  ), objAlgA40Spawner );
            obj.spawnMode = irandom( 3 );
        }
    } else if( phaseT &lt; 192 * 2 ) {
        if( phaseT % 3 == 0 ) {
            var spawnCount = ceil( lerp( 10, 25, ( phaseT - 192 ) / 192 ) );
            var spawnY = random( 208 );
            var bullet = objAlgStar;
            var color = make_colour_hsv( random( 255 ), 255, 255 );
            var dir = scrTargetPlayer( 400, spawnY ) + 180 / spawnCount;
            var circle = scrMakeCircle( 400, spawnY, dir, spawnCount, 9, bullet ); 
            for( var i = 0; i &lt; array_length_1d( circle ); i++ ) {
                circle[i].image_blend = color;
            }
        }
    } else if( phaseT &lt; 192 * 3 ) {
        if( phaseT % 6 == 0 ) {
            var mode = irandom( 3 );
            var spawnY =  lerp( 32, 108, ( phaseT - 192 * 2 ) / 192  );
            repeat( 2 ) {
                var obj = instance_create( random_range( 32, 768 ), spawnY, objAlgA40Spawner );
                obj.spawnMode = mode;
                obj.maxFrame /= 2;
            }
        }
    } else if( phaseT &lt; 192 * 4 ) {
        if( phaseT % 3 == 0 ) {
            var spawnCount = ceil( lerp( 10, 25, ( phaseT - 192 * 3 ) / 192 ) );
            var spawnY = random( 208 );
            var bullet = objAlgStar;
            var color = make_colour_hsv( random( 255 ), 255, 255 );
            
            var spawnX = random_range( 32, 768 );
            var dir = scrTargetPlayer( spawnX, spawnY ) + 180 / spawnCount;
            var circle = scrMakeCircle( spawnX, spawnY, dir, spawnCount, 9, bullet ); 
            for( var i = 0; i &lt; array_length_1d( circle ); i++ ) {
                circle[i].image_blend = color;
            }
        }
    }
    
    // Effects.
    if( phaseT == 0 ) {
        var obj = instance_create( 400, 104, objAlgShaderBackground );
        obj.iTime = random( 20 );
        obj.shaderHue = random( 255 );
        obj.shaderSpeed = 2 / 50;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod4 = 0;
        obj.alphaStep = 0.1 / 24;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
        
        obj = instance_create( 400, 504, objAlgShaderBackground );
        obj.iTime = random( 20 );
        obj.shaderHue = random( 255 );
        obj.shaderSpeed = 2 / 50;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod4 = 0;
        obj.alphaStep = 0.1 / 24;
        obj.image_xscale = -2;
        obj.image_yscale = 2;
        
        obj = instance_create( 200, 304, objAlgShaderBackground );
        obj.iTime = random( 20 );
        obj.shaderHue = random( 255 );
        obj.shaderSpeed = -2 / 50;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod4 = 0;
        obj.alphaStep = 0.1 / 24;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
        
        obj = instance_create( 600, 304, objAlgShaderBackground );
        obj.iTime = random( 20 );
        obj.shaderHue = random( 255 );
        obj.shaderSpeed = -2 / 50;
        obj.shaderMod1 = 0;
        obj.shaderMod2 = 0;
        obj.shaderMod4 = 0;
        obj.alphaStep = 0.1 / 24;
        obj.image_xscale = -2;
        obj.image_yscale = 2;
    } else if( phaseT % 48 == 0 ) {
        with( objAlgShaderBackground ) {
            self.shaderHue = random( 255 );
        }
        
    }
    
    if( phaseT % 384 == 192 ) {
        with( objAlgShaderBackground ) {
            self.shaderSpeed *= 2;
            self.shaderMod1 = 1;
            self.shaderMod2 = 1;
        }
    } else if( phaseT % 384 == 383 ) {
        with( objAlgShaderBackground ) {
            self.shaderSpeed /= -2;
            self.shaderMod1 = 0;
            self.shaderMod2 = 0;
        }
    }
    
    if( t == 25459 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep *= -1;
        }
    }
    
    segment = 39;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 40 (8:29 - 8:45) The Calm Before The Storm
if( t &gt;= 25460 &amp;&amp; t &lt; 26230 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 25460;
    if( phaseT % 24 == 0 ) {
        if( phaseT &lt; 96 * 2 ) {
            seg40LeftLineMode = irandom( 2 );
            seg40RightLineMode = seg40LeftLineMode;
            scrA41SpawnLine( seg40LeftLineMode, 0, 1 );
        } else if( phaseT &lt; 96 * 4 ) {
            seg40LeftLineMode = irandom( 2 );
            seg40RightLineMode = seg40LeftLineMode;
            scrA41SpawnLine( seg40RightLineMode, 800, 1 );
        } else if( phaseT &lt; 96 * 6 ) {
            var centerX = 0;
            var mode = 0;
            if( phaseT % 48 == 24 ) {
                centerX = 800;
                seg40RightLineMode = irandom( 2 );
                mode = seg40RightLineMode;
            } else {
                seg40LeftLineMode = irandom( 2 );
                mode = seg40LeftLineMode;
            }
            scrA41SpawnLine( mode, centerX, 1 );
        } else if( phaseT &lt; 96 * 8 ) {
            seg40LeftLineMode = irandom( 2 );
            seg40RightLineMode = irandom( 2 );
            scrA41SpawnLine( seg40LeftLineMode, 0, 0.5 );
            scrA41SpawnLine( seg40RightLineMode, 800, 0.5 );
        }
    }
    
    // Effects.
    if( phaseT == 0 ) {
        var obj = instance_create( 399, 200, objAlgShaderBackground );
        obj.iTime = random( 20 );
        obj.shaderSpeed = 1 / 50;
        obj.shaderMod4 = 0;
        obj.alphaStep = 0.1 / 24;
        obj.image_xscale = 2;
        obj.image_yscale = 2;
        
        obj = instance_create( 401, 200, objAlgShaderBackground );
        obj.iTime = random( 20 );
        obj.shaderSpeed = 1 / 50;
        obj.shaderMod4 = 0;
        obj.alphaStep = 0.1 / 24;
        obj.image_xscale = -2;
        obj.image_yscale = 2;
    }
    if( phaseT % 24 == 0 ) {
        with( objAlgShaderBackground ) {
            var mode = 0;
            if( x &gt; 400 ) {
                mode = other.seg40RightLineMode;
            } else {
                mode = other.seg40LeftLineMode;
            }
            if( mode == 0 ) {
                self.shaderHue = 85;
            } else if( mode == 1 ) {
                self.shaderHue = 155;
            } else {
                self.shaderHue = 15;
            }
        }
    }
    if( t == 26229 ) {
        with( objAlgShaderBackground ) {
            self.alphaStep = -0.1 / 24;
        }
    }
    segment = 40;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 41 (8:45 - 8:52) Xyphos
if( t &gt;= 26230 &amp;&amp; t &lt; 26605 &amp;&amp; instance_exists(objPlayer) ) {
    var phaseT = t - 26230 - 48;
    
    if( phaseT == 0 ) {
        for( i = 0; i &lt; 360; i += 45 ) {
            a = instance_create(400, 200, objArchBullet25);
            a.dir = i;
            a.dir_spd = 360/24.5;
            a.max_len = 200;
            a = instance_create(400, 200, objArchBullet25);
            a.dir = i;
            a.dir_spd = -360/24.5;
            a.max_len = 200;
            
            a = instance_create(400, 200, objArchBullet25);
            a.dir = i;
            a.dir_spd = 360/48.5;
            a.max_len = 125;
            a = instance_create(400, 200, objArchBullet25);
            a.dir = i;
            a.dir_spd = -360/48.5;
            a.max_len = 125;
            
            a = instance_create(400, 200, objArchBullet25);
            a.dir = i;
            a.dir_spd = 360/96.5;
            a.max_len = 50;
            a = instance_create(400, 200, objArchBullet25);
            a.dir = i;
            a.dir_spd = -360/96.5;
            a.max_len = 50;
        }
    }
    
    if( phaseT &gt; 0 &amp;&amp; phaseT &lt; 26393 ) {
        var s41_tt = phaseT/(26393 - 26230 - 48);
        var s41_len = sin(s41_tt*pi);
        with(objArchBullet25) {
            x = xstart + lengthdir_x(s41_len*max_len, self.dir);
            y = ystart + lengthdir_y(s41_len*max_len, self.dir);
        }
        if( phaseT % 12 == 0 ) {
            with(objArchBullet25) {
                a = instance_create(x, y, objArchBullet26);
                a.direction = point_direction(x, y, xstart, ystart)// + random_range(-5,5);
                a.speed = random_range(3,7);
                a.curve = a.speed / 10 * choose(-1,1);
                //scrMakeCircle(x, y, random(360), 8, random_range(3,5), objArchBullet26);
            }
        }
    }
    if( t == 26393 ) {
        with(objArchBullet25) {
            instance_destroy();
        }
    }
    /*
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 26230;
    if( phaseT == 0 ) {
        seg42Count = 3;
    }
    if( phaseT % 12 == 0 &amp;&amp; phaseT &lt; 96 + 48 &amp;&amp; phaseT &gt;= 36 ) {
        var color = make_colour_hsv( random( 255 ), 255, 255 ); 
        for( var i = 0; i &lt; seg42Count; i++ ) {
            var segmentLength = 800 / seg42Count;
            var obj = instance_create( random_range( i * segmentLength, ( i + 1 ) * segmentLength ), 0, objAlgA42Sphere );
            obj.image_blend = color;
            obj.speed = lerp( 10, 15, phaseT / ( 96 + 48 ) );
            obj.direction = random_range( 225, 315 );
        }
        if( phaseT % 36 == 12 ) {
            seg42Count++;
        }
    }*/
    
    // Effects.
    if( !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = t / 50;
    }
    segment = 41;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 42 (8:52 - 9:08) Stepping Solo A &amp; B
if( t &gt;= 26605 &amp;&amp; t &lt; 27375 &amp;&amp; instance_exists(objPlayer) ) {

    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 26605;
    if( phaseT = 0 ) {
        seg43SpawnDir = random( 360 );
        seg43FinalRadius = 400;
        seg43FinalCount = 80;
    }
    if( phaseT % 12 == 0 ) {
        var count = 7;
        var speedMin = 4;
        var speedMax = 9;
        var yMax = 150;
        if( phaseT &gt;= 96 * 6 ) {
            count = 14;
            speedMin = 9;
            speedMax = 12;
            yMax = 50;
        }
        repeat( count ) {
            var scale = random_range( 0.5, 1 );
            var obj = instance_create( random( 800 ), random( yMax ), objAlgA43Sphere );
            obj.image_blend = make_color_hsv( random( 255 ), 255, 255 );
            obj.image_xscale = scale;
            obj.image_yscale = scale;
            obj.speed = random_range( speedMin, speedMax );
            obj.direction = seg43SpawnDir;
            seg43SpawnDir += 360 / 24;
        }
    }
    if( phaseT % 96 * 2 == 0 &amp;&amp; phaseT &lt; 96 * 6 ) {
        var offset = choose( 25, 50, 75, 85 ) * choose( -1, 1 );
        var playerX = scrGetPlayerX();
        if( playerX + offset &gt; 50 &amp;&amp; playerX + offset &lt; 750 ) {
            playerX += offset;
        } else {
            playerX -= offset;
        }
        var radius = random_range( 60, 75 );
        if( phaseT == 0 ) {
            radius = 100;
        }
        var count = ceil( radius / 2 );
        scrA43CircleSpawn( playerX, 608 - choose( 32, 64, 96, 128 ), radius, 24, count );
    } else if( phaseT &gt;= 96 * 6 &amp;&amp; phaseT &lt; 96 * 7 + 24 &amp;&amp; phaseT % 24 == 0 ) {
    
        scrA43CircleSpawn( 400, 608 - 32, seg43FinalRadius, 24, seg43FinalCount );
        seg43FinalRadius -= 75;
        seg43FinalCount -= 14;
    }
    
    // Effects.
    if( !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = t / 50;
    }
    segment = 42;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 43 (9:08 - 9:15) Breaker Solo
if( t &gt;= 27375 &amp;&amp; t &lt; 27760 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var tPhase = t - 27375;
    
    //Arch edit
    if( tPhase%96 &gt;= 60 &amp;&amp; tPhase%96 &lt;= 84 &amp;&amp; tPhase &lt;= 96 * 3 ) {
        repeat(1) {
            a = instance_create(random_range(32,768), 0, objAlgArchA44Random);
            a.direction = 270 + random_range(-30, 30);
            a.speed = 5;
            //a.image_blend = make_colour_hsv(random(2550), 255, 255);
        }
    }
    
    //Arch edit end
    
    var seg44UpperBound = 608;
    var seg44LowerBound = 128;
    
    if( tPhase == 0 ) {
        seg44MaxY = 0;
        seg44H = random( 255 );
        scrMakeLine( 0, 0, 800, 0, 50, objAlgA44Line );
    }
    
    var seg44PrevMaxY = seg44MaxY;
    
    if( tPhase &lt; 50 ) {
        seg44MaxY = lerp( 0, 1, tPhase / 50 );
    } else if( tPhase &lt; 80 ) {
        seg44MaxY = lerp( 1, 0, ( tPhase - 50 ) / 30 );
    } else if( tPhase &lt; 150 ) {
        seg44MaxY = lerp( 0, 1, ( tPhase - 80 ) / 70 );
    } else if( tPhase &lt; 180 ) {
        seg44MaxY = lerp( 1, 0, ( tPhase - 150 ) / 30 );
    } else if( tPhase &lt; 250 ) {
        seg44MaxY = lerp( 0, 1, ( tPhase - 180 ) / 70 );
    } else if( tPhase &lt; 280 ) {
        seg44MaxY = lerp( 1, 0, ( tPhase - 250 ) / 30 );
    } else if( tPhase &lt; 350 ) {
        seg44MaxY = lerp( 0, 1, ( tPhase - 280 ) / 70 );
    }
    
    if( tPhase &lt; 50 ) {
        seg44MaxY = ( 1 - cos( pi * seg44MaxY ) ) / 2 * seg44UpperBound;
    } else {
        seg44MaxY = seg44LowerBound + ( 1 - cos( pi * seg44MaxY ) ) / 2 * ( seg44UpperBound - seg44LowerBound);
    }
    
    if( tPhase &lt; 300 &amp;&amp; tPhase % 2 == 0 &amp;&amp; seg44MaxY &gt; 48 ) {
        repeat( 2 ) {
            var obj = instance_create( random( 800 ), random_range( 48, min( seg44MaxY, 110 ) ), objAlgA44Bounce );
            obj.direction = random( 360 );
            obj.speed = 2.2;
        }
    }
    
    seg44H += lerp( 15, 1, seg44MaxY / seg44UpperBound );
    var seg44Blend = make_color_hsv( seg44H, 255, 255 );
    with( objAlgA44Line ) {
        y = other.seg44MaxY;
        image_blend = seg44Blend;
    }
    
    with( objAlgA44Bounce ) {
        if( other.seg44MaxY &lt; 608 ) {
            y = ( y - 32 ) / seg44PrevMaxY * other.seg44MaxY + 32;
        }
        image_blend = seg44Blend;
        if( y &gt; other.seg44MaxY ) {
            y = other.seg44MaxY;
        }
    }
    //Arch edit start
    var seg44Blend_inv = make_color_hsv( (seg44H + 128)%255, 255, 255 );
    with( objAlgArchA44Random ) {
        image_blend = seg44Blend_inv;
    }
    //Arch edit end
    
    if( tPhase == 300 ) {
        with( objAlgA44Line ) {
            instance_change( objAlgSphereDisappearing, true );
            var targetX = choose( 32, 400, 768 );
            direction = point_direction( x, y, targetX, 32 );
            speed = point_distance( x, y, targetX, 32 ) / 20;
            image_blend = make_colour_hsv( random( 255 ), 255, 255 );
        }
        
        with( objAlgA44Bounce ) {
            instance_change( objAlgSphereDisappearing, true );
            var targetX = choose( 32, 400, 768 );
            direction = point_direction( x, y, targetX, 32 );
            speed = point_distance( x, y, targetX, 32 ) / 20;
            image_blend = make_colour_hsv( random( 255 ), 255, 255 );
        } 
    }
    if( tPhase &gt;= 320 ) {
        repeat( 3 ) {
            var targetX = choose( 32, 400, 768 );
            var obj = instance_create( targetX, 32, objAlgSphereDisappearing );
            obj.direction = random( 360 );
            obj.speed = random_range( 3, 6 );
            obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
        }
    }
    
    // Effects.
    if( !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = t / 50;
    }
    segment = 43;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 44 (9:15 - 9:23) Enlightened Solo A
if( t &gt;= 27760 &amp;&amp; t &lt; 28144 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    var tPhase = t - 27760;
    if( tPhase = 0 ) {
        var color = random( 255 );
        seg45Color1 = make_color_hsv( color, 255, 255 );
        seg45Color2 = make_color_hsv( (color + 255 / 3 ) % 255, 255, 255 );
        seg45Color3 = make_color_hsv( (color + 255 * 2 / 3 ) % 255, 255, 255 );
    }
    
    if( tPhase == 0 ) {
        seg45X = 400;
    } else if( tPhase == 96 ) {
        seg45X = 32;
    } else if( tPhase == 96 * 2 ) {
        seg45X = 800 - 32;
    } else if( tPhase == 96 * 3 ) {
        seg45X = 400;
    }
    
    if( tPhase % 96 &lt; 48 ) { 
        repeat( 6 ) {
            var obj = instance_create( seg45X, 32, objAlgA45Sphere );
            if( tPhase &lt; 96 ) {
                obj.speed = 12;
            } else if( tPhase &lt; 96 * 3 ) {
                obj.speed = 15;
            } else {
                obj.speed = 12;
            }
            obj.direction = random( 360 );
            obj.disFrame = choose( 10, 15, 60 );
            if( obj.disFrame == 10 ) {
                obj.image_blend = seg45Color1;
            } else if( obj.disFrame == 15 ) {
                obj.image_blend = seg45Color2;
            } else {
                obj.image_blend = seg45Color3;
            }
            if( tPhase &gt;= 96 * 3 ) {
                obj.rotationSpeed = choose( -0.5, 0.5 );
            }
        }
    }
    
    // Effects.
    if( !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = t / 50;
    }
    segment = 44;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Red Segment 45 (9:23 - 9:30) Enlightened Solo B
if( t &gt;= 28145 &amp;&amp; t &lt; 28525 &amp;&amp; instance_exists(objPlayer) ) {
    segment = 45;
    
    // Corner bursts.
    if( t == 28145 || t == 28340 ) {
        var spawner = instance_create( 800, 0, oRedireS46CornerSpawner );
        spawner.spawnDir = 225;
        spawner.spawnPeriod = 2;
    }
    if( t == 28235 ) {
        var spawner = instance_create( 0, 0, oRedireS46CornerSpawner );
        spawner.spawnDir = -45;        
        spawner.spawnPeriod = 2;
    }
    if( t == 28430 ) {
        var spawner1 = instance_create( 0, 0, oRedireS46CornerSpawner );
        spawner1.spawnDir = -45;        
        spawner1.spawnPeriod = 3;
        
        var spawner2 = instance_create( 800, 0, oRedireS46CornerSpawner );
        spawner2.spawnDir = 225;        
        spawner2.spawnPeriod = 3;
    }
    if( t == 28195 || t == 28290 || t == 28385 || t == 28480 ) {
        with( oRedireS46CornerSpawner ) {
            instance_destroy();
        }
    }
    
    // Crawlers.
    if( t == 28150 ) {
        var spawner = instance_create( 0, 0, oRedireS46CrawlerSpawner );
        spawner.spawnPeriod = 49;
    } 
    
    if( t == 28300 ) {
        with( oRedireS46CrawlerSpawner ) {
            instance_destroy();
        }
    }
    
    // Effects.
    if( !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = t / 50;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 46 (9:30 - 9:46) Solo Of A Robot A &amp; B
if( t &gt;= 28525 &amp;&amp; t &lt; 29300 &amp;&amp; instance_exists(objPlayer) ) {
    if( t == 28525 ) {
        for( i = 0; i &lt; 360 ; i += 10 ) {
            if( i % 60 == 0 ) {
                var s47_mode = 1;
            } else {
                var s47_mode = 0;
            }
            a = instance_create(400, 200, objArchBullet21);
            a.dir = i;
            a.mode = s47_mode;
            a = instance_create(400, 200, objArchBullet21);
            a.dir = i;
            a.slope_sign = -1;
            a.mode = s47_mode;
        }
    }
    
    if( t &gt; 28525 &amp;&amp; t &lt; 28920 ) {
        if( t%24 == 0 ) {
            with(objArchBullet21) {
                if( self.mode == 1 ) {
                    for( i = random(90); i &lt; 360; i += 90 ) {
                        a = instance_create(x, y, objArchBullet21_2);
                        a.direction = i;
                        a.speed = 5;
                        //a.gravity = 0.3;
                    }
                }
            }
        }
    }
    
    if( t &gt; 28920 ) {
        var s47_imindex = round(lerp(0, 6, ((t-24)%96)/96));
        var s47_dir = (t - 28920) * 9.3;
        var s47_speed = lerp( 7, 9, ( t - 28920 ) / ( 29300 - 28920 ) );
        if( t%2 == 0 ) {
            a = instance_create(400, 200, objArchBullet22);
            a.direction = s47_dir;
            a.image_angle = a.direction;
            a.image_single = s47_imindex;
            a.speed = s47_speed;
            a = instance_create(400, 200, objArchBullet22);
            a.direction = s47_dir + 180;
            a.image_angle = a.direction;
            a.image_single = s47_imindex;
            a.speed = s47_speed;
            a = instance_create(400, 200, objArchBullet22);
            a.direction = -s47_dir;
            a.image_angle = a.direction;
            a.image_single = s47_imindex;
            a.speed = s47_speed;
            a = instance_create(400, 200, objArchBullet22);
            a.direction = -s47_dir + 180;
            a.image_angle = a.direction;
            a.image_single = s47_imindex;
            a.speed = s47_speed;
        }
    }
    if( t &lt; 29300 ) {
        var s47_slope = sin(((t+83)%192)/192*2*pi)//lerp(-1,1,((t+83)%192)/192);
        with(objArchBullet21) {
            slope = rad_x * s47_slope;
        }
    }
    
    if( t == 29275 ) {
        with(objArchBullet21) {
            self.despawnFrame = self.frame;
        }
    }

    // Effects.
    if( !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = t / 50;
    }
    
    // Effects.
    if( !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = t / 50;
    }
    segment = 46;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 47 (9:46 - 9:54) Mosh Solo
if( t &gt;= 29300 &amp;&amp; t &lt; 29680 &amp;&amp; instance_exists(objPlayer) ) {

    var phaseT = (t - 29300)%(48*4);
    if( phaseT &lt; 48 * 3 &amp;&amp; phaseT % 48 == 0 ) {
        var xx = random_range(100, 700);
        if( t &lt; 29492 ) {
            var yy = random_range(64, 192);
        } else {
            var yy = random_range(192, 352);
        }
        for( i = 0; i &lt; 360; i+= 22.5 ) {
            a = instance_create(xx, yy, objArchBullet19);
            a.direction = i;
            a.gravity_direction = i + 180;
            a.speed = 12;
            a.gravity = a.speed / 48;
        }
    }
    
    // Effects.
    if( !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = t / 50;
    }
    segment = 47;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 48 (9:54 - 10:09) Dark Solo A
if( t &gt;= 29680 &amp;&amp; t &lt; 30450 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var obj = instance_create( random_range( 350, 450 ), 0, objAlgA49Wave );
    obj.image_blend = make_colour_hsv( random( 255 ), 255, 255 );
    obj.phase = random( 2 * pi );
    obj.image_alpha = 0;
    
    if( t - 29680 &lt; 192 ) {
        obj.direction = random_range( 180, 360 );
        obj.speed = random_range( 8, 10 );
    } else if( t - 29680 &lt; 192 * 2 ) {
        obj.minAlpha = 0;
        obj.maxAlpha = 0.75;
        obj.direction = random_range( 195, 345 );
        obj.speed = random_range( 7, 9 );
    } else if( t - 29680 &lt; 192 * 3 ) {
        obj.minAlpha = 0;
        obj.maxAlpha = 0.5;
        obj.direction = random_range( 205, 335 );
        obj.speed = random_range( 6, 8 );
    } else {
        obj.minAlpha = 0;
        obj.maxAlpha = 0.25;
        obj.direction = random_range( 215, 325 );
        obj.speed = random_range( 5, 7 );
    }
    
    if( t == 30449 ) {
        with( objAlgA49Wave ) {
            instance_change( objAlgWaveDisappearing, true );
            alphaStep = 0.01;
        }
    }
    
    // Effects.
    if( !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = t / 50;
    }
    segment = 48;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 49 (10:09 - 10:24) Dark Solo B
if( t &gt;= 30450 &amp;&amp; t &lt; 31215 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 30450;
    if( phaseT &lt; 48 * 3 ) {
        if( phaseT % 24 == 0 ) {
            if( phaseT == 0 ) {
                segment50Variant = choose( 3, 4 );
                segment50Color = 30;
                var color = make_colour_hsv( segment50Color, 255, 255 );
                scrA50Spawn( segment50Variant, 24, 0.5, color ); 
            } else {
                var color = make_colour_hsv( segment50Color, 255, 255 );
                scrA50Spawn( segment50Variant, 24, 1, color ); 
                segment50Color = ( segment50Color + 256 / 3 ) % 256;
                color = make_colour_hsv( segment50Color, 255, 255 );
                
                segment50Variant = ( 4 - segment50Variant ) + 3;
                scrA50Spawn( segment50Variant, 24, 0.5, color ); 
            }
        }
    } else if( phaseT &gt;= 48 * 4 &amp;&amp; phaseT &lt; 48 * 7
        || phaseT &gt;= 48 * 8 &amp;&amp; phaseT &lt; 48 * 11
        || phaseT &gt;= 48 * 12 ) 
    {
        if( phaseT % 24 == 0 ) {
            if( phaseT % 192 == 0 ) {
                segment50Variant = irandom( 3 ) + 1;
                segment50Variant2 = 0;
                segment50Color = 30;
                var color = make_colour_hsv( segment50Color, 255, 255 );
                scrA50Spawn( segment50Variant, 24, 0.5, color ); 
            } else {
                var color = make_colour_hsv( segment50Color, 255, 255 );
                scrA50Spawn( segment50Variant, 24, 1, color ); 
                
                segment50Color = ( segment50Color + 256 / 3 ) % 256;
                color = make_colour_hsv( segment50Color, 255, 255 );
                var newVar = irandom( 4 );
                while( newVar == segment50Variant 
                    || newVar == segment50Variant2
                    || ( newVar == 0 &amp;&amp; phaseT &lt; 384 ) ) 
                {
                    newVar = irandom( 4 );
                }
                segment50Variant2 = segment50Variant;
                segment50Variant = newVar;
                scrA50Spawn( segment50Variant, 24, 0.5, color ); 
            }
        }
    }
    
    // Effects.
    if( !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = t / 50;
    }
    if( phaseT &lt;= 24 ) {
        with( objAlgShaderDisco ) {
            self.shaderSpeed = lerp( 1 / 50, 2 / 50, phaseT / 24 );
        }
    }
    segment = 49;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 50 (10:24 - 10:40) Q Solo
if( t &gt;= 31215 &amp;&amp; t &lt; 31985 &amp;&amp; instance_exists(objPlayer) ) {
    var s51_part = floor((t - 31215)/192)
    if( t%2 == 0 ) {
        a = instance_create(random_range(-400, 1200), 0, objArchBullet20);
        if( s51_part == 0 || s51_part == 1 ) {
            a.direction = 270 + 40;
        } else {
            a.direction = 270 - 40;
        }
        a.speed = 4;
        a = instance_create(random_range(-400, 1200), 0, objArchBullet20);
        if( s51_part == 1 || s51_part == 2 ) {
            a.direction = 270 + 40;
        } else {
            a.direction = 270 - 40;
        }
        a.speed = 4;
        a.image_index = 1;
    }
    
    // Effects.
    if( !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = 639.33;
        obj.shaderSpeed = 2 / 50;
    }
    segment = 50;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 51 (10:40 - 10:55) Mourning Solo
if( t &gt;= 31985 &amp;&amp; t &lt; 32750 &amp;&amp; instance_exists(objPlayer) ) {

    var s51_t = t - 31985;
    
    var s51_dir = random(360);
    var s51_x = random_range(100, 700);
    var s51_y = random_range(32, 160);
    var s51_count = 8;
    if( t &gt; 32650 ) {
        s51_count = 5;
    }
    
    if( s51_t%96 == 24 ) {
        scrMakeShapes(s51_x, s51_y, s51_dir, 3, s51_count, 5, objArchBullet24);
    }
    
    if( s51_t%96 == 48 ) {
        scrMakeShapes(s51_x, s51_y, s51_dir, 4, s51_count - 1, 4, objArchBullet24);
    }
    
    if( s51_t == 0 || s51_t%96 == 72 ) {
        scrMakeShapes(800-s51_x, s51_y, s51_dir, 5, s51_count, 3, objArchBullet24);
    }
    
    /*if( s51_t%96 == 48 ) {
        scrMakeShapes(s51_x, s51_y, s51_dir, 5, 5, 5, objArchBullet24);
    }*/
    
    if( s51_t%96 == 72 &amp;&amp; t &lt; (32750 - 72) ) {
        for( i = 0; i &lt; 360; i += 24 ) {
            a = instance_create(s51_x, s51_y, objArchBullet23);
            a.direction = s51_dir + i;
            a.curve = 360/20;
            a.speed = 12;
            a.alarm[0] = 24;
            a.image_blend = c_red;
        }
    }

    // Effects.
    if( !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = 670.13;
        obj.shaderSpeed = 2 / 50;
    }

    var phaseT = t - 31985;
    if( phaseT &lt;= 24 ) {
        with( objAlgShaderDisco ) {
            self.shaderSpeed = lerp( 2 / 50, 1 / 50, phaseT / 24 );
        }
    }
    segment = 51;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arch. Segment 52 (10:55 - 11:11) Murderous Solo A &amp; B
if( t &gt;= 32750 &amp;&amp; t &lt; 33525 &amp;&amp; instance_exists(objPlayer) ) {
    if( t == 32750 ) {
        a = instance_create(400, 128, objArchBullet13);
        a = instance_create(400, 128, objArchBullet13);
        a.t = 48;
    }
    if( t%24 == 0 &amp;&amp; t &lt; 33086 ) {
        var s53_xx = random_range( 32, 768 );
        a = instance_create(s53_xx, 128, objArchBullet14);
        a.vspeed = 6;
        //a.gravity = 0.2;
       // a = instance_create(800-s53_xx, 128, objArchBullet14);
        //a.vspeed = 18;
        //a.gravity = 0.2;
    }
    if( t &gt;= 33134 &amp;&amp; t &lt; 33422 &amp;&amp; t%18 == 0 ) {
        for( i = 0; i &lt; 360; i += 30 ) {
            a = instance_create(400, 304, objArchBullet13_3);
            a.direction = i;
            a.speed = 5;
            a.dirspd = sin(t/192*pi);
        }
    }
    if( t == 33433 ) {
        with(objArchBullet13) {
            type = 1;
        }
    }
    if( t == 33524 ) {
        with(objArchBullet13) {
            instance_destroy();
        }
    }
    
    // Effects.
    
    if( t == 32750 &amp;&amp; !instance_exists( objAlgShaderDisco ) ) {
        var obj = instance_create( 400, 304, objAlgShaderDisco );
        obj.iTime = 685.68;
    }
    if( t &lt;= 33134 ) {
        with( objAlgShaderDisco ) {
            self.shaderSpeed = lerp( 1 / 50, -4.5 / 50, ( other.t - 32750 ) / ( 33134 - 32750 ) );
        }
    } else {
        with( objAlgShaderDisco ) {
            self.shaderSpeed = lerp( -4.5 / 50, -20 / 50, ( other.t - 33134 ) / ( 33525 - 33134 ) );
        }
    }
    if( t == 33500 ) {
        with( objAlgShaderDisco ) {
            self.alphaStep = -0.1 / 25;
        }
    }
    segment = 52;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 53 (11:11 - 11:33) Outro A &amp; B &amp; C
if( t &gt;= 33525 &amp;&amp; t &lt; 34670 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    var phaseT = t - 33525;
    if( phaseT % 24 == 0 
        || ( phaseT &gt;= 96 * 4 + 48 &amp;&amp; phaseT &lt; 96 * 4 + 72 &amp;&amp; phaseT % 6 == 0 )  
        || ( phaseT &gt;= 96 * 5 + 48 &amp;&amp; phaseT &lt; 96 * 5 + 72 &amp;&amp; phaseT % 6 == 0 )  
        || ( phaseT &gt;= 96 * 6 + 48 &amp;&amp; phaseT &lt; 96 * 6 + 72 &amp;&amp; phaseT % 6 == 0 )  
        || ( phaseT &gt;= 96 * 7 + 48 &amp;&amp; phaseT &lt; 96 * 7 + 72 &amp;&amp; phaseT % 6 == 0 )
        || ( phaseT &gt;= 96 * 8 + 48 &amp;&amp; phaseT &lt; 96 * 9 &amp;&amp; phaseT % 6 == 0 )
        || ( phaseT &gt;= 96 * 9 + 48 &amp;&amp; phaseT &lt; 96 * 10 &amp;&amp; phaseT % 6 == 0 )
        || ( phaseT &gt;= 96 * 10 + 48 &amp;&amp; phaseT &lt; 96 * 11 &amp;&amp; phaseT % 6 == 0 )
        || ( phaseT &gt;= 96 * 11 + 48 &amp;&amp; phaseT &lt; 96 * 12 &amp;&amp; phaseT % 6 == 0 ) ) 
    {
        var spawnX = random_range( 50, 750 );
        var spawnY = random_range( 32, 64 );
        var circle = scrMakeCircle( spawnX, spawnY, random( 360 ), 8, 3, objAlgA54FullCircle );
        var color = random( 255 );
        for( var i = 0; i &lt; 8; i++ ) {
            circle[i].image_blend = make_colour_hsv( color, 255, 255 );
        }
        
        var obj = instance_create( spawnX, spawnY, objAlgA54CircleBounce );
        obj.image_xscale = 0.75;
        obj.image_yscale = 0.75;
        obj.direction = random( 360 );
        obj.speed = 5;
        obj.image_blend = make_colour_hsv( color, 255, 255 );
        obj.image_alpha = 1;
        obj.friction = 5 / 400;
    }
    segment = 53;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 54 (11:33 - 11:57) Outro D &amp; E
if( t &gt;= 34670 &amp;&amp; t &lt; 35825 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    
    if( t == 34670 ) {
        with( objAlgA54CircleBounce ) {
            friction = -0.0075;
            speed = 0.01;
            if( irandom( 2 ) == 0 ) {
                var obj = instance_create( x, y, objAlgA55CircleWrap );
                obj.speed = speed;
                obj.friction = friction;
                obj.image_blend = image_blend;
                obj.image_xscale = image_xscale;
                obj.image_yscale = image_yscale;
                obj.direction = random_range( -15, 15 );
                obj.isHorizontal = true;
                obj.hstep = obj.hspeed * 1.5;
                obj.vstep = obj.vspeed * 1.5;
                
                obj = instance_create( x, y, objAlgA55CircleWrap );
                obj.speed = speed;
                obj.friction = friction;
                obj.image_blend = image_blend;
                obj.image_xscale = image_xscale;
                obj.image_yscale = image_yscale;
                obj.direction = 270 + random_range( -15, 15 );
                obj.isHorizontal = false;
            } else {
                var obj = instance_create( x, y, objAlgA55CircleWrap );
                obj.speed = speed;
                obj.friction = friction;
                obj.image_blend = image_blend;
                obj.image_xscale = image_xscale;
                obj.image_yscale = image_yscale;
                obj.isHorizontal = irandom( 1 ) == 0;
                if( obj.isHorizontal ) {
                    obj.direction = random_range( -15, 15 );
                    obj.hstep = obj.hspeed * 1.5;
                    obj.vstep = obj.vspeed * 1.5;
                } else {
                    obj.direction = 270 + random_range( -15, 15 );
                }
            }
            
            instance_destroy();
        }
    } else if( t == 35070 ) {
        with( objAlgA55CircleWrap ) {
            friction = 0;
        }
    } else if( t &gt;= 35247 &amp;&amp; t &lt;= 35647 ) {
        with( objAlgA55CircleWrap ) {
            if( isHorizontal ) {
                hspeed -= hstep;
                vspeed -= vstep;
            }
        }
    }
    segment = 54;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alg Segment 55 (11:57 - 12:19) Outro F
if( t &gt;= 35825 &amp;&amp; t &lt; 37075 &amp;&amp; instance_exists(objPlayer) ) {
    if( !instance_exists( objAlgShaderDrawer ) ) {
        instance_create( 0, 0, objAlgShaderDrawer );
    }
    if( t == 35825 ) {
        with( objAlgA55CircleWrap ) {
            speed = 0.01;
            direction = 90 + random_range( -30, 30 );
            friction = -random_range( 0.002, 0.003 );
        }
    } else if( t == 36425 ) {
        with( objAlgA55CircleWrap ) {
            friction = 0;
        }
    }
    
    var satValue = lerp( 255, 0, ( t - 35825 ) / ( 36550 - 35825 ) );
    var phaseT = t - 35825 + 50;
    if( phaseT == 48 + 24
        || phaseT == 48 * 3 + 24
        || phaseT == 48 * 5 + 24
        || phaseT == 48 * 7 + 24
        || phaseT == 48 * 8 + 24
        || phaseT == 48 * 9 + 24
        || phaseT == 48 * 10 + 24 )
    {
        seg56PlayerX = scrGetPlayerX();
    }
    if( phaseT &gt; 48 + 24 &amp;&amp; phaseT &lt; 48 * 2
        || phaseT &gt; 48 * 3 + 24 &amp;&amp; phaseT &lt; 48 * 4
        || phaseT &gt; 48 * 5 + 24 &amp;&amp; phaseT &lt; 48 * 6
        || phaseT &gt; 48 * 7 + 24 &amp;&amp; phaseT &lt; 48 * 8
        || phaseT &gt; 48 * 8 + 24 &amp;&amp; phaseT &lt; 48 * 9
        || phaseT &gt; 48 * 9 + 24 &amp;&amp; phaseT &lt; 48 * 10
        || phaseT &gt; 48 * 10 + 24 &amp;&amp; phaseT &lt; 48 * 11 ) 
    {
        if( t % 3 == 1 ) {
            var xDiff = lerp( 0, 24, ( phaseT % 24 ) / 24 );
            var color = make_colour_hsv( random( 255 ), 0, 255 );
            var obj = instance_create( seg56PlayerX + xDiff, 608 - 16, objAlgA56FullCircle );
            obj.image_blend = color;
            obj = instance_create( seg56PlayerX - xDiff, 608 - 16, objAlgA56FullCircle );
            obj.image_blend = color;
        }
    }
    
    if( t &lt; 36550 ) {
        with( objAlgA55CircleWrap ) {
            var hue = colour_get_hue( image_blend );
            image_blend = make_colour_hsv( hue, satValue, 255 );
        }
    }
    
    if( t == 36550 ) {
        with( objAlgA55CircleWrap ) {
            instance_change( objAlgSphereDisappearing2, true );
            friction = -0.25;
        }
    }
    segment = 55;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Exit segment
if( t &gt;= 37075 ) {
    if( t == 37075 ) {
        scrStopMusic();
    }
    
    if( t == 37075 ) {
        a = instance_create(384, 512, objWarp);
        a.roomTo = rGG;
        
        global.pb = t;
        global.pb_segment = segment;
        scrSaveGame();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Эффекты камеры
view_angle = angle;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Exit segment practice
if( global.segment &gt; 0 &amp;&amp; global.segment != segment ) {
    instance_create(0,0,objExitPractice);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deadsplit DansGame

if( instance_exists(objPlayer) ) {
    global.playeralive = true;
} else {
    global.playeralive = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Warnings
/*
if( instance_exists(objPlayer) ) {
    if( t == 2396 ) {
        a = instance_create(32, 32, objWarning);
        a.image_yscale = 8.5;
    }
    if( t == 2496 ) {
        a = instance_create(768, 32, objWarning);
        a.image_xscale = -1;
        a.image_yscale = 8.5;
    }
    if( t == 3706 ) {
        a = instance_create(32, 32, objWarning);
        a.image_yscale = 8.5;
        
        a = instance_create(768, 32, objWarning);
        a.image_xscale = -1;
        a.image_yscale = 8.5;
    }
    if( t == 7189 ) {
        a = instance_create(32, 32, objWarning);
        a.image_yscale = 8.5;
        
        a = instance_create(768, 32, objWarning);
        a.image_xscale = -1;
        a.image_yscale = 8.5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Размытие
if( shake ) {
    repeat(6) {
        draw_surface_ext(application_surface, random_range(-10,10), random_range(-10,10), 1, 1, 0, c_white, 0.2);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fDefault12);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
scrDrawTextOutline(645, 40, "Segment: " + string(segment), c_white, c_black);
scrDrawTextOutline(645, 56, "Frame: " + string(t), c_white, c_black);
scrDrawTextOutline(645, 72, "Time: " + string(floor(t/50/60)) + ":" + string(floor(t/50 mod 60)), c_white, c_black);
scrDrawTextOutline(645, 88, "Instances: " + string(instance_count), c_white, c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

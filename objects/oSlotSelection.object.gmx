<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isActive = false;

// Load data from save files.
currentSelection = scrLoadLastSlot();

for( var i = 0; i &lt; 3; i++ )
{
    if( file_exists( "Data\save" + string( i + 1 ) ) ) {
        exists[i] = true;
        var saveMap;
        if( global.extraSaveProtection ) {
            saveMap = ds_map_secure_load( "Data\save" + string( i + 1 ) );
        } else {
            var f = file_text_open_read( "Data\save" + string( i + 1 ) );
            saveMap = json_decode( base64_decode( file_text_read_string( f ) ) );            
            file_text_close( f );
        }
        
        if( saveMap != -1 ) {
            death[i] = ds_map_find_value( saveMap, "death" );
            if( is_undefined( death[i] ) ) {
                death[i] = 0;
            }
            time[i] = ds_map_find_value( saveMap, "time" );
            if( is_undefined( time[i] ) ) {
                time[i] = 0;
            }
            pbSegment[i] = ds_map_find_value( saveMap, "difficulty" );
            if( is_undefined( pbSegment[i] ) ) {
                pbSegment[i] = 0;
            }
            clear[i] = ds_map_find_value( saveMap, "saveGameClear" );
            if( is_undefined( clear[i] ) ) {
                clear[i] = false;
            }
            ds_map_destroy(saveMap);
        } else {
            // Save map didn't load correctly, set the variables to the defaults.
            death[i] = 0;
            time[i] = 0;
            pbSegment[i] = 0;
            clear[i] = false;
        }
    } else {
        exists[i] = false;
        death[i] = 0;
        time[i] = 0;
    }
    
    var t = time[i];
    
    timeStr[i] = string(t div 3600) + ":";
    t = t mod 3600;
    timeStr[i] += string(t div 600);
    t = t mod 600;
    timeStr[i] += string(t div 60) + ":";
    t = t mod 60;
    timeStr[i] += string(t div 10);
    t = t mod 10;
    timeStr[i] += string(floor(t));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isActive = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( !isActive ) {
    exit;
}

var isDown = scrButtonCheckPressed( global.menuDownButton );
var isUp = scrButtonCheckPressed( global.menuUpButton );
var isSelect = scrButtonCheckPressed( global.menuAcceptButton1 ) || scrButtonCheck( global.menuAcceptButton2 );

if( isDown ) {
    currentSelection = min( 3, currentSelection + 1 );
}
if( isUp ) {
    currentSelection = max( 0, currentSelection - 1 );
}
if( isSelect ) {
    switch( currentSelection ) {
        case 0:
        case 1:
        case 2:
            global.savenum = currentSelection + 1;
            scrSaveLastSlot( currentSelection );
            if( exists[currentSelection] ) {
                scrLoadGame( true );
            } else {
                global.gameStarted = true;
                global.difficulty = 1;
                room_goto( global.startRoom );
            }
            break;
        case 3:
            oMenuTransitionController.targetX = oMainMenu.x;
            oMainMenu.alarm[0] = 1;
            isActive = false;
        default:
            break;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

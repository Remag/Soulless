<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spriteBackground</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>iTime = 0;
iResolutionX = 0.77;
iResolutionY = 0.3;

shaderSpeed = 1 / 50;
baseSpeedMultiplier = 0.02;
//image_blend = make_color_rgb( 255, 255, 0 );
iColor2 = image_blend;
iColor3 = image_blend;

targetColor1 = image_blend;
targetColor2 = image_blend;
targetColor3 = image_blend;

image_alpha = 0;
image_xscale = 2;
image_yscale = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>iTime += shaderSpeed * baseSpeedMultiplier;

if( image_alpha &lt; 0.2 ) {
    image_alpha += 0.1 / 50;
}

var colorStep = 25;
image_blend = scrBackgroundColorStep( image_blend, targetColor1, colorStep );
iColor2 = scrBackgroundColorStep( iColor2, targetColor2, colorStep );
iColor3 = scrBackgroundColorStep( iColor3, targetColor3, colorStep );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( shader_is_compiled( backgroundShader ) ) {
    shader_set(backgroundShader);
    var iTimePos = shader_get_uniform( backgroundShader, "iTime" );
    var iResolutionPos = shader_get_uniform( backgroundShader, "iResolution" );
    var iColor2Pos = shader_get_uniform( backgroundShader, "iColor2" );
    var iColor3Pos = shader_get_uniform( backgroundShader, "iColor3" );
    shader_set_uniform_f( iTimePos, iTime );
    shader_set_uniform_f( iResolutionPos, iResolutionX, iResolutionY );
    shader_set_uniform_color( iColor2Pos, iColor2 );
    shader_set_uniform_color( iColor3Pos, iColor3 );
    draw_self();
    shader_reset();
} else {
    show_debug_message("Shader failed");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

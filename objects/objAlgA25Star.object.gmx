<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlgStar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAlgStar</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
circleAngle = 0;
spawnDir = 1;
circleX = 900;
circleY = 608 - 32;
circleRadius = 100;
circleSpeedX = -1;
circleSpeedY = 0;
circleRotationSpeed = 0.5;
circleId = 0;
image_xscale = 16 / 30;
image_yscale = 16 / 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
x = circleX + circleRadius * cos( circleAngle / 180 * pi );
y = circleY + circleRadius * sin( circleAngle / 180 * pi );
circleAngle += circleRotationSpeed;
circleX += circleSpeedX;
circleY += circleSpeedY;

var obj = instance_create( x, y, objAlgSphereDisappearing );
obj.image_blend = image_blend;
obj.image_alpha = 0.3;
obj.image_xscale = 0.5;
obj.image_yscale = 0.5;
obj.hspeed = ( circleX + circleSpeedX * 4 - x ) / 5;
obj.vspeed = ( circleY + circleSpeedY * 4 - y ) / 5;

if( x - sprite_width &gt; 1050 ) {
    with( objAlgA25Star ) {
        if( self.circleId == other.circleId ) {
            instance_destroy();
        }
    }
    instance_destroy();
} else if( x + sprite_width &lt; -272 ) {
    with( objAlgA25Star ) {
        if( self.circleId == other.circleId ) {
            instance_destroy();
        }
    }
    instance_destroy();
} 
while( y - sprite_height &gt; 728 ) {
    y -= 1008;
    circleY -= 1008;
} 
while( y + sprite_height &lt; -380 ) {
    y += 1008;
    circleY += 1008;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

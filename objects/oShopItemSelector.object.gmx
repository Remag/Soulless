<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var skinList = instance_create( 0, 0, oShopItemList );
for( var i = 0; i &lt; 6; i++ ) {
    skinList.itemInfo[i] = instance_create( 0, 0, scrGetSkinInfoById( i ) );
}
itemLists[0] = skinList;

var weaponList = instance_create( 0, 0, oShopItemList );
for( var i = 0; i &lt; 6; i++ ) {
    weaponList.itemInfo[i] = instance_create( 0, 0, scrGetWeaponInfoById( i + 6 ) );
}
itemLists[1] = weaponList;

currentSection = oPlayerData.lastShopSection;
currentItem = oPlayerData.lastShopItem;
maxUnlockedItem = scrGetMaxUnlockedItem( currentSection );

sectionNames[0] = "Characters";
sectionNames[1] = "Weapons";

isActive = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( !isActive ) {
    exit;
}

var isLeft = scrButtonCheckPressed( global.leftButton );
var isTop = scrButtonCheckPressed( global.upButton );
var isRight = scrButtonCheckPressed( global.rightButton );
var isBottom = scrButtonCheckPressed( global.downButton );
var isSelect = scrButtonCheckPressed( global.shootButton );

if( isLeft ) {
    if( currentItem == -1 ) {
        scrTrySetShopSection( currentSection - 1 )
    } else if( currentItem != 0 ) {
        scrTrySetShopItem( currentItem - 1 );
    } else if( scrTrySetShopSection( currentSection - 1 ) ) {
        scrTrySetShopItem( maxUnlockedItem );
    }
}
if( isTop ) {
    if( currentItem != -1 ) {
        if( !scrTrySetShopItem( currentItem - 3 ) ) {
            scrTryFocusShopSegmentSelection();
        }
    } else {
        scrTrySetShopItem( maxUnlockedItem );
    }
}
if( isRight ) {
    if( currentItem == -1 ) {
        scrTrySetShopSection( currentSection + 1 )
    } else if( !scrTrySetShopItem( currentItem + 1 ) &amp;&amp; scrTrySetShopSection( currentSection + 1 ) ) {
        scrTrySetShopItem( 0 );
    }
}
if( isBottom ) {
    if( currentItem == -1 ) {
        scrTrySetShopItem( 0 );
    } else if ( !scrTrySetShopItem( currentItem + 3 ) ) {
        if( floor( maxUnlockedItem / 3 ) == floor( currentItem / 3 ) ) {
            scrTryFocusShopSegmentSelection();
        } else if( currentItem != maxUnlockedItem ) {
            scrTrySetShopItem( maxUnlockedItem );        
        }
    }
}

if( isSelect &amp;&amp; currentItem != -1 ) {
    scrTryBuyShopItem( currentSection, currentItem );
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font( fAttackNumber );
draw_set_color( c_white );
draw_set_halign( fa_center );
draw_set_valign( fa_center );

var sectionCount = array_length_1d( sectionNames );
var sectionX = x + 96 * 3 / 2;
var sectionY = y + 16;
    
draw_text( sectionX, sectionY, sectionNames[currentSection] );
if( currentItem == -1 ) {
    draw_rectangle( sectionX - 64, sectionY - 16, sectionX + 64, sectionY + 16, true );
    if( currentSection &gt; 0 ) {
        draw_sprite_ext( sprUiArrow, 0, sectionX - 75, sectionY, -1, 1, 0, c_white, 1 );
    }
    if( currentSection &lt; sectionCount - 1 ) {
        draw_sprite_ext( sprUiArrow, 0, sectionX + 75, sectionY, 1, 1, 0, c_white, 1 );
    }
}

var itemCount = array_length_1d( itemLists[currentSection].itemInfo );
for( var i = 0; i &lt; itemCount; i++ ) {
    var segmentRow = floor( i / 3 );
    var segmentColumn = i % 3;
    var segmentX = x + segmentColumn * 96;
    var segmentY = y + segmentRow * 96 + 32;
    
    if( i &gt; maxUnlockedItem ) {
        draw_set_color( c_gray );
    } else {
        draw_set_color( c_white );
    }
    draw_text( segmentX + 48, segmentY + 48, string( i + 1 ) );
    if( currentItem == i ) {
        draw_rectangle( segmentX + 16, segmentY + 16, segmentX + 78, segmentY + 78, true );
        draw_set_alpha( 1 );
    }
}

// Price tag.
if( currentItem != -1 ) {
    var nameX = x + 96 * 1.5;
    var nameY = y + 96 * 2 + 44;
    draw_set_color( c_white ); 
    draw_set_halign( fa_center );
    draw_text( nameX, nameY, itemLists[currentSection].itemInfo[currentItem].name );
    draw_set_font( fDescription );
    draw_text( nameX, nameY + 32, itemLists[currentSection].itemInfo[currentItem].description );
}

draw_set_color( c_white );
draw_set_font( fDefault24 );
draw_set_valign( fa_top );
draw_set_halign( fa_left );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

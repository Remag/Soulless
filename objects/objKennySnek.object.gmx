<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKennySnekHead</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>killer = true;

initial_x = x;
initial_y = y;

image_speed = 0;
head = instance_create(x,y, objKennySnekHead);
head.image_alpha = image_alpha;
direction = 0;
target_direction = 0;
t = 0;
initial_t = t;

speed = 7;
frequency = 5;
amplitude = 100;
headangle_coefficient = 1;

snek_parts = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destroy children!


//destroy snek head
    with (head) instance_destroy();

    
// destroy snek parts
    for (var i = 0; i &lt; ds_list_size(snek_parts); i++;)
    {
        with (ds_list_find_value(snek_parts, i)) instance_destroy();
    }
    ds_list_destroy(snek_parts);
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!killer)
{
    var killer_snek = instance_create(initial_x, initial_y, objKennySnek);
    
    killer_snek.image_index = 1;
    killer_snek.direction = direction;
    killer_snek.target_direction = target_direction;
    killer_snek.headangle_coefficient = headangle_coefficient;
    killer_snek.speed = speed;
    killer_snek.frequency = frequency;
    killer_snek.amplitude = amplitude;
    killer_snek.t = initial_t;
    killer_snek.initial_t = initial_t;
    
    with (killer_snek)
    {
        repeat (7) {
            scrKennySnekAddBodyPart(objKennySnekBodyPart, 0.9);
        }
        
        repeat (2) {
            scrKennySnekAddBodyPart(objKennySnekBodyPart, 0.7);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move snek parts

if (ds_list_size(snek_parts) &gt; 0)
{
    body_part = ds_list_find_value(snek_parts, 0);
    body_part.x = head.x;
    body_part.y = head.y;
    body_part.image_angle = head.image_angle;
}

for (var i=ds_list_size(snek_parts)-1; i &gt; 0; i--)
{
    body_part = ds_list_find_value(snek_parts, i);
    prev_body_part = ds_list_find_value(snek_parts, i-1);
    body_part.x = prev_body_part.x;
    body_part.y = prev_body_part.y;
    body_part.image_angle = prev_body_part.image_angle;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>offset = amplitude * dsin(t*frequency);
angle = (t*frequency) mod 360;

head.x = x - offset * dsin(direction);
head.y = y - offset * dcos(direction);

// Поворот изображения
if ( angle &lt;= 180) // from 0 to 180
{
    head.image_angle = ((90 - angle) * headangle_coefficient + direction);
}
else // // from 180 to 360
{
    head.image_angle = ((angle - 270) * headangle_coefficient + direction);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// change killer of children
head.killer = killer;
for (var i=ds_list_size(snek_parts)-1; i &gt;= 0; i--)
{
    body_part = ds_list_find_value(snek_parts, i);
    body_part.killer = killer;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// step++
t++;
    
head.image_index = image_index;

//if (instance_exists(objPlayer))
//    target_direction = point_direction(x,y,objPlayer.x,objPlayer.y);
    
if (direction != target_direction) {
    absolute_angle_difference = min(abs(target_direction - direction), abs(360 + target_direction - direction));
    
    angle_difference_sign = 1;
    if (absolute_angle_difference == abs(target_direction - direction))
    {
        angle_difference_sign = sign(target_direction - direction);
    }
    
    if (absolute_angle_difference &gt; 3) {
        direction += 3*angle_difference_sign;
    }
    else
    {
        direction = target_direction;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// life limit
if (y &gt; 820 || y &lt; -200 || x &lt; -300 || x &gt; 1200)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var t = objAvoidanceController.t;
///Блоки по гейтам.
if( t &gt;= 0 &amp;&amp; t &lt; 26230 ) {
    if( !instance_exists( objCornerBlock ) ) {
        instance_create( 0, 0, objCornerBlock );
        instance_create( 768, 0, objCornerBlock );
        instance_create( 0, 608 - 32, objCornerBlock );
        instance_create( 768, 608 - 32, objCornerBlock );
        instance_create( 32, 0, objGate3Block );
        instance_create( 32, 608 - 32, objGate3Block );
        var obj = instance_create( 0, 608 - 32, objGate3Block );
        obj.image_xscale = ( 608 - 64 ) / 736;
        obj.image_angle = 90;
        obj = instance_create( 800 - 32, 608 - 32, objGate3Block );
        obj.image_xscale = ( 608 - 64 ) / 736;
        obj.image_angle = 90;
    }
} else if( t &gt;= 26230 &amp;&amp; t &lt; 33525 ) {
    if( instance_exists( objCornerBlock ) ) {
        with( objCornerBlock ) {
            instance_destroy();
        }
        with( objGate3Block ) {
            instance_destroy();
        }
    }
    if( !instance_exists( objGate5CornerBlock ) ) {
        instance_create( 0, 0, objGate5CornerBlock );
        instance_create( 768, 0, objGate5CornerBlock );
        instance_create( 0, 608 - 32, objGate5CornerBlock );
        instance_create( 768, 608 - 32, objGate5CornerBlock );
        
        var obj = instance_create( 32, 0, objGate5EdgeCBlock );
        obj.image_index = 0;
        obj = instance_create( 32, 608 - 32, objGate5EdgeCBlock );
        obj.image_index = 0;
        obj = instance_create( 736, 0, objGate5EdgeCBlock );
        obj.image_index = 1;
        obj = instance_create( 736, 608 - 32, objGate5EdgeCBlock );
        obj.image_index = 1;
        obj = instance_create( 0, 32, objGate5EdgeCBlock );
        obj.image_index = 2;
        obj = instance_create( 768, 32, objGate5EdgeCBlock );
        obj.image_index = 2;
        obj = instance_create( 0, 608 - 64, objGate5EdgeCBlock );
        obj.image_index = 3;
        obj = instance_create( 768, 608 - 64, objGate5EdgeCBlock );
        obj.image_index = 3;
        
        for( var i = 64; i &lt; 736; i += 32 ) {
            instance_create( i, 0, objGate5EdgeHBlock );  
            instance_create( i, 608 - 32, objGate5EdgeHBlock );    
        }
        for( var i = 64; i &lt; 608 - 64; i += 32 ) {
            instance_create( 0, i, objGate5EdgeVBlock );  
            instance_create( 768, i, objGate5EdgeVBlock );    
        }
    }
} else if( t &gt;= 33525 ) {
    if( instance_exists( objGate5CornerBlock ) ) {
        with( objGate5CornerBlock ) {
            instance_destroy();
        }
        with( objGate5EdgeCBlock ) {
            instance_destroy();
        }
        with( objGate5EdgeHBlock ) {
            instance_destroy();
        }
        with( objGate5EdgeVBlock ) {
            instance_destroy();
        }
    }
    if( !instance_exists( objCornerBlock ) ) {
        instance_create( 0, 0, objCornerBlock );
        instance_create( 768, 0, objCornerBlock );
        instance_create( 0, 608 - 32, objCornerBlock );
        instance_create( 768, 608 - 32, objCornerBlock );
        instance_create( 32, 0, objGate3Block );
        instance_create( 32, 608 - 32, objGate3Block );
        var obj = instance_create( 0, 608 - 32, objGate3Block );
        obj.image_xscale = ( 608 - 64 ) / 736;
        obj.image_angle = 90;
        obj = instance_create( 800 - 32, 608 - 32, objGate3Block );
        obj.image_xscale = ( 608 - 64 ) / 736;
        obj.image_angle = 90;
    }
}
// Gate 3.
if( t &gt;= 11540 &amp;&amp; t &lt; 18545 ) {
    if( !instance_exists( objGate3ShaderBlock ) ) {
        instance_create( 16, 16, objGate3ShaderBlock );
        instance_create( 16, 608 - 16, objGate3ShaderBlock );
        obj = instance_create( 16, 608 - 16, objGate3ShaderBlock );
        obj.image_xscale = ( 608 - 32 ) / 32;
        obj.image_angle = 90;
        obj = instance_create( 800 - 16, 608 - 16, objGate3ShaderBlock );
        obj.image_xscale = ( 608 - 32 ) / 32;
        obj.image_angle = 90;
        
        obj = instance_create( 16, 608 - 16, objGate3ShaderBlock );
        obj.image_angle = -135;
        obj = instance_create( 800 - 16, 16, objGate3ShaderBlock );
        obj.image_angle = 45;
        obj = instance_create( 16, 16, objGate3ShaderBlock );
        obj.image_angle = 135;
        obj = instance_create( 800 - 16, 608 - 16, objGate3ShaderBlock );
        obj.image_angle = -45;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

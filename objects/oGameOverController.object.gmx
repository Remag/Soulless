<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gameOverAlpha = 0;
restartAlpha = 0;
portalAlpha = 0;
durationAlpha = 0;
payoutAlpha = 0;

step = 0;
payoutComplete = false;

if( room == rAvoidanceMainRoom ) {
    if( !global.TournamentMode ) {
        var segment = objAvoidanceController.segment;
        if( scrGetCurrentTrinketType() != 5 ) {
            survivalPayout = scrGetTotalAttackReward( segment ) + scrGetTotalPbReward( global.pb_segment, segment ) + scrGetTotalGateReward( global.pb_segment, segment );
        } else {
            survivalPayout = 0;
        }
    } else {
        survivalPayout = 0;
    }
    attemptLength = objAvoidanceController.t;
    pbMark = attemptLength &gt; global.pb;
} else {
    survivalPayout = 0;
    attemptLength = 0;
    pbMark = false;
}

if( survivalPayout &gt; 0 || attemptLength &gt; 0 ) {
    gameOverY = 250;
    returnTooltipDelay = 150;
} else {
    gameOverY = 270;
    returnTooltipDelay = 50;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>step++;

if( step &gt; 30 ) {
    gameOverAlpha = min( 1, gameOverAlpha + 0.1 );
}
if( step &gt; 40 ) {
    durationAlpha = min( durationAlpha + 0.01, 1 );
}
if( step &gt; 50 &amp;&amp; room == rAvoidanceMainRoom &amp;&amp; !payoutComplete ) {
    // Reward the player and set pbs.
    scrRewardPlayerGlobalProgress();
    scrSaveGame();
    with( oCurrencyDisplayView ) { alwaysShow = true; }
    payoutComplete = true;
}

if( step &gt; 60 ) {
    payoutAlpha = min( payoutAlpha + 0.01, 1 );
}

if( step &gt; returnTooltipDelay ) {
    portalAlpha = min( portalAlpha + 0.01, 1 );
}
if( step &gt; returnTooltipDelay + 20 ) {
    restartAlpha = min( restartAlpha + 0.01, 1 );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( room == rAvoidanceMainRoom &amp;&amp; !payoutComplete ) {
    // Reward the player and set pbs.
    scrRewardPlayerGlobalProgress();
    scrSaveGame();
    payoutComplete = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext( sprGameOver, 0, 400, gameOverY, 1, 1, 0, c_white, gameOverAlpha );

draw_set_font( fNotifications );

if( attemptLength &gt; 0 ) {
    var lineX = 397;
    var lineY = gameOverY + 100;
    draw_set_halign( fa_right );
    draw_set_alpha( durationAlpha );
    if( pbMark ) {
        draw_set_color( c_yellow );
        draw_text( lineX, lineY, "New Best" ); 
    } else {
        draw_text( lineX, lineY, "Duration" ); 
    }
    draw_set_halign( fa_left );
    var attemptLengthString = scrGetPbTimeString( attemptLength );
    draw_text( lineX + 25, lineY, attemptLengthString );
    draw_set_color( c_white );
}

if( survivalPayout &gt; 0 ) {
    var lineX = 397;
    var lineY = gameOverY + 150;
    draw_set_halign( fa_right );
    draw_set_alpha( payoutAlpha );
    draw_text( lineX, lineY, "Reward" ); 
    draw_set_halign( fa_left );
    var payoutString = string( survivalPayout );
    draw_text( lineX + 25, lineY, payoutString );
    var crystalScale = 0.5;
    texture_set_interpolation( true );
    draw_sprite_ext( sprSoulCrystal, 3, lineX + 30 + string_width( payoutString ), lineY - 8, crystalScale, crystalScale, 0, c_white, payoutAlpha );
    texture_set_interpolation( false );
}

draw_set_halign( fa_center );
draw_set_alpha( portalAlpha );
var portalString = "Press " + scrGetKeybind( global.portalButton[0] ) + " to quit to the portal room";
draw_text( 400, 510, portalString );
draw_set_alpha( restartAlpha );
var restartString = "Press " + scrGetKeybind( global.restartButton[0] ) + " to try again";
draw_text( 400, 545, restartString );
draw_set_alpha( 1 );

draw_set_font( fDefault24 );
draw_set_halign( fa_left );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

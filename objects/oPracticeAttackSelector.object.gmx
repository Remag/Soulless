<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentGate = oPlayerData.lastPracticeGate;
segmentCount = scrGetGateSegmentCount( currentGate );
if( global.unlockEntirePractice || global.gameClear ) {
    maxGate = 6;
    pbSegment = segmentCount - 1;
    practiceLimitSegment = scrGetSegmentCount();
} else {
    practiceLimitSegment = clamp( global.pb_segment, 0, scrGetSegmentCount() - scrGetGateSegmentCount( 6 ) );
    maxGate = scrGetSegmentGate( practiceLimitSegment );
    if( maxGate == currentGate ) {
        pbSegment = scrFindLocalSegment( practiceLimitSegment );
    } else {
        pbSegment = segmentCount - 1;
    }
}

childrenMap = ds_map_create();
unfreezeDelay = 20;
quitDelay = 0;
isActive = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_destroy( childrenMap );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( !isActive ) {
    exit;
}

quitDelay++;
var isLeft = scrButtonCheckPressed( global.leftButton );
var isTop = scrButtonCheckPressed( global.upButton );
var isRight = scrButtonCheckPressed( global.rightButton );
var isBottom = scrButtonCheckPressed( global.downButton );
var isSelect = scrButtonCheckPressed( global.shootButton );

if( isLeft ) {
    if( currentSegment == -1 ) {
        scrTrySetGate( currentGate - 1 )
    } else if( currentSegment != 0 ) {
        scrTrySetSegment( currentSegment - 1 );
    } else if( scrTrySetGate( currentGate - 1 ) ) {
        scrTrySetSegment( pbSegment );
    }
}
if( isTop ) {
    if( currentSegment != -1 ) {
        if( !scrTrySetSegment( currentSegment - 4 ) ) {
            scrTryFocusGateSelection();
        }
    } else {
        scrTrySetSegment( pbSegment );
    }
}
if( isRight ) {
    if( currentSegment == -1 ) {
        scrTrySetGate( currentGate + 1 )
    } else if( !scrTrySetSegment( currentSegment + 1 ) &amp;&amp; scrTrySetGate( currentGate + 1 ) ) {
        scrTrySetSegment( 0 );
    }
}
if( isBottom ) {
    if( currentSegment == -1 ) {
        scrSelectSegment( 0 );
    } else if ( !scrTrySetSegment( currentSegment + 4 ) ) {
        if( floor( pbSegment / 4 ) == floor( currentSegment / 4 ) ) {
            scrTryFocusGateSelection();
        } else if( currentSegment != pbSegment ) {
            scrTrySetSegment( pbSegment );        
        }
    }
}

if( isSelect &amp;&amp; currentSegment != -1 ) {
    var price = oPracticePriceView.currentPrice;
    if( oPlayerData.currencyCount &gt;= price ) {
        oPlayerData.currencyCount -= price;
        scrSaveGame();
        oPlayerData.practiceStartSegment = scrFindGlobalSegment( currentGate, currentSegment );
        oPlayerData.practiceEndSegment = practiceLimitSegment + 1;
        oPlayerData.targetEntranceId = 0;
        oPlayerData.practicePrice = price;
        oPlayerData.isFirstPracticeAttempt = true;
        room_goto( rPracticeActiveRoom );
    }
}

if( !instance_exists( oPreviewAvoidanceController ) &amp;&amp; currentSegment != -1 ) {    
    var globalSegment = scrFindGlobalSegment( currentGate, currentSegment );
    var segmentController = instance_create( 0, 0, oPreviewAvoidanceController );
    segmentController.t = scrGetSegmentOffset( globalSegment );
    segmentController.startSegment = globalSegment;
    var musicId = audio_play_sound( oMusicContainer.avoidanceMusic, 0, false );

    audio_sound_gain( musicId, 0, 0 );
    audio_sound_gain( musicId, 0.3, 250 );
    segmentController.practiceMusicId = musicId;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_destroy( childrenMap );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Mark every static entity.
with( all ) {
    ds_map_add( other.childrenMap, id, -1 );
}

// Initialize the first segment.
if( maxGate &lt;= 1 &amp;&amp; oPlayerData.lastPracticeSegment == -1 ) {
    scrSelectSegment( 0 );
} else {
    scrSelectSegment( oPlayerData.lastPracticeSegment );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_destroy( childrenMap );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font( fAttackNumber );
draw_set_color( c_white );
draw_set_halign( fa_center );
draw_set_valign( fa_center );

var attacksOffset;
if( maxGate &gt; 1 ) {
    attacksOffset = 32;
    var gateX = x + 96 * 2;
    var gateY = y + 16;
    
    draw_text( gateX, gateY, "Gate " + string( currentGate ) );
    if( currentSegment == -1 ) {
        draw_rectangle( gateX - 64, gateY - 16, gateX + 64, gateY + 16, true );
        if( currentGate &gt; 1 ) {
            draw_sprite_ext( sprUiArrow, 0, gateX - 75, gateY, -1, 1, 0, c_white, 1 );
        }
        if( currentGate &lt; maxGate ) {
            draw_sprite_ext( sprUiArrow, 0, gateX + 75, gateY, 1, 1, 0, c_white, 1 );
        }
    }
} else {
    attacksOffset = 16;
}

for( var i = 0; i &lt; segmentCount; i++ ) {
    var segmentRow = floor( i / 4 );
    var segmentColumn = i % 4;
    var segmentX = x + segmentColumn * 96;
    var segmentY = y + segmentRow * 96 + attacksOffset;
    
    if( i &gt; pbSegment ) {
        draw_set_color( c_gray );
    } else {
        draw_set_color( c_white );
    }
    draw_text( segmentX + 48, segmentY + 48, string( i + 1 ) );
    if( currentSegment == i ) {
        draw_rectangle( segmentX + 16, segmentY + 16, segmentX + 78, segmentY + 78, true );
        draw_set_alpha( 1 );
    }
}

draw_set_color( c_white );
draw_set_font( fDefault24 );
draw_set_valign( fa_top );
draw_set_halign( fa_left );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( !global.TournamentMode ) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var t = global.TournamentLength - global.TournamentTime;
// Display 1 second if exactly 0 seconds left. 
// Display 0 if negative seconds left (shouldn't happen).
if( t == 0 ) {
    t = 1;
} else {
    t = max( 0, t );
}

var isTournamentComplete = global.TournamentComplete;

draw_set_color( c_white );
draw_set_font( fNotifications );
draw_set_halign( fa_left );
var timeLeftPrefix = "Time left  ";
var pbPrefix = "Best Result  ";
var timeLeftStr = scrGetTimeString( t );
var pbStr = scrGetPbTimeString( global.TournamentPb );
var timeLeftTotalWidth = string_width( timeLeftPrefix + timeLeftStr );
var timeLeftPrefixWidth = string_width( timeLeftPrefix );
var pbTotalWidth = string_width( pbPrefix + pbStr );
var pbPrefixWidth = string_width( pbPrefix );
if( !isTournamentComplete ) {
    draw_text( x - timeLeftTotalWidth / 2, y, timeLeftPrefix );
}
draw_text( x - pbTotalWidth / 2, y - 38, pbPrefix );
draw_set_halign( fa_left );
if( !isTournamentComplete ) {
    draw_text( x - timeLeftTotalWidth / 2 + timeLeftPrefixWidth, y, timeLeftStr );
}
draw_set_color( c_yellow );
draw_text( x - pbTotalWidth / 2 + pbPrefixWidth, y - 38, pbStr );
draw_set_color( c_white );
draw_set_halign( fa_center );
if( isTournamentComplete ) {
   // draw_text( x, y, "Further attempts will not count towards your result" );
}
draw_set_font( fPracticeTitle );
if( isTournamentComplete ) {
    draw_text( x, y - 96, "Tournament Complete!" );
} else {
    draw_text( x, y - 96, "Soulless Tournament" );
}
draw_set_halign( fa_left );
draw_set_font( fDefault24 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

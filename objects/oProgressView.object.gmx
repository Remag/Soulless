<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pbSegment = global.pb_segment;
pbGate = scrGetSegmentGate( pbSegment );

var maxRadius = 136;

soulCircleRadius = 32;

var radiusDelta = ( maxRadius - soulCircleRadius ) / 5;
innerRadius = maxRadius - radiusDelta * pbGate;
outerRadius = innerRadius + radiusDelta;

// Current attack progress.
var localSegment = scrFindLocalSegment( pbSegment );
var lightCount = scrGetGateSegmentCount( pbGate );
if( pbGate == 6 ) {
    lightCount = 0;
}
var lightRadius = ( innerRadius + outerRadius ) / 2;
var createDir = 90;
var dirDelta = -360 / lightCount;
for( var i = 0; i &lt; lightCount; i++ ) {
    var lightX = x + lengthdir_x( lightRadius, createDir );
    var lightY = y + lengthdir_y( lightRadius, createDir );
    var light = instance_create( lightX, lightY, oProgressLight );
    light.IsActive = i &lt; localSegment;
    light.image_blend = scrGetGateColor( pbGate );
    var scale = 0.7;
    light.image_xscale = scale;
    light.image_yscale = scale;
    createDir += dirDelta;
}

// Finished gate particles.
var particleRadius = outerRadius;
var particleRadiusDelta = radiusDelta * 3;
for( var i = pbGate - 1; i &gt;= 1; i-- ) {
    repeat( 75 ) {
        var dir = random( 360 );
        var rad = random_range( particleRadius, particleRadius + particleRadiusDelta );
        var particleX = x + lengthdir_x( rad, dir );
        var particleY = y + lengthdir_y( rad, dir );        
        var particle = instance_create( particleX, particleY, oProgressParticle );
        particle.image_blend = scrGetGateColor( i );
        particle.speed = random_range( 0.01, 0.1 );
        particle.direction = random( 360 );
        var scale = irandom_range( 2, 5 ) / 25;
        particle.image_xscale = scale;
        particle.image_yscale = scale;
        particle.baseAlpha = random_range( 0.2, 1 );
    }   
    particleRadius += particleRadiusDelta;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_circle_precision( 128 );
draw_set_color( c_gray );
// Outer circle.
draw_circle( x, y, outerRadius, true );
// Inner circle.
if( pbGate != 6 ) {
    draw_circle( x, y, innerRadius, true );
}
// Soul circle.
draw_circle( x, y, soulCircleRadius, true );
// Soul.

draw_set_color( c_white );
draw_set_circle_precision( 24 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
